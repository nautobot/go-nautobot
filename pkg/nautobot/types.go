// Package nautobot provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.10.1 DO NOT EDIT.
package nautobot

import (
	"encoding/json"
	"fmt"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BasicAuthScopes  = "basicAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
	TokenAuthScopes  = "tokenAuth.Scopes"
)

// Defines values for AccessTypeEnum.
const (
	AccessTypeEnumConsole AccessTypeEnum = "Console"

	AccessTypeEnumGNMI AccessTypeEnum = "gNMI"

	AccessTypeEnumGeneric AccessTypeEnum = "Generic"

	AccessTypeEnumHTTPS AccessTypeEnum = "HTTP(S)"

	AccessTypeEnumNETCONF AccessTypeEnum = "NETCONF"

	AccessTypeEnumREST AccessTypeEnum = "REST"

	AccessTypeEnumRESTCONF AccessTypeEnum = "RESTCONF"

	AccessTypeEnumSNMP AccessTypeEnum = "SNMP"

	AccessTypeEnumSSH AccessTypeEnum = "SSH"
)

// Defines values for AggregateFamilyLabel.
const (
	AggregateFamilyLabelIPv4 AggregateFamilyLabel = "IPv4"

	AggregateFamilyLabelIPv6 AggregateFamilyLabel = "IPv6"
)

// Defines values for AggregateFamilyValue.
const (
	AggregateFamilyValueN4 AggregateFamilyValue = 4

	AggregateFamilyValueN6 AggregateFamilyValue = 6
)

// Defines values for ButtonClassEnum.
const (
	ButtonClassEnumDanger ButtonClassEnum = "danger"

	ButtonClassEnumDefault ButtonClassEnum = "default"

	ButtonClassEnumInfo ButtonClassEnum = "info"

	ButtonClassEnumLink ButtonClassEnum = "link"

	ButtonClassEnumPrimary ButtonClassEnum = "primary"

	ButtonClassEnumSuccess ButtonClassEnum = "success"

	ButtonClassEnumWarning ButtonClassEnum = "warning"
)

// Defines values for CableLengthUnitLabel.
const (
	CableLengthUnitLabelCentimeters CableLengthUnitLabel = "Centimeters"

	CableLengthUnitLabelFeet CableLengthUnitLabel = "Feet"

	CableLengthUnitLabelInches CableLengthUnitLabel = "Inches"

	CableLengthUnitLabelMeters CableLengthUnitLabel = "Meters"
)

// Defines values for CableLengthUnitValue.
const (
	CableLengthUnitValueCm CableLengthUnitValue = "cm"

	CableLengthUnitValueFt CableLengthUnitValue = "ft"

	CableLengthUnitValueIn CableLengthUnitValue = "in"

	CableLengthUnitValueM CableLengthUnitValue = "m"
)

// Defines values for CableStatusLabel.
const (
	CableStatusLabelConnected CableStatusLabel = "Connected"

	CableStatusLabelDecommissioning CableStatusLabel = "Decommissioning"

	CableStatusLabelPlanned CableStatusLabel = "Planned"
)

// Defines values for CableStatusValue.
const (
	CableStatusValueConnected CableStatusValue = "connected"

	CableStatusValueDecommissioning CableStatusValue = "decommissioning"

	CableStatusValuePlanned CableStatusValue = "planned"
)

// Defines values for CableTypeChoices.
const (
	CableTypeChoicesAoc CableTypeChoices = "aoc"

	CableTypeChoicesCat3 CableTypeChoices = "cat3"

	CableTypeChoicesCat5 CableTypeChoices = "cat5"

	CableTypeChoicesCat5e CableTypeChoices = "cat5e"

	CableTypeChoicesCat6 CableTypeChoices = "cat6"

	CableTypeChoicesCat6a CableTypeChoices = "cat6a"

	CableTypeChoicesCat7 CableTypeChoices = "cat7"

	CableTypeChoicesCat7a CableTypeChoices = "cat7a"

	CableTypeChoicesCat8 CableTypeChoices = "cat8"

	CableTypeChoicesCoaxial CableTypeChoices = "coaxial"

	CableTypeChoicesDacActive CableTypeChoices = "dac-active"

	CableTypeChoicesDacPassive CableTypeChoices = "dac-passive"

	CableTypeChoicesMmf CableTypeChoices = "mmf"

	CableTypeChoicesMmfOm1 CableTypeChoices = "mmf-om1"

	CableTypeChoicesMmfOm2 CableTypeChoices = "mmf-om2"

	CableTypeChoicesMmfOm3 CableTypeChoices = "mmf-om3"

	CableTypeChoicesMmfOm4 CableTypeChoices = "mmf-om4"

	CableTypeChoicesMrj21Trunk CableTypeChoices = "mrj21-trunk"

	CableTypeChoicesPower CableTypeChoices = "power"

	CableTypeChoicesSmf CableTypeChoices = "smf"

	CableTypeChoicesSmfOs1 CableTypeChoices = "smf-os1"

	CableTypeChoicesSmfOs2 CableTypeChoices = "smf-os2"
)

// Defines values for CircuitStatusLabel.
const (
	CircuitStatusLabelActive CircuitStatusLabel = "Active"

	CircuitStatusLabelDecommissioned CircuitStatusLabel = "Decommissioned"

	CircuitStatusLabelDeprovisioning CircuitStatusLabel = "Deprovisioning"

	CircuitStatusLabelOffline CircuitStatusLabel = "Offline"

	CircuitStatusLabelPlanned CircuitStatusLabel = "Planned"

	CircuitStatusLabelProvisioning CircuitStatusLabel = "Provisioning"
)

// Defines values for CircuitStatusValue.
const (
	CircuitStatusValueActive CircuitStatusValue = "active"

	CircuitStatusValueDecommissioned CircuitStatusValue = "decommissioned"

	CircuitStatusValueDeprovisioning CircuitStatusValue = "deprovisioning"

	CircuitStatusValueOffline CircuitStatusValue = "offline"

	CircuitStatusValuePlanned CircuitStatusValue = "planned"

	CircuitStatusValueProvisioning CircuitStatusValue = "provisioning"
)

// Defines values for ConsolePortTypeLabel.
const (
	ConsolePortTypeLabelDB25 ConsolePortTypeLabel = "DB-25"

	ConsolePortTypeLabelDE9 ConsolePortTypeLabel = "DE-9"

	ConsolePortTypeLabelOther ConsolePortTypeLabel = "Other"

	ConsolePortTypeLabelRJ11 ConsolePortTypeLabel = "RJ-11"

	ConsolePortTypeLabelRJ12 ConsolePortTypeLabel = "RJ-12"

	ConsolePortTypeLabelRJ45 ConsolePortTypeLabel = "RJ-45"

	ConsolePortTypeLabelUSBMicroA ConsolePortTypeLabel = "USB Micro A"

	ConsolePortTypeLabelUSBMicroB ConsolePortTypeLabel = "USB Micro B"

	ConsolePortTypeLabelUSBMiniA ConsolePortTypeLabel = "USB Mini A"

	ConsolePortTypeLabelUSBMiniB ConsolePortTypeLabel = "USB Mini B"

	ConsolePortTypeLabelUSBTypeA ConsolePortTypeLabel = "USB Type A"

	ConsolePortTypeLabelUSBTypeB ConsolePortTypeLabel = "USB Type B"

	ConsolePortTypeLabelUSBTypeC ConsolePortTypeLabel = "USB Type C"
)

// Defines values for ConsolePortTypeValue.
const (
	ConsolePortTypeValueDb25 ConsolePortTypeValue = "db-25"

	ConsolePortTypeValueDe9 ConsolePortTypeValue = "de-9"

	ConsolePortTypeValueOther ConsolePortTypeValue = "other"

	ConsolePortTypeValueRj11 ConsolePortTypeValue = "rj-11"

	ConsolePortTypeValueRj12 ConsolePortTypeValue = "rj-12"

	ConsolePortTypeValueRj45 ConsolePortTypeValue = "rj-45"

	ConsolePortTypeValueUsbA ConsolePortTypeValue = "usb-a"

	ConsolePortTypeValueUsbB ConsolePortTypeValue = "usb-b"

	ConsolePortTypeValueUsbC ConsolePortTypeValue = "usb-c"

	ConsolePortTypeValueUsbMicroA ConsolePortTypeValue = "usb-micro-a"

	ConsolePortTypeValueUsbMicroB ConsolePortTypeValue = "usb-micro-b"

	ConsolePortTypeValueUsbMiniA ConsolePortTypeValue = "usb-mini-a"

	ConsolePortTypeValueUsbMiniB ConsolePortTypeValue = "usb-mini-b"
)

// Defines values for ConsolePortTemplateTypeLabel.
const (
	ConsolePortTemplateTypeLabelDB25 ConsolePortTemplateTypeLabel = "DB-25"

	ConsolePortTemplateTypeLabelDE9 ConsolePortTemplateTypeLabel = "DE-9"

	ConsolePortTemplateTypeLabelOther ConsolePortTemplateTypeLabel = "Other"

	ConsolePortTemplateTypeLabelRJ11 ConsolePortTemplateTypeLabel = "RJ-11"

	ConsolePortTemplateTypeLabelRJ12 ConsolePortTemplateTypeLabel = "RJ-12"

	ConsolePortTemplateTypeLabelRJ45 ConsolePortTemplateTypeLabel = "RJ-45"

	ConsolePortTemplateTypeLabelUSBMicroA ConsolePortTemplateTypeLabel = "USB Micro A"

	ConsolePortTemplateTypeLabelUSBMicroB ConsolePortTemplateTypeLabel = "USB Micro B"

	ConsolePortTemplateTypeLabelUSBMiniA ConsolePortTemplateTypeLabel = "USB Mini A"

	ConsolePortTemplateTypeLabelUSBMiniB ConsolePortTemplateTypeLabel = "USB Mini B"

	ConsolePortTemplateTypeLabelUSBTypeA ConsolePortTemplateTypeLabel = "USB Type A"

	ConsolePortTemplateTypeLabelUSBTypeB ConsolePortTemplateTypeLabel = "USB Type B"

	ConsolePortTemplateTypeLabelUSBTypeC ConsolePortTemplateTypeLabel = "USB Type C"
)

// Defines values for ConsolePortTemplateTypeValue.
const (
	ConsolePortTemplateTypeValueDb25 ConsolePortTemplateTypeValue = "db-25"

	ConsolePortTemplateTypeValueDe9 ConsolePortTemplateTypeValue = "de-9"

	ConsolePortTemplateTypeValueOther ConsolePortTemplateTypeValue = "other"

	ConsolePortTemplateTypeValueRj11 ConsolePortTemplateTypeValue = "rj-11"

	ConsolePortTemplateTypeValueRj12 ConsolePortTemplateTypeValue = "rj-12"

	ConsolePortTemplateTypeValueRj45 ConsolePortTemplateTypeValue = "rj-45"

	ConsolePortTemplateTypeValueUsbA ConsolePortTemplateTypeValue = "usb-a"

	ConsolePortTemplateTypeValueUsbB ConsolePortTemplateTypeValue = "usb-b"

	ConsolePortTemplateTypeValueUsbC ConsolePortTemplateTypeValue = "usb-c"

	ConsolePortTemplateTypeValueUsbMicroA ConsolePortTemplateTypeValue = "usb-micro-a"

	ConsolePortTemplateTypeValueUsbMicroB ConsolePortTemplateTypeValue = "usb-micro-b"

	ConsolePortTemplateTypeValueUsbMiniA ConsolePortTemplateTypeValue = "usb-mini-a"

	ConsolePortTemplateTypeValueUsbMiniB ConsolePortTemplateTypeValue = "usb-mini-b"
)

// Defines values for ConsolePortTypeChoices.
const (
	ConsolePortTypeChoicesDb25 ConsolePortTypeChoices = "db-25"

	ConsolePortTypeChoicesDe9 ConsolePortTypeChoices = "de-9"

	ConsolePortTypeChoicesOther ConsolePortTypeChoices = "other"

	ConsolePortTypeChoicesRj11 ConsolePortTypeChoices = "rj-11"

	ConsolePortTypeChoicesRj12 ConsolePortTypeChoices = "rj-12"

	ConsolePortTypeChoicesRj45 ConsolePortTypeChoices = "rj-45"

	ConsolePortTypeChoicesUsbA ConsolePortTypeChoices = "usb-a"

	ConsolePortTypeChoicesUsbB ConsolePortTypeChoices = "usb-b"

	ConsolePortTypeChoicesUsbC ConsolePortTypeChoices = "usb-c"

	ConsolePortTypeChoicesUsbMicroA ConsolePortTypeChoices = "usb-micro-a"

	ConsolePortTypeChoicesUsbMicroB ConsolePortTypeChoices = "usb-micro-b"

	ConsolePortTypeChoicesUsbMiniA ConsolePortTypeChoices = "usb-mini-a"

	ConsolePortTypeChoicesUsbMiniB ConsolePortTypeChoices = "usb-mini-b"
)

// Defines values for ConsoleServerPortTypeLabel.
const (
	ConsoleServerPortTypeLabelDB25 ConsoleServerPortTypeLabel = "DB-25"

	ConsoleServerPortTypeLabelDE9 ConsoleServerPortTypeLabel = "DE-9"

	ConsoleServerPortTypeLabelOther ConsoleServerPortTypeLabel = "Other"

	ConsoleServerPortTypeLabelRJ11 ConsoleServerPortTypeLabel = "RJ-11"

	ConsoleServerPortTypeLabelRJ12 ConsoleServerPortTypeLabel = "RJ-12"

	ConsoleServerPortTypeLabelRJ45 ConsoleServerPortTypeLabel = "RJ-45"

	ConsoleServerPortTypeLabelUSBMicroA ConsoleServerPortTypeLabel = "USB Micro A"

	ConsoleServerPortTypeLabelUSBMicroB ConsoleServerPortTypeLabel = "USB Micro B"

	ConsoleServerPortTypeLabelUSBMiniA ConsoleServerPortTypeLabel = "USB Mini A"

	ConsoleServerPortTypeLabelUSBMiniB ConsoleServerPortTypeLabel = "USB Mini B"

	ConsoleServerPortTypeLabelUSBTypeA ConsoleServerPortTypeLabel = "USB Type A"

	ConsoleServerPortTypeLabelUSBTypeB ConsoleServerPortTypeLabel = "USB Type B"

	ConsoleServerPortTypeLabelUSBTypeC ConsoleServerPortTypeLabel = "USB Type C"
)

// Defines values for ConsoleServerPortTypeValue.
const (
	ConsoleServerPortTypeValueDb25 ConsoleServerPortTypeValue = "db-25"

	ConsoleServerPortTypeValueDe9 ConsoleServerPortTypeValue = "de-9"

	ConsoleServerPortTypeValueOther ConsoleServerPortTypeValue = "other"

	ConsoleServerPortTypeValueRj11 ConsoleServerPortTypeValue = "rj-11"

	ConsoleServerPortTypeValueRj12 ConsoleServerPortTypeValue = "rj-12"

	ConsoleServerPortTypeValueRj45 ConsoleServerPortTypeValue = "rj-45"

	ConsoleServerPortTypeValueUsbA ConsoleServerPortTypeValue = "usb-a"

	ConsoleServerPortTypeValueUsbB ConsoleServerPortTypeValue = "usb-b"

	ConsoleServerPortTypeValueUsbC ConsoleServerPortTypeValue = "usb-c"

	ConsoleServerPortTypeValueUsbMicroA ConsoleServerPortTypeValue = "usb-micro-a"

	ConsoleServerPortTypeValueUsbMicroB ConsoleServerPortTypeValue = "usb-micro-b"

	ConsoleServerPortTypeValueUsbMiniA ConsoleServerPortTypeValue = "usb-mini-a"

	ConsoleServerPortTypeValueUsbMiniB ConsoleServerPortTypeValue = "usb-mini-b"
)

// Defines values for ConsoleServerPortTemplateTypeLabel.
const (
	ConsoleServerPortTemplateTypeLabelDB25 ConsoleServerPortTemplateTypeLabel = "DB-25"

	ConsoleServerPortTemplateTypeLabelDE9 ConsoleServerPortTemplateTypeLabel = "DE-9"

	ConsoleServerPortTemplateTypeLabelOther ConsoleServerPortTemplateTypeLabel = "Other"

	ConsoleServerPortTemplateTypeLabelRJ11 ConsoleServerPortTemplateTypeLabel = "RJ-11"

	ConsoleServerPortTemplateTypeLabelRJ12 ConsoleServerPortTemplateTypeLabel = "RJ-12"

	ConsoleServerPortTemplateTypeLabelRJ45 ConsoleServerPortTemplateTypeLabel = "RJ-45"

	ConsoleServerPortTemplateTypeLabelUSBMicroA ConsoleServerPortTemplateTypeLabel = "USB Micro A"

	ConsoleServerPortTemplateTypeLabelUSBMicroB ConsoleServerPortTemplateTypeLabel = "USB Micro B"

	ConsoleServerPortTemplateTypeLabelUSBMiniA ConsoleServerPortTemplateTypeLabel = "USB Mini A"

	ConsoleServerPortTemplateTypeLabelUSBMiniB ConsoleServerPortTemplateTypeLabel = "USB Mini B"

	ConsoleServerPortTemplateTypeLabelUSBTypeA ConsoleServerPortTemplateTypeLabel = "USB Type A"

	ConsoleServerPortTemplateTypeLabelUSBTypeB ConsoleServerPortTemplateTypeLabel = "USB Type B"

	ConsoleServerPortTemplateTypeLabelUSBTypeC ConsoleServerPortTemplateTypeLabel = "USB Type C"
)

// Defines values for ConsoleServerPortTemplateTypeValue.
const (
	ConsoleServerPortTemplateTypeValueDb25 ConsoleServerPortTemplateTypeValue = "db-25"

	ConsoleServerPortTemplateTypeValueDe9 ConsoleServerPortTemplateTypeValue = "de-9"

	ConsoleServerPortTemplateTypeValueOther ConsoleServerPortTemplateTypeValue = "other"

	ConsoleServerPortTemplateTypeValueRj11 ConsoleServerPortTemplateTypeValue = "rj-11"

	ConsoleServerPortTemplateTypeValueRj12 ConsoleServerPortTemplateTypeValue = "rj-12"

	ConsoleServerPortTemplateTypeValueRj45 ConsoleServerPortTemplateTypeValue = "rj-45"

	ConsoleServerPortTemplateTypeValueUsbA ConsoleServerPortTemplateTypeValue = "usb-a"

	ConsoleServerPortTemplateTypeValueUsbB ConsoleServerPortTemplateTypeValue = "usb-b"

	ConsoleServerPortTemplateTypeValueUsbC ConsoleServerPortTemplateTypeValue = "usb-c"

	ConsoleServerPortTemplateTypeValueUsbMicroA ConsoleServerPortTemplateTypeValue = "usb-micro-a"

	ConsoleServerPortTemplateTypeValueUsbMicroB ConsoleServerPortTemplateTypeValue = "usb-micro-b"

	ConsoleServerPortTemplateTypeValueUsbMiniA ConsoleServerPortTemplateTypeValue = "usb-mini-a"

	ConsoleServerPortTemplateTypeValueUsbMiniB ConsoleServerPortTemplateTypeValue = "usb-mini-b"
)

// Defines values for CustomFieldFilterLogicLabel.
const (
	CustomFieldFilterLogicLabelDisabled CustomFieldFilterLogicLabel = "Disabled"

	CustomFieldFilterLogicLabelExact CustomFieldFilterLogicLabel = "Exact"

	CustomFieldFilterLogicLabelLoose CustomFieldFilterLogicLabel = "Loose"
)

// Defines values for CustomFieldFilterLogicValue.
const (
	CustomFieldFilterLogicValueDisabled CustomFieldFilterLogicValue = "disabled"

	CustomFieldFilterLogicValueExact CustomFieldFilterLogicValue = "exact"

	CustomFieldFilterLogicValueLoose CustomFieldFilterLogicValue = "loose"
)

// Defines values for CustomFieldTypeLabel.
const (
	CustomFieldTypeLabelBooleanTruefalse CustomFieldTypeLabel = "Boolean (true/false)"

	CustomFieldTypeLabelDate CustomFieldTypeLabel = "Date"

	CustomFieldTypeLabelInteger CustomFieldTypeLabel = "Integer"

	CustomFieldTypeLabelJSON CustomFieldTypeLabel = "JSON"

	CustomFieldTypeLabelMultipleSelection CustomFieldTypeLabel = "Multiple selection"

	CustomFieldTypeLabelSelection CustomFieldTypeLabel = "Selection"

	CustomFieldTypeLabelText CustomFieldTypeLabel = "Text"

	CustomFieldTypeLabelURL CustomFieldTypeLabel = "URL"
)

// Defines values for CustomFieldTypeValue.
const (
	CustomFieldTypeValueBoolean CustomFieldTypeValue = "boolean"

	CustomFieldTypeValueDate CustomFieldTypeValue = "date"

	CustomFieldTypeValueInteger CustomFieldTypeValue = "integer"

	CustomFieldTypeValueJson CustomFieldTypeValue = "json"

	CustomFieldTypeValueMultiSelect CustomFieldTypeValue = "multi-select"

	CustomFieldTypeValueSelect CustomFieldTypeValue = "select"

	CustomFieldTypeValueText CustomFieldTypeValue = "text"

	CustomFieldTypeValueUrl CustomFieldTypeValue = "url"
)

// Defines values for CustomFieldTypeChoices.
const (
	CustomFieldTypeChoicesBoolean CustomFieldTypeChoices = "boolean"

	CustomFieldTypeChoicesDate CustomFieldTypeChoices = "date"

	CustomFieldTypeChoicesInteger CustomFieldTypeChoices = "integer"

	CustomFieldTypeChoicesJson CustomFieldTypeChoices = "json"

	CustomFieldTypeChoicesMultiSelect CustomFieldTypeChoices = "multi-select"

	CustomFieldTypeChoicesSelect CustomFieldTypeChoices = "select"

	CustomFieldTypeChoicesText CustomFieldTypeChoices = "text"

	CustomFieldTypeChoicesUrl CustomFieldTypeChoices = "url"
)

// Defines values for DeviceFaceLabel.
const (
	DeviceFaceLabelFront DeviceFaceLabel = "Front"

	DeviceFaceLabelRear DeviceFaceLabel = "Rear"
)

// Defines values for DeviceFaceValue.
const (
	DeviceFaceValueFront DeviceFaceValue = "front"

	DeviceFaceValueRear DeviceFaceValue = "rear"
)

// Defines values for DeviceStatusLabel.
const (
	DeviceStatusLabelActive DeviceStatusLabel = "Active"

	DeviceStatusLabelDecommissioning DeviceStatusLabel = "Decommissioning"

	DeviceStatusLabelFailed DeviceStatusLabel = "Failed"

	DeviceStatusLabelInventory DeviceStatusLabel = "Inventory"

	DeviceStatusLabelOffline DeviceStatusLabel = "Offline"

	DeviceStatusLabelPlanned DeviceStatusLabel = "Planned"

	DeviceStatusLabelStaged DeviceStatusLabel = "Staged"
)

// Defines values for DeviceStatusValue.
const (
	DeviceStatusValueActive DeviceStatusValue = "active"

	DeviceStatusValueDecommissioning DeviceStatusValue = "decommissioning"

	DeviceStatusValueFailed DeviceStatusValue = "failed"

	DeviceStatusValueInventory DeviceStatusValue = "inventory"

	DeviceStatusValueOffline DeviceStatusValue = "offline"

	DeviceStatusValuePlanned DeviceStatusValue = "planned"

	DeviceStatusValueStaged DeviceStatusValue = "staged"
)

// Defines values for DeviceTypeSubdeviceRoleLabel.
const (
	DeviceTypeSubdeviceRoleLabelChild DeviceTypeSubdeviceRoleLabel = "Child"

	DeviceTypeSubdeviceRoleLabelParent DeviceTypeSubdeviceRoleLabel = "Parent"
)

// Defines values for DeviceTypeSubdeviceRoleValue.
const (
	DeviceTypeSubdeviceRoleValueChild DeviceTypeSubdeviceRoleValue = "child"

	DeviceTypeSubdeviceRoleValueParent DeviceTypeSubdeviceRoleValue = "parent"
)

// Defines values for DeviceWithConfigContextFaceLabel.
const (
	DeviceWithConfigContextFaceLabelFront DeviceWithConfigContextFaceLabel = "Front"

	DeviceWithConfigContextFaceLabelRear DeviceWithConfigContextFaceLabel = "Rear"
)

// Defines values for DeviceWithConfigContextFaceValue.
const (
	DeviceWithConfigContextFaceValueFront DeviceWithConfigContextFaceValue = "front"

	DeviceWithConfigContextFaceValueRear DeviceWithConfigContextFaceValue = "rear"
)

// Defines values for DeviceWithConfigContextStatusLabel.
const (
	DeviceWithConfigContextStatusLabelActive DeviceWithConfigContextStatusLabel = "Active"

	DeviceWithConfigContextStatusLabelDecommissioning DeviceWithConfigContextStatusLabel = "Decommissioning"

	DeviceWithConfigContextStatusLabelFailed DeviceWithConfigContextStatusLabel = "Failed"

	DeviceWithConfigContextStatusLabelInventory DeviceWithConfigContextStatusLabel = "Inventory"

	DeviceWithConfigContextStatusLabelOffline DeviceWithConfigContextStatusLabel = "Offline"

	DeviceWithConfigContextStatusLabelPlanned DeviceWithConfigContextStatusLabel = "Planned"

	DeviceWithConfigContextStatusLabelStaged DeviceWithConfigContextStatusLabel = "Staged"
)

// Defines values for DeviceWithConfigContextStatusValue.
const (
	DeviceWithConfigContextStatusValueActive DeviceWithConfigContextStatusValue = "active"

	DeviceWithConfigContextStatusValueDecommissioning DeviceWithConfigContextStatusValue = "decommissioning"

	DeviceWithConfigContextStatusValueFailed DeviceWithConfigContextStatusValue = "failed"

	DeviceWithConfigContextStatusValueInventory DeviceWithConfigContextStatusValue = "inventory"

	DeviceWithConfigContextStatusValueOffline DeviceWithConfigContextStatusValue = "offline"

	DeviceWithConfigContextStatusValuePlanned DeviceWithConfigContextStatusValue = "planned"

	DeviceWithConfigContextStatusValueStaged DeviceWithConfigContextStatusValue = "staged"
)

// Defines values for FaceEnum.
const (
	FaceEnumFront FaceEnum = "front"

	FaceEnumRear FaceEnum = "rear"
)

// Defines values for FamilyEnum.
const (
	FamilyEnumN4 FamilyEnum = 4

	FamilyEnumN6 FamilyEnum = 6
)

// Defines values for FeedLegEnum.
const (
	FeedLegEnumA FeedLegEnum = "A"

	FeedLegEnumB FeedLegEnum = "B"

	FeedLegEnumC FeedLegEnum = "C"
)

// Defines values for FilterLogicEnum.
const (
	FilterLogicEnumDisabled FilterLogicEnum = "disabled"

	FilterLogicEnumExact FilterLogicEnum = "exact"

	FilterLogicEnumLoose FilterLogicEnum = "loose"
)

// Defines values for FrontPortTypeLabel.
const (
	FrontPortTypeLabelBNC FrontPortTypeLabel = "BNC"

	FrontPortTypeLabelCS FrontPortTypeLabel = "CS"

	FrontPortTypeLabelFC FrontPortTypeLabel = "FC"

	FrontPortTypeLabelGG45 FrontPortTypeLabel = "GG45"

	FrontPortTypeLabelLC FrontPortTypeLabel = "LC"

	FrontPortTypeLabelLCAPC FrontPortTypeLabel = "LC/APC"

	FrontPortTypeLabelLSH FrontPortTypeLabel = "LSH"

	FrontPortTypeLabelLSHAPC FrontPortTypeLabel = "LSH/APC"

	FrontPortTypeLabelMPO FrontPortTypeLabel = "MPO"

	FrontPortTypeLabelMRJ21 FrontPortTypeLabel = "MRJ21"

	FrontPortTypeLabelMTRJ FrontPortTypeLabel = "MTRJ"

	FrontPortTypeLabelN110Punch FrontPortTypeLabel = "110 Punch"

	FrontPortTypeLabelN8P2C FrontPortTypeLabel = "8P2C"

	FrontPortTypeLabelN8P4C FrontPortTypeLabel = "8P4C"

	FrontPortTypeLabelN8P6C FrontPortTypeLabel = "8P6C"

	FrontPortTypeLabelN8P8C FrontPortTypeLabel = "8P8C"

	FrontPortTypeLabelSC FrontPortTypeLabel = "SC"

	FrontPortTypeLabelSCAPC FrontPortTypeLabel = "SC/APC"

	FrontPortTypeLabelSN FrontPortTypeLabel = "SN"

	FrontPortTypeLabelST FrontPortTypeLabel = "ST"

	FrontPortTypeLabelSplice FrontPortTypeLabel = "Splice"

	FrontPortTypeLabelTERA1P FrontPortTypeLabel = "TERA 1P"

	FrontPortTypeLabelTERA2P FrontPortTypeLabel = "TERA 2P"

	FrontPortTypeLabelTERA4P FrontPortTypeLabel = "TERA 4P"

	FrontPortTypeLabelURMP2 FrontPortTypeLabel = "URM-P2"

	FrontPortTypeLabelURMP4 FrontPortTypeLabel = "URM-P4"

	FrontPortTypeLabelURMP8 FrontPortTypeLabel = "URM-P8"
)

// Defines values for FrontPortTypeValue.
const (
	FrontPortTypeValueBnc FrontPortTypeValue = "bnc"

	FrontPortTypeValueCs FrontPortTypeValue = "cs"

	FrontPortTypeValueFc FrontPortTypeValue = "fc"

	FrontPortTypeValueGg45 FrontPortTypeValue = "gg45"

	FrontPortTypeValueLc FrontPortTypeValue = "lc"

	FrontPortTypeValueLcApc FrontPortTypeValue = "lc-apc"

	FrontPortTypeValueLsh FrontPortTypeValue = "lsh"

	FrontPortTypeValueLshApc FrontPortTypeValue = "lsh-apc"

	FrontPortTypeValueMpo FrontPortTypeValue = "mpo"

	FrontPortTypeValueMrj21 FrontPortTypeValue = "mrj21"

	FrontPortTypeValueMtrj FrontPortTypeValue = "mtrj"

	FrontPortTypeValueN110Punch FrontPortTypeValue = "110-punch"

	FrontPortTypeValueN8p2c FrontPortTypeValue = "8p2c"

	FrontPortTypeValueN8p4c FrontPortTypeValue = "8p4c"

	FrontPortTypeValueN8p6c FrontPortTypeValue = "8p6c"

	FrontPortTypeValueN8p8c FrontPortTypeValue = "8p8c"

	FrontPortTypeValueSc FrontPortTypeValue = "sc"

	FrontPortTypeValueScApc FrontPortTypeValue = "sc-apc"

	FrontPortTypeValueSn FrontPortTypeValue = "sn"

	FrontPortTypeValueSplice FrontPortTypeValue = "splice"

	FrontPortTypeValueSt FrontPortTypeValue = "st"

	FrontPortTypeValueTera1p FrontPortTypeValue = "tera-1p"

	FrontPortTypeValueTera2p FrontPortTypeValue = "tera-2p"

	FrontPortTypeValueTera4p FrontPortTypeValue = "tera-4p"

	FrontPortTypeValueUrmP2 FrontPortTypeValue = "urm-p2"

	FrontPortTypeValueUrmP4 FrontPortTypeValue = "urm-p4"

	FrontPortTypeValueUrmP8 FrontPortTypeValue = "urm-p8"
)

// Defines values for FrontPortTemplateTypeLabel.
const (
	FrontPortTemplateTypeLabelBNC FrontPortTemplateTypeLabel = "BNC"

	FrontPortTemplateTypeLabelCS FrontPortTemplateTypeLabel = "CS"

	FrontPortTemplateTypeLabelFC FrontPortTemplateTypeLabel = "FC"

	FrontPortTemplateTypeLabelGG45 FrontPortTemplateTypeLabel = "GG45"

	FrontPortTemplateTypeLabelLC FrontPortTemplateTypeLabel = "LC"

	FrontPortTemplateTypeLabelLCAPC FrontPortTemplateTypeLabel = "LC/APC"

	FrontPortTemplateTypeLabelLSH FrontPortTemplateTypeLabel = "LSH"

	FrontPortTemplateTypeLabelLSHAPC FrontPortTemplateTypeLabel = "LSH/APC"

	FrontPortTemplateTypeLabelMPO FrontPortTemplateTypeLabel = "MPO"

	FrontPortTemplateTypeLabelMRJ21 FrontPortTemplateTypeLabel = "MRJ21"

	FrontPortTemplateTypeLabelMTRJ FrontPortTemplateTypeLabel = "MTRJ"

	FrontPortTemplateTypeLabelN110Punch FrontPortTemplateTypeLabel = "110 Punch"

	FrontPortTemplateTypeLabelN8P2C FrontPortTemplateTypeLabel = "8P2C"

	FrontPortTemplateTypeLabelN8P4C FrontPortTemplateTypeLabel = "8P4C"

	FrontPortTemplateTypeLabelN8P6C FrontPortTemplateTypeLabel = "8P6C"

	FrontPortTemplateTypeLabelN8P8C FrontPortTemplateTypeLabel = "8P8C"

	FrontPortTemplateTypeLabelSC FrontPortTemplateTypeLabel = "SC"

	FrontPortTemplateTypeLabelSCAPC FrontPortTemplateTypeLabel = "SC/APC"

	FrontPortTemplateTypeLabelSN FrontPortTemplateTypeLabel = "SN"

	FrontPortTemplateTypeLabelST FrontPortTemplateTypeLabel = "ST"

	FrontPortTemplateTypeLabelSplice FrontPortTemplateTypeLabel = "Splice"

	FrontPortTemplateTypeLabelTERA1P FrontPortTemplateTypeLabel = "TERA 1P"

	FrontPortTemplateTypeLabelTERA2P FrontPortTemplateTypeLabel = "TERA 2P"

	FrontPortTemplateTypeLabelTERA4P FrontPortTemplateTypeLabel = "TERA 4P"

	FrontPortTemplateTypeLabelURMP2 FrontPortTemplateTypeLabel = "URM-P2"

	FrontPortTemplateTypeLabelURMP4 FrontPortTemplateTypeLabel = "URM-P4"

	FrontPortTemplateTypeLabelURMP8 FrontPortTemplateTypeLabel = "URM-P8"
)

// Defines values for FrontPortTemplateTypeValue.
const (
	FrontPortTemplateTypeValueBnc FrontPortTemplateTypeValue = "bnc"

	FrontPortTemplateTypeValueCs FrontPortTemplateTypeValue = "cs"

	FrontPortTemplateTypeValueFc FrontPortTemplateTypeValue = "fc"

	FrontPortTemplateTypeValueGg45 FrontPortTemplateTypeValue = "gg45"

	FrontPortTemplateTypeValueLc FrontPortTemplateTypeValue = "lc"

	FrontPortTemplateTypeValueLcApc FrontPortTemplateTypeValue = "lc-apc"

	FrontPortTemplateTypeValueLsh FrontPortTemplateTypeValue = "lsh"

	FrontPortTemplateTypeValueLshApc FrontPortTemplateTypeValue = "lsh-apc"

	FrontPortTemplateTypeValueMpo FrontPortTemplateTypeValue = "mpo"

	FrontPortTemplateTypeValueMrj21 FrontPortTemplateTypeValue = "mrj21"

	FrontPortTemplateTypeValueMtrj FrontPortTemplateTypeValue = "mtrj"

	FrontPortTemplateTypeValueN110Punch FrontPortTemplateTypeValue = "110-punch"

	FrontPortTemplateTypeValueN8p2c FrontPortTemplateTypeValue = "8p2c"

	FrontPortTemplateTypeValueN8p4c FrontPortTemplateTypeValue = "8p4c"

	FrontPortTemplateTypeValueN8p6c FrontPortTemplateTypeValue = "8p6c"

	FrontPortTemplateTypeValueN8p8c FrontPortTemplateTypeValue = "8p8c"

	FrontPortTemplateTypeValueSc FrontPortTemplateTypeValue = "sc"

	FrontPortTemplateTypeValueScApc FrontPortTemplateTypeValue = "sc-apc"

	FrontPortTemplateTypeValueSn FrontPortTemplateTypeValue = "sn"

	FrontPortTemplateTypeValueSplice FrontPortTemplateTypeValue = "splice"

	FrontPortTemplateTypeValueSt FrontPortTemplateTypeValue = "st"

	FrontPortTemplateTypeValueTera1p FrontPortTemplateTypeValue = "tera-1p"

	FrontPortTemplateTypeValueTera2p FrontPortTemplateTypeValue = "tera-2p"

	FrontPortTemplateTypeValueTera4p FrontPortTemplateTypeValue = "tera-4p"

	FrontPortTemplateTypeValueUrmP2 FrontPortTemplateTypeValue = "urm-p2"

	FrontPortTemplateTypeValueUrmP4 FrontPortTemplateTypeValue = "urm-p4"

	FrontPortTemplateTypeValueUrmP8 FrontPortTemplateTypeValue = "urm-p8"
)

// Defines values for HttpMethodEnum.
const (
	HttpMethodEnumDELETE HttpMethodEnum = "DELETE"

	HttpMethodEnumGET HttpMethodEnum = "GET"

	HttpMethodEnumPATCH HttpMethodEnum = "PATCH"

	HttpMethodEnumPOST HttpMethodEnum = "POST"

	HttpMethodEnumPUT HttpMethodEnum = "PUT"
)

// Defines values for IPAddressFamilyLabel.
const (
	IPAddressFamilyLabelIPv4 IPAddressFamilyLabel = "IPv4"

	IPAddressFamilyLabelIPv6 IPAddressFamilyLabel = "IPv6"
)

// Defines values for IPAddressFamilyValue.
const (
	IPAddressFamilyValueN4 IPAddressFamilyValue = 4

	IPAddressFamilyValueN6 IPAddressFamilyValue = 6
)

// Defines values for IPAddressRoleLabel.
const (
	IPAddressRoleLabelAnycast IPAddressRoleLabel = "Anycast"

	IPAddressRoleLabelCARP IPAddressRoleLabel = "CARP"

	IPAddressRoleLabelGLBP IPAddressRoleLabel = "GLBP"

	IPAddressRoleLabelHSRP IPAddressRoleLabel = "HSRP"

	IPAddressRoleLabelLoopback IPAddressRoleLabel = "Loopback"

	IPAddressRoleLabelSecondary IPAddressRoleLabel = "Secondary"

	IPAddressRoleLabelVIP IPAddressRoleLabel = "VIP"

	IPAddressRoleLabelVRRP IPAddressRoleLabel = "VRRP"
)

// Defines values for IPAddressRoleValue.
const (
	IPAddressRoleValueAnycast IPAddressRoleValue = "anycast"

	IPAddressRoleValueCarp IPAddressRoleValue = "carp"

	IPAddressRoleValueGlbp IPAddressRoleValue = "glbp"

	IPAddressRoleValueHsrp IPAddressRoleValue = "hsrp"

	IPAddressRoleValueLoopback IPAddressRoleValue = "loopback"

	IPAddressRoleValueSecondary IPAddressRoleValue = "secondary"

	IPAddressRoleValueVip IPAddressRoleValue = "vip"

	IPAddressRoleValueVrrp IPAddressRoleValue = "vrrp"
)

// Defines values for IPAddressStatusLabel.
const (
	IPAddressStatusLabelActive IPAddressStatusLabel = "Active"

	IPAddressStatusLabelDHCP IPAddressStatusLabel = "DHCP"

	IPAddressStatusLabelDeprecated IPAddressStatusLabel = "Deprecated"

	IPAddressStatusLabelReserved IPAddressStatusLabel = "Reserved"

	IPAddressStatusLabelSLAAC IPAddressStatusLabel = "SLAAC"
)

// Defines values for IPAddressStatusValue.
const (
	IPAddressStatusValueActive IPAddressStatusValue = "active"

	IPAddressStatusValueDeprecated IPAddressStatusValue = "deprecated"

	IPAddressStatusValueDhcp IPAddressStatusValue = "dhcp"

	IPAddressStatusValueReserved IPAddressStatusValue = "reserved"

	IPAddressStatusValueSlaac IPAddressStatusValue = "slaac"
)

// Defines values for InterfaceModeLabel.
const (
	InterfaceModeLabelAccess InterfaceModeLabel = "Access"

	InterfaceModeLabelTagged InterfaceModeLabel = "Tagged"

	InterfaceModeLabelTaggedAll InterfaceModeLabel = "Tagged (All)"
)

// Defines values for InterfaceModeValue.
const (
	InterfaceModeValueAccess InterfaceModeValue = "access"

	InterfaceModeValueTagged InterfaceModeValue = "tagged"

	InterfaceModeValueTaggedAll InterfaceModeValue = "tagged-all"
)

// Defines values for InterfaceTypeLabel.
const (
	InterfaceTypeLabelCDMA InterfaceTypeLabel = "CDMA"

	InterfaceTypeLabelCFP100GE InterfaceTypeLabel = "CFP (100GE)"

	InterfaceTypeLabelCFP2100GE InterfaceTypeLabel = "CFP2 (100GE)"

	InterfaceTypeLabelCFP2200GE InterfaceTypeLabel = "CFP2 (200GE)"

	InterfaceTypeLabelCFP4100GE InterfaceTypeLabel = "CFP4 (100GE)"

	InterfaceTypeLabelCiscoCPAK100GE InterfaceTypeLabel = "Cisco CPAK (100GE)"

	InterfaceTypeLabelCiscoFlexStack InterfaceTypeLabel = "Cisco FlexStack"

	InterfaceTypeLabelCiscoFlexStackPlus InterfaceTypeLabel = "Cisco FlexStack Plus"

	InterfaceTypeLabelCiscoStackWise InterfaceTypeLabel = "Cisco StackWise"

	InterfaceTypeLabelCiscoStackWisePlus InterfaceTypeLabel = "Cisco StackWise Plus"

	InterfaceTypeLabelDDR4Gbps InterfaceTypeLabel = "DDR (4 Gbps)"

	InterfaceTypeLabelE12048Mbps InterfaceTypeLabel = "E1 (2.048 Mbps)"

	InterfaceTypeLabelE334Mbps InterfaceTypeLabel = "E3 (34 Mbps)"

	InterfaceTypeLabelEDR25Gbps InterfaceTypeLabel = "EDR (25 Gbps)"

	InterfaceTypeLabelExtremeSummitStack InterfaceTypeLabel = "Extreme SummitStack"

	InterfaceTypeLabelExtremeSummitStack128 InterfaceTypeLabel = "Extreme SummitStack-128"

	InterfaceTypeLabelExtremeSummitStack256 InterfaceTypeLabel = "Extreme SummitStack-256"

	InterfaceTypeLabelExtremeSummitStack512 InterfaceTypeLabel = "Extreme SummitStack-512"

	InterfaceTypeLabelFDR1010Gbps InterfaceTypeLabel = "FDR10 (10 Gbps)"

	InterfaceTypeLabelFDR135Gbps InterfaceTypeLabel = "FDR (13.5 Gbps)"

	InterfaceTypeLabelGBIC1GE InterfaceTypeLabel = "GBIC (1GE)"

	InterfaceTypeLabelGSM InterfaceTypeLabel = "GSM"

	InterfaceTypeLabelHDR50Gbps InterfaceTypeLabel = "HDR (50 Gbps)"

	InterfaceTypeLabelIEEE80211a InterfaceTypeLabel = "IEEE 802.11a"

	InterfaceTypeLabelIEEE80211ac InterfaceTypeLabel = "IEEE 802.11ac"

	InterfaceTypeLabelIEEE80211ad InterfaceTypeLabel = "IEEE 802.11ad"

	InterfaceTypeLabelIEEE80211ax InterfaceTypeLabel = "IEEE 802.11ax"

	InterfaceTypeLabelIEEE80211bg InterfaceTypeLabel = "IEEE 802.11b/g"

	InterfaceTypeLabelIEEE80211n InterfaceTypeLabel = "IEEE 802.11n"

	InterfaceTypeLabelJuniperVCP InterfaceTypeLabel = "Juniper VCP"

	InterfaceTypeLabelLTE InterfaceTypeLabel = "LTE"

	InterfaceTypeLabelLinkAggregationGroupLAG InterfaceTypeLabel = "Link Aggregation Group (LAG)"

	InterfaceTypeLabelN1000BASET1GE InterfaceTypeLabel = "1000BASE-T (1GE)"

	InterfaceTypeLabelN100BASETX10100ME InterfaceTypeLabel = "100BASE-TX (10/100ME)"

	InterfaceTypeLabelN10GBASECX410GE InterfaceTypeLabel = "10GBASE-CX4 (10GE)"

	InterfaceTypeLabelN10GBASET10GE InterfaceTypeLabel = "10GBASE-T (10GE)"

	InterfaceTypeLabelN25GBASET25GE InterfaceTypeLabel = "2.5GBASE-T (2.5GE)"

	InterfaceTypeLabelN5GBASET5GE InterfaceTypeLabel = "5GBASE-T (5GE)"

	InterfaceTypeLabelNDR100Gbps InterfaceTypeLabel = "NDR (100 Gbps)"

	InterfaceTypeLabelOC12STM4 InterfaceTypeLabel = "OC-12/STM-4"

	InterfaceTypeLabelOC1920STM640 InterfaceTypeLabel = "OC-1920/STM-640"

	InterfaceTypeLabelOC192STM64 InterfaceTypeLabel = "OC-192/STM-64"

	InterfaceTypeLabelOC3840STM1234 InterfaceTypeLabel = "OC-3840/STM-1234"

	InterfaceTypeLabelOC3STM1 InterfaceTypeLabel = "OC-3/STM-1"

	InterfaceTypeLabelOC48STM16 InterfaceTypeLabel = "OC-48/STM-16"

	InterfaceTypeLabelOC768STM256 InterfaceTypeLabel = "OC-768/STM-256"

	InterfaceTypeLabelOSFP400GE InterfaceTypeLabel = "OSFP (400GE)"

	InterfaceTypeLabelOther InterfaceTypeLabel = "Other"

	InterfaceTypeLabelQDR8Gbps InterfaceTypeLabel = "QDR (8 Gbps)"

	InterfaceTypeLabelQSFP28100GE InterfaceTypeLabel = "QSFP28 (100GE)"

	InterfaceTypeLabelQSFP28128GFC InterfaceTypeLabel = "QSFP28 (128GFC)"

	InterfaceTypeLabelQSFP2850GE InterfaceTypeLabel = "QSFP28 (50GE)"

	InterfaceTypeLabelQSFP40GE InterfaceTypeLabel = "QSFP+ (40GE)"

	InterfaceTypeLabelQSFP56200GE InterfaceTypeLabel = "QSFP56 (200GE)"

	InterfaceTypeLabelQSFP64GFC InterfaceTypeLabel = "QSFP+ (64GFC)"

	InterfaceTypeLabelQSFPDD400GE InterfaceTypeLabel = "QSFP-DD (400GE)"

	InterfaceTypeLabelSDR2Gbps InterfaceTypeLabel = "SDR (2 Gbps)"

	InterfaceTypeLabelSFP10GE InterfaceTypeLabel = "SFP+ (10GE)"

	InterfaceTypeLabelSFP16GFC InterfaceTypeLabel = "SFP+ (16GFC)"

	InterfaceTypeLabelSFP1GE InterfaceTypeLabel = "SFP (1GE)"

	InterfaceTypeLabelSFP1GFC InterfaceTypeLabel = "SFP (1GFC)"

	InterfaceTypeLabelSFP2825GE InterfaceTypeLabel = "SFP28 (25GE)"

	InterfaceTypeLabelSFP2832GFC InterfaceTypeLabel = "SFP28 (32GFC)"

	InterfaceTypeLabelSFP2GFC InterfaceTypeLabel = "SFP (2GFC)"

	InterfaceTypeLabelSFP4GFC InterfaceTypeLabel = "SFP (4GFC)"

	InterfaceTypeLabelSFP8GFC InterfaceTypeLabel = "SFP+ (8GFC)"

	InterfaceTypeLabelT11544Mbps InterfaceTypeLabel = "T1 (1.544 Mbps)"

	InterfaceTypeLabelT345Mbps InterfaceTypeLabel = "T3 (45 Mbps)"

	InterfaceTypeLabelVirtual InterfaceTypeLabel = "Virtual"

	InterfaceTypeLabelX210GE InterfaceTypeLabel = "X2 (10GE)"

	InterfaceTypeLabelXDR250Gbps InterfaceTypeLabel = "XDR (250 Gbps)"

	InterfaceTypeLabelXENPAK10GE InterfaceTypeLabel = "XENPAK (10GE)"

	InterfaceTypeLabelXFP10GE InterfaceTypeLabel = "XFP (10GE)"
)

// Defines values for InterfaceTypeValue.
const (
	InterfaceTypeValueCdma InterfaceTypeValue = "cdma"

	InterfaceTypeValueCiscoFlexstack InterfaceTypeValue = "cisco-flexstack"

	InterfaceTypeValueCiscoFlexstackPlus InterfaceTypeValue = "cisco-flexstack-plus"

	InterfaceTypeValueCiscoStackwise InterfaceTypeValue = "cisco-stackwise"

	InterfaceTypeValueCiscoStackwisePlus InterfaceTypeValue = "cisco-stackwise-plus"

	InterfaceTypeValueE1 InterfaceTypeValue = "e1"

	InterfaceTypeValueE3 InterfaceTypeValue = "e3"

	InterfaceTypeValueExtremeSummitstack InterfaceTypeValue = "extreme-summitstack"

	InterfaceTypeValueExtremeSummitstack128 InterfaceTypeValue = "extreme-summitstack-128"

	InterfaceTypeValueExtremeSummitstack256 InterfaceTypeValue = "extreme-summitstack-256"

	InterfaceTypeValueExtremeSummitstack512 InterfaceTypeValue = "extreme-summitstack-512"

	InterfaceTypeValueGsm InterfaceTypeValue = "gsm"

	InterfaceTypeValueIeee80211a InterfaceTypeValue = "ieee802.11a"

	InterfaceTypeValueIeee80211ac InterfaceTypeValue = "ieee802.11ac"

	InterfaceTypeValueIeee80211ad InterfaceTypeValue = "ieee802.11ad"

	InterfaceTypeValueIeee80211ax InterfaceTypeValue = "ieee802.11ax"

	InterfaceTypeValueIeee80211g InterfaceTypeValue = "ieee802.11g"

	InterfaceTypeValueIeee80211n InterfaceTypeValue = "ieee802.11n"

	InterfaceTypeValueInfinibandDdr InterfaceTypeValue = "infiniband-ddr"

	InterfaceTypeValueInfinibandEdr InterfaceTypeValue = "infiniband-edr"

	InterfaceTypeValueInfinibandFdr InterfaceTypeValue = "infiniband-fdr"

	InterfaceTypeValueInfinibandFdr10 InterfaceTypeValue = "infiniband-fdr10"

	InterfaceTypeValueInfinibandHdr InterfaceTypeValue = "infiniband-hdr"

	InterfaceTypeValueInfinibandNdr InterfaceTypeValue = "infiniband-ndr"

	InterfaceTypeValueInfinibandQdr InterfaceTypeValue = "infiniband-qdr"

	InterfaceTypeValueInfinibandSdr InterfaceTypeValue = "infiniband-sdr"

	InterfaceTypeValueInfinibandXdr InterfaceTypeValue = "infiniband-xdr"

	InterfaceTypeValueJuniperVcp InterfaceTypeValue = "juniper-vcp"

	InterfaceTypeValueLag InterfaceTypeValue = "lag"

	InterfaceTypeValueLte InterfaceTypeValue = "lte"

	InterfaceTypeValueN1000baseT InterfaceTypeValue = "1000base-t"

	InterfaceTypeValueN1000baseXGbic InterfaceTypeValue = "1000base-x-gbic"

	InterfaceTypeValueN1000baseXSfp InterfaceTypeValue = "1000base-x-sfp"

	InterfaceTypeValueN100baseTx InterfaceTypeValue = "100base-tx"

	InterfaceTypeValueN100gbaseXCfp InterfaceTypeValue = "100gbase-x-cfp"

	InterfaceTypeValueN100gbaseXCfp2 InterfaceTypeValue = "100gbase-x-cfp2"

	InterfaceTypeValueN100gbaseXCfp4 InterfaceTypeValue = "100gbase-x-cfp4"

	InterfaceTypeValueN100gbaseXCpak InterfaceTypeValue = "100gbase-x-cpak"

	InterfaceTypeValueN100gbaseXQsfp28 InterfaceTypeValue = "100gbase-x-qsfp28"

	InterfaceTypeValueN10gbaseCx4 InterfaceTypeValue = "10gbase-cx4"

	InterfaceTypeValueN10gbaseT InterfaceTypeValue = "10gbase-t"

	InterfaceTypeValueN10gbaseXSfpp InterfaceTypeValue = "10gbase-x-sfpp"

	InterfaceTypeValueN10gbaseXX2 InterfaceTypeValue = "10gbase-x-x2"

	InterfaceTypeValueN10gbaseXXenpak InterfaceTypeValue = "10gbase-x-xenpak"

	InterfaceTypeValueN10gbaseXXfp InterfaceTypeValue = "10gbase-x-xfp"

	InterfaceTypeValueN128gfcSfp28 InterfaceTypeValue = "128gfc-sfp28"

	InterfaceTypeValueN16gfcSfpp InterfaceTypeValue = "16gfc-sfpp"

	InterfaceTypeValueN1gfcSfp InterfaceTypeValue = "1gfc-sfp"

	InterfaceTypeValueN200gbaseXCfp2 InterfaceTypeValue = "200gbase-x-cfp2"

	InterfaceTypeValueN200gbaseXQsfp56 InterfaceTypeValue = "200gbase-x-qsfp56"

	InterfaceTypeValueN25gbaseT InterfaceTypeValue = "2.5gbase-t"

	InterfaceTypeValueN25gbaseXSfp28 InterfaceTypeValue = "25gbase-x-sfp28"

	InterfaceTypeValueN2gfcSfp InterfaceTypeValue = "2gfc-sfp"

	InterfaceTypeValueN32gfcSfp28 InterfaceTypeValue = "32gfc-sfp28"

	InterfaceTypeValueN400gbaseXOsfp InterfaceTypeValue = "400gbase-x-osfp"

	InterfaceTypeValueN400gbaseXQsfpdd InterfaceTypeValue = "400gbase-x-qsfpdd"

	InterfaceTypeValueN40gbaseXQsfpp InterfaceTypeValue = "40gbase-x-qsfpp"

	InterfaceTypeValueN4gfcSfp InterfaceTypeValue = "4gfc-sfp"

	InterfaceTypeValueN50gbaseXSfp28 InterfaceTypeValue = "50gbase-x-sfp28"

	InterfaceTypeValueN5gbaseT InterfaceTypeValue = "5gbase-t"

	InterfaceTypeValueN64gfcQsfpp InterfaceTypeValue = "64gfc-qsfpp"

	InterfaceTypeValueN8gfcSfpp InterfaceTypeValue = "8gfc-sfpp"

	InterfaceTypeValueOther InterfaceTypeValue = "other"

	InterfaceTypeValueSonetOc12 InterfaceTypeValue = "sonet-oc12"

	InterfaceTypeValueSonetOc192 InterfaceTypeValue = "sonet-oc192"

	InterfaceTypeValueSonetOc1920 InterfaceTypeValue = "sonet-oc1920"

	InterfaceTypeValueSonetOc3 InterfaceTypeValue = "sonet-oc3"

	InterfaceTypeValueSonetOc3840 InterfaceTypeValue = "sonet-oc3840"

	InterfaceTypeValueSonetOc48 InterfaceTypeValue = "sonet-oc48"

	InterfaceTypeValueSonetOc768 InterfaceTypeValue = "sonet-oc768"

	InterfaceTypeValueT1 InterfaceTypeValue = "t1"

	InterfaceTypeValueT3 InterfaceTypeValue = "t3"

	InterfaceTypeValueVirtual InterfaceTypeValue = "virtual"
)

// Defines values for InterfaceTemplateTypeLabel.
const (
	InterfaceTemplateTypeLabelCDMA InterfaceTemplateTypeLabel = "CDMA"

	InterfaceTemplateTypeLabelCFP100GE InterfaceTemplateTypeLabel = "CFP (100GE)"

	InterfaceTemplateTypeLabelCFP2100GE InterfaceTemplateTypeLabel = "CFP2 (100GE)"

	InterfaceTemplateTypeLabelCFP2200GE InterfaceTemplateTypeLabel = "CFP2 (200GE)"

	InterfaceTemplateTypeLabelCFP4100GE InterfaceTemplateTypeLabel = "CFP4 (100GE)"

	InterfaceTemplateTypeLabelCiscoCPAK100GE InterfaceTemplateTypeLabel = "Cisco CPAK (100GE)"

	InterfaceTemplateTypeLabelCiscoFlexStack InterfaceTemplateTypeLabel = "Cisco FlexStack"

	InterfaceTemplateTypeLabelCiscoFlexStackPlus InterfaceTemplateTypeLabel = "Cisco FlexStack Plus"

	InterfaceTemplateTypeLabelCiscoStackWise InterfaceTemplateTypeLabel = "Cisco StackWise"

	InterfaceTemplateTypeLabelCiscoStackWisePlus InterfaceTemplateTypeLabel = "Cisco StackWise Plus"

	InterfaceTemplateTypeLabelDDR4Gbps InterfaceTemplateTypeLabel = "DDR (4 Gbps)"

	InterfaceTemplateTypeLabelE12048Mbps InterfaceTemplateTypeLabel = "E1 (2.048 Mbps)"

	InterfaceTemplateTypeLabelE334Mbps InterfaceTemplateTypeLabel = "E3 (34 Mbps)"

	InterfaceTemplateTypeLabelEDR25Gbps InterfaceTemplateTypeLabel = "EDR (25 Gbps)"

	InterfaceTemplateTypeLabelExtremeSummitStack InterfaceTemplateTypeLabel = "Extreme SummitStack"

	InterfaceTemplateTypeLabelExtremeSummitStack128 InterfaceTemplateTypeLabel = "Extreme SummitStack-128"

	InterfaceTemplateTypeLabelExtremeSummitStack256 InterfaceTemplateTypeLabel = "Extreme SummitStack-256"

	InterfaceTemplateTypeLabelExtremeSummitStack512 InterfaceTemplateTypeLabel = "Extreme SummitStack-512"

	InterfaceTemplateTypeLabelFDR1010Gbps InterfaceTemplateTypeLabel = "FDR10 (10 Gbps)"

	InterfaceTemplateTypeLabelFDR135Gbps InterfaceTemplateTypeLabel = "FDR (13.5 Gbps)"

	InterfaceTemplateTypeLabelGBIC1GE InterfaceTemplateTypeLabel = "GBIC (1GE)"

	InterfaceTemplateTypeLabelGSM InterfaceTemplateTypeLabel = "GSM"

	InterfaceTemplateTypeLabelHDR50Gbps InterfaceTemplateTypeLabel = "HDR (50 Gbps)"

	InterfaceTemplateTypeLabelIEEE80211a InterfaceTemplateTypeLabel = "IEEE 802.11a"

	InterfaceTemplateTypeLabelIEEE80211ac InterfaceTemplateTypeLabel = "IEEE 802.11ac"

	InterfaceTemplateTypeLabelIEEE80211ad InterfaceTemplateTypeLabel = "IEEE 802.11ad"

	InterfaceTemplateTypeLabelIEEE80211ax InterfaceTemplateTypeLabel = "IEEE 802.11ax"

	InterfaceTemplateTypeLabelIEEE80211bg InterfaceTemplateTypeLabel = "IEEE 802.11b/g"

	InterfaceTemplateTypeLabelIEEE80211n InterfaceTemplateTypeLabel = "IEEE 802.11n"

	InterfaceTemplateTypeLabelJuniperVCP InterfaceTemplateTypeLabel = "Juniper VCP"

	InterfaceTemplateTypeLabelLTE InterfaceTemplateTypeLabel = "LTE"

	InterfaceTemplateTypeLabelLinkAggregationGroupLAG InterfaceTemplateTypeLabel = "Link Aggregation Group (LAG)"

	InterfaceTemplateTypeLabelN1000BASET1GE InterfaceTemplateTypeLabel = "1000BASE-T (1GE)"

	InterfaceTemplateTypeLabelN100BASETX10100ME InterfaceTemplateTypeLabel = "100BASE-TX (10/100ME)"

	InterfaceTemplateTypeLabelN10GBASECX410GE InterfaceTemplateTypeLabel = "10GBASE-CX4 (10GE)"

	InterfaceTemplateTypeLabelN10GBASET10GE InterfaceTemplateTypeLabel = "10GBASE-T (10GE)"

	InterfaceTemplateTypeLabelN25GBASET25GE InterfaceTemplateTypeLabel = "2.5GBASE-T (2.5GE)"

	InterfaceTemplateTypeLabelN5GBASET5GE InterfaceTemplateTypeLabel = "5GBASE-T (5GE)"

	InterfaceTemplateTypeLabelNDR100Gbps InterfaceTemplateTypeLabel = "NDR (100 Gbps)"

	InterfaceTemplateTypeLabelOC12STM4 InterfaceTemplateTypeLabel = "OC-12/STM-4"

	InterfaceTemplateTypeLabelOC1920STM640 InterfaceTemplateTypeLabel = "OC-1920/STM-640"

	InterfaceTemplateTypeLabelOC192STM64 InterfaceTemplateTypeLabel = "OC-192/STM-64"

	InterfaceTemplateTypeLabelOC3840STM1234 InterfaceTemplateTypeLabel = "OC-3840/STM-1234"

	InterfaceTemplateTypeLabelOC3STM1 InterfaceTemplateTypeLabel = "OC-3/STM-1"

	InterfaceTemplateTypeLabelOC48STM16 InterfaceTemplateTypeLabel = "OC-48/STM-16"

	InterfaceTemplateTypeLabelOC768STM256 InterfaceTemplateTypeLabel = "OC-768/STM-256"

	InterfaceTemplateTypeLabelOSFP400GE InterfaceTemplateTypeLabel = "OSFP (400GE)"

	InterfaceTemplateTypeLabelOther InterfaceTemplateTypeLabel = "Other"

	InterfaceTemplateTypeLabelQDR8Gbps InterfaceTemplateTypeLabel = "QDR (8 Gbps)"

	InterfaceTemplateTypeLabelQSFP28100GE InterfaceTemplateTypeLabel = "QSFP28 (100GE)"

	InterfaceTemplateTypeLabelQSFP28128GFC InterfaceTemplateTypeLabel = "QSFP28 (128GFC)"

	InterfaceTemplateTypeLabelQSFP2850GE InterfaceTemplateTypeLabel = "QSFP28 (50GE)"

	InterfaceTemplateTypeLabelQSFP40GE InterfaceTemplateTypeLabel = "QSFP+ (40GE)"

	InterfaceTemplateTypeLabelQSFP56200GE InterfaceTemplateTypeLabel = "QSFP56 (200GE)"

	InterfaceTemplateTypeLabelQSFP64GFC InterfaceTemplateTypeLabel = "QSFP+ (64GFC)"

	InterfaceTemplateTypeLabelQSFPDD400GE InterfaceTemplateTypeLabel = "QSFP-DD (400GE)"

	InterfaceTemplateTypeLabelSDR2Gbps InterfaceTemplateTypeLabel = "SDR (2 Gbps)"

	InterfaceTemplateTypeLabelSFP10GE InterfaceTemplateTypeLabel = "SFP+ (10GE)"

	InterfaceTemplateTypeLabelSFP16GFC InterfaceTemplateTypeLabel = "SFP+ (16GFC)"

	InterfaceTemplateTypeLabelSFP1GE InterfaceTemplateTypeLabel = "SFP (1GE)"

	InterfaceTemplateTypeLabelSFP1GFC InterfaceTemplateTypeLabel = "SFP (1GFC)"

	InterfaceTemplateTypeLabelSFP2825GE InterfaceTemplateTypeLabel = "SFP28 (25GE)"

	InterfaceTemplateTypeLabelSFP2832GFC InterfaceTemplateTypeLabel = "SFP28 (32GFC)"

	InterfaceTemplateTypeLabelSFP2GFC InterfaceTemplateTypeLabel = "SFP (2GFC)"

	InterfaceTemplateTypeLabelSFP4GFC InterfaceTemplateTypeLabel = "SFP (4GFC)"

	InterfaceTemplateTypeLabelSFP8GFC InterfaceTemplateTypeLabel = "SFP+ (8GFC)"

	InterfaceTemplateTypeLabelT11544Mbps InterfaceTemplateTypeLabel = "T1 (1.544 Mbps)"

	InterfaceTemplateTypeLabelT345Mbps InterfaceTemplateTypeLabel = "T3 (45 Mbps)"

	InterfaceTemplateTypeLabelVirtual InterfaceTemplateTypeLabel = "Virtual"

	InterfaceTemplateTypeLabelX210GE InterfaceTemplateTypeLabel = "X2 (10GE)"

	InterfaceTemplateTypeLabelXDR250Gbps InterfaceTemplateTypeLabel = "XDR (250 Gbps)"

	InterfaceTemplateTypeLabelXENPAK10GE InterfaceTemplateTypeLabel = "XENPAK (10GE)"

	InterfaceTemplateTypeLabelXFP10GE InterfaceTemplateTypeLabel = "XFP (10GE)"
)

// Defines values for InterfaceTemplateTypeValue.
const (
	InterfaceTemplateTypeValueCdma InterfaceTemplateTypeValue = "cdma"

	InterfaceTemplateTypeValueCiscoFlexstack InterfaceTemplateTypeValue = "cisco-flexstack"

	InterfaceTemplateTypeValueCiscoFlexstackPlus InterfaceTemplateTypeValue = "cisco-flexstack-plus"

	InterfaceTemplateTypeValueCiscoStackwise InterfaceTemplateTypeValue = "cisco-stackwise"

	InterfaceTemplateTypeValueCiscoStackwisePlus InterfaceTemplateTypeValue = "cisco-stackwise-plus"

	InterfaceTemplateTypeValueE1 InterfaceTemplateTypeValue = "e1"

	InterfaceTemplateTypeValueE3 InterfaceTemplateTypeValue = "e3"

	InterfaceTemplateTypeValueExtremeSummitstack InterfaceTemplateTypeValue = "extreme-summitstack"

	InterfaceTemplateTypeValueExtremeSummitstack128 InterfaceTemplateTypeValue = "extreme-summitstack-128"

	InterfaceTemplateTypeValueExtremeSummitstack256 InterfaceTemplateTypeValue = "extreme-summitstack-256"

	InterfaceTemplateTypeValueExtremeSummitstack512 InterfaceTemplateTypeValue = "extreme-summitstack-512"

	InterfaceTemplateTypeValueGsm InterfaceTemplateTypeValue = "gsm"

	InterfaceTemplateTypeValueIeee80211a InterfaceTemplateTypeValue = "ieee802.11a"

	InterfaceTemplateTypeValueIeee80211ac InterfaceTemplateTypeValue = "ieee802.11ac"

	InterfaceTemplateTypeValueIeee80211ad InterfaceTemplateTypeValue = "ieee802.11ad"

	InterfaceTemplateTypeValueIeee80211ax InterfaceTemplateTypeValue = "ieee802.11ax"

	InterfaceTemplateTypeValueIeee80211g InterfaceTemplateTypeValue = "ieee802.11g"

	InterfaceTemplateTypeValueIeee80211n InterfaceTemplateTypeValue = "ieee802.11n"

	InterfaceTemplateTypeValueInfinibandDdr InterfaceTemplateTypeValue = "infiniband-ddr"

	InterfaceTemplateTypeValueInfinibandEdr InterfaceTemplateTypeValue = "infiniband-edr"

	InterfaceTemplateTypeValueInfinibandFdr InterfaceTemplateTypeValue = "infiniband-fdr"

	InterfaceTemplateTypeValueInfinibandFdr10 InterfaceTemplateTypeValue = "infiniband-fdr10"

	InterfaceTemplateTypeValueInfinibandHdr InterfaceTemplateTypeValue = "infiniband-hdr"

	InterfaceTemplateTypeValueInfinibandNdr InterfaceTemplateTypeValue = "infiniband-ndr"

	InterfaceTemplateTypeValueInfinibandQdr InterfaceTemplateTypeValue = "infiniband-qdr"

	InterfaceTemplateTypeValueInfinibandSdr InterfaceTemplateTypeValue = "infiniband-sdr"

	InterfaceTemplateTypeValueInfinibandXdr InterfaceTemplateTypeValue = "infiniband-xdr"

	InterfaceTemplateTypeValueJuniperVcp InterfaceTemplateTypeValue = "juniper-vcp"

	InterfaceTemplateTypeValueLag InterfaceTemplateTypeValue = "lag"

	InterfaceTemplateTypeValueLte InterfaceTemplateTypeValue = "lte"

	InterfaceTemplateTypeValueN1000baseT InterfaceTemplateTypeValue = "1000base-t"

	InterfaceTemplateTypeValueN1000baseXGbic InterfaceTemplateTypeValue = "1000base-x-gbic"

	InterfaceTemplateTypeValueN1000baseXSfp InterfaceTemplateTypeValue = "1000base-x-sfp"

	InterfaceTemplateTypeValueN100baseTx InterfaceTemplateTypeValue = "100base-tx"

	InterfaceTemplateTypeValueN100gbaseXCfp InterfaceTemplateTypeValue = "100gbase-x-cfp"

	InterfaceTemplateTypeValueN100gbaseXCfp2 InterfaceTemplateTypeValue = "100gbase-x-cfp2"

	InterfaceTemplateTypeValueN100gbaseXCfp4 InterfaceTemplateTypeValue = "100gbase-x-cfp4"

	InterfaceTemplateTypeValueN100gbaseXCpak InterfaceTemplateTypeValue = "100gbase-x-cpak"

	InterfaceTemplateTypeValueN100gbaseXQsfp28 InterfaceTemplateTypeValue = "100gbase-x-qsfp28"

	InterfaceTemplateTypeValueN10gbaseCx4 InterfaceTemplateTypeValue = "10gbase-cx4"

	InterfaceTemplateTypeValueN10gbaseT InterfaceTemplateTypeValue = "10gbase-t"

	InterfaceTemplateTypeValueN10gbaseXSfpp InterfaceTemplateTypeValue = "10gbase-x-sfpp"

	InterfaceTemplateTypeValueN10gbaseXX2 InterfaceTemplateTypeValue = "10gbase-x-x2"

	InterfaceTemplateTypeValueN10gbaseXXenpak InterfaceTemplateTypeValue = "10gbase-x-xenpak"

	InterfaceTemplateTypeValueN10gbaseXXfp InterfaceTemplateTypeValue = "10gbase-x-xfp"

	InterfaceTemplateTypeValueN128gfcSfp28 InterfaceTemplateTypeValue = "128gfc-sfp28"

	InterfaceTemplateTypeValueN16gfcSfpp InterfaceTemplateTypeValue = "16gfc-sfpp"

	InterfaceTemplateTypeValueN1gfcSfp InterfaceTemplateTypeValue = "1gfc-sfp"

	InterfaceTemplateTypeValueN200gbaseXCfp2 InterfaceTemplateTypeValue = "200gbase-x-cfp2"

	InterfaceTemplateTypeValueN200gbaseXQsfp56 InterfaceTemplateTypeValue = "200gbase-x-qsfp56"

	InterfaceTemplateTypeValueN25gbaseT InterfaceTemplateTypeValue = "2.5gbase-t"

	InterfaceTemplateTypeValueN25gbaseXSfp28 InterfaceTemplateTypeValue = "25gbase-x-sfp28"

	InterfaceTemplateTypeValueN2gfcSfp InterfaceTemplateTypeValue = "2gfc-sfp"

	InterfaceTemplateTypeValueN32gfcSfp28 InterfaceTemplateTypeValue = "32gfc-sfp28"

	InterfaceTemplateTypeValueN400gbaseXOsfp InterfaceTemplateTypeValue = "400gbase-x-osfp"

	InterfaceTemplateTypeValueN400gbaseXQsfpdd InterfaceTemplateTypeValue = "400gbase-x-qsfpdd"

	InterfaceTemplateTypeValueN40gbaseXQsfpp InterfaceTemplateTypeValue = "40gbase-x-qsfpp"

	InterfaceTemplateTypeValueN4gfcSfp InterfaceTemplateTypeValue = "4gfc-sfp"

	InterfaceTemplateTypeValueN50gbaseXSfp28 InterfaceTemplateTypeValue = "50gbase-x-sfp28"

	InterfaceTemplateTypeValueN5gbaseT InterfaceTemplateTypeValue = "5gbase-t"

	InterfaceTemplateTypeValueN64gfcQsfpp InterfaceTemplateTypeValue = "64gfc-qsfpp"

	InterfaceTemplateTypeValueN8gfcSfpp InterfaceTemplateTypeValue = "8gfc-sfpp"

	InterfaceTemplateTypeValueOther InterfaceTemplateTypeValue = "other"

	InterfaceTemplateTypeValueSonetOc12 InterfaceTemplateTypeValue = "sonet-oc12"

	InterfaceTemplateTypeValueSonetOc192 InterfaceTemplateTypeValue = "sonet-oc192"

	InterfaceTemplateTypeValueSonetOc1920 InterfaceTemplateTypeValue = "sonet-oc1920"

	InterfaceTemplateTypeValueSonetOc3 InterfaceTemplateTypeValue = "sonet-oc3"

	InterfaceTemplateTypeValueSonetOc3840 InterfaceTemplateTypeValue = "sonet-oc3840"

	InterfaceTemplateTypeValueSonetOc48 InterfaceTemplateTypeValue = "sonet-oc48"

	InterfaceTemplateTypeValueSonetOc768 InterfaceTemplateTypeValue = "sonet-oc768"

	InterfaceTemplateTypeValueT1 InterfaceTemplateTypeValue = "t1"

	InterfaceTemplateTypeValueT3 InterfaceTemplateTypeValue = "t3"

	InterfaceTemplateTypeValueVirtual InterfaceTemplateTypeValue = "virtual"
)

// Defines values for InterfaceTypeChoices.
const (
	InterfaceTypeChoicesCdma InterfaceTypeChoices = "cdma"

	InterfaceTypeChoicesCiscoFlexstack InterfaceTypeChoices = "cisco-flexstack"

	InterfaceTypeChoicesCiscoFlexstackPlus InterfaceTypeChoices = "cisco-flexstack-plus"

	InterfaceTypeChoicesCiscoStackwise InterfaceTypeChoices = "cisco-stackwise"

	InterfaceTypeChoicesCiscoStackwisePlus InterfaceTypeChoices = "cisco-stackwise-plus"

	InterfaceTypeChoicesE1 InterfaceTypeChoices = "e1"

	InterfaceTypeChoicesE3 InterfaceTypeChoices = "e3"

	InterfaceTypeChoicesExtremeSummitstack InterfaceTypeChoices = "extreme-summitstack"

	InterfaceTypeChoicesExtremeSummitstack128 InterfaceTypeChoices = "extreme-summitstack-128"

	InterfaceTypeChoicesExtremeSummitstack256 InterfaceTypeChoices = "extreme-summitstack-256"

	InterfaceTypeChoicesExtremeSummitstack512 InterfaceTypeChoices = "extreme-summitstack-512"

	InterfaceTypeChoicesGsm InterfaceTypeChoices = "gsm"

	InterfaceTypeChoicesIeee80211a InterfaceTypeChoices = "ieee802.11a"

	InterfaceTypeChoicesIeee80211ac InterfaceTypeChoices = "ieee802.11ac"

	InterfaceTypeChoicesIeee80211ad InterfaceTypeChoices = "ieee802.11ad"

	InterfaceTypeChoicesIeee80211ax InterfaceTypeChoices = "ieee802.11ax"

	InterfaceTypeChoicesIeee80211g InterfaceTypeChoices = "ieee802.11g"

	InterfaceTypeChoicesIeee80211n InterfaceTypeChoices = "ieee802.11n"

	InterfaceTypeChoicesInfinibandDdr InterfaceTypeChoices = "infiniband-ddr"

	InterfaceTypeChoicesInfinibandEdr InterfaceTypeChoices = "infiniband-edr"

	InterfaceTypeChoicesInfinibandFdr InterfaceTypeChoices = "infiniband-fdr"

	InterfaceTypeChoicesInfinibandFdr10 InterfaceTypeChoices = "infiniband-fdr10"

	InterfaceTypeChoicesInfinibandHdr InterfaceTypeChoices = "infiniband-hdr"

	InterfaceTypeChoicesInfinibandNdr InterfaceTypeChoices = "infiniband-ndr"

	InterfaceTypeChoicesInfinibandQdr InterfaceTypeChoices = "infiniband-qdr"

	InterfaceTypeChoicesInfinibandSdr InterfaceTypeChoices = "infiniband-sdr"

	InterfaceTypeChoicesInfinibandXdr InterfaceTypeChoices = "infiniband-xdr"

	InterfaceTypeChoicesJuniperVcp InterfaceTypeChoices = "juniper-vcp"

	InterfaceTypeChoicesLag InterfaceTypeChoices = "lag"

	InterfaceTypeChoicesLte InterfaceTypeChoices = "lte"

	InterfaceTypeChoicesN1000baseT InterfaceTypeChoices = "1000base-t"

	InterfaceTypeChoicesN1000baseXGbic InterfaceTypeChoices = "1000base-x-gbic"

	InterfaceTypeChoicesN1000baseXSfp InterfaceTypeChoices = "1000base-x-sfp"

	InterfaceTypeChoicesN100baseTx InterfaceTypeChoices = "100base-tx"

	InterfaceTypeChoicesN100gbaseXCfp InterfaceTypeChoices = "100gbase-x-cfp"

	InterfaceTypeChoicesN100gbaseXCfp2 InterfaceTypeChoices = "100gbase-x-cfp2"

	InterfaceTypeChoicesN100gbaseXCfp4 InterfaceTypeChoices = "100gbase-x-cfp4"

	InterfaceTypeChoicesN100gbaseXCpak InterfaceTypeChoices = "100gbase-x-cpak"

	InterfaceTypeChoicesN100gbaseXQsfp28 InterfaceTypeChoices = "100gbase-x-qsfp28"

	InterfaceTypeChoicesN10gbaseCx4 InterfaceTypeChoices = "10gbase-cx4"

	InterfaceTypeChoicesN10gbaseT InterfaceTypeChoices = "10gbase-t"

	InterfaceTypeChoicesN10gbaseXSfpp InterfaceTypeChoices = "10gbase-x-sfpp"

	InterfaceTypeChoicesN10gbaseXX2 InterfaceTypeChoices = "10gbase-x-x2"

	InterfaceTypeChoicesN10gbaseXXenpak InterfaceTypeChoices = "10gbase-x-xenpak"

	InterfaceTypeChoicesN10gbaseXXfp InterfaceTypeChoices = "10gbase-x-xfp"

	InterfaceTypeChoicesN128gfcSfp28 InterfaceTypeChoices = "128gfc-sfp28"

	InterfaceTypeChoicesN16gfcSfpp InterfaceTypeChoices = "16gfc-sfpp"

	InterfaceTypeChoicesN1gfcSfp InterfaceTypeChoices = "1gfc-sfp"

	InterfaceTypeChoicesN200gbaseXCfp2 InterfaceTypeChoices = "200gbase-x-cfp2"

	InterfaceTypeChoicesN200gbaseXQsfp56 InterfaceTypeChoices = "200gbase-x-qsfp56"

	InterfaceTypeChoicesN25gbaseT InterfaceTypeChoices = "2.5gbase-t"

	InterfaceTypeChoicesN25gbaseXSfp28 InterfaceTypeChoices = "25gbase-x-sfp28"

	InterfaceTypeChoicesN2gfcSfp InterfaceTypeChoices = "2gfc-sfp"

	InterfaceTypeChoicesN32gfcSfp28 InterfaceTypeChoices = "32gfc-sfp28"

	InterfaceTypeChoicesN400gbaseXOsfp InterfaceTypeChoices = "400gbase-x-osfp"

	InterfaceTypeChoicesN400gbaseXQsfpdd InterfaceTypeChoices = "400gbase-x-qsfpdd"

	InterfaceTypeChoicesN40gbaseXQsfpp InterfaceTypeChoices = "40gbase-x-qsfpp"

	InterfaceTypeChoicesN4gfcSfp InterfaceTypeChoices = "4gfc-sfp"

	InterfaceTypeChoicesN50gbaseXSfp28 InterfaceTypeChoices = "50gbase-x-sfp28"

	InterfaceTypeChoicesN5gbaseT InterfaceTypeChoices = "5gbase-t"

	InterfaceTypeChoicesN64gfcQsfpp InterfaceTypeChoices = "64gfc-qsfpp"

	InterfaceTypeChoicesN8gfcSfpp InterfaceTypeChoices = "8gfc-sfpp"

	InterfaceTypeChoicesOther InterfaceTypeChoices = "other"

	InterfaceTypeChoicesSonetOc12 InterfaceTypeChoices = "sonet-oc12"

	InterfaceTypeChoicesSonetOc192 InterfaceTypeChoices = "sonet-oc192"

	InterfaceTypeChoicesSonetOc1920 InterfaceTypeChoices = "sonet-oc1920"

	InterfaceTypeChoicesSonetOc3 InterfaceTypeChoices = "sonet-oc3"

	InterfaceTypeChoicesSonetOc3840 InterfaceTypeChoices = "sonet-oc3840"

	InterfaceTypeChoicesSonetOc48 InterfaceTypeChoices = "sonet-oc48"

	InterfaceTypeChoicesSonetOc768 InterfaceTypeChoices = "sonet-oc768"

	InterfaceTypeChoicesT1 InterfaceTypeChoices = "t1"

	InterfaceTypeChoicesT3 InterfaceTypeChoices = "t3"

	InterfaceTypeChoicesVirtual InterfaceTypeChoices = "virtual"
)

// Defines values for IntervalEnum.
const (
	IntervalEnumDaily IntervalEnum = "daily"

	IntervalEnumFuture IntervalEnum = "future"

	IntervalEnumHourly IntervalEnum = "hourly"

	IntervalEnumImmediately IntervalEnum = "immediately"

	IntervalEnumWeekly IntervalEnum = "weekly"
)

// Defines values for JobResultStatusLabel.
const (
	JobResultStatusLabelCompleted JobResultStatusLabel = "Completed"

	JobResultStatusLabelErrored JobResultStatusLabel = "Errored"

	JobResultStatusLabelFailed JobResultStatusLabel = "Failed"

	JobResultStatusLabelPending JobResultStatusLabel = "Pending"

	JobResultStatusLabelRunning JobResultStatusLabel = "Running"
)

// Defines values for JobResultStatusValue.
const (
	JobResultStatusValueCompleted JobResultStatusValue = "completed"

	JobResultStatusValueErrored JobResultStatusValue = "errored"

	JobResultStatusValueFailed JobResultStatusValue = "failed"

	JobResultStatusValuePending JobResultStatusValue = "pending"

	JobResultStatusValueRunning JobResultStatusValue = "running"
)

// Defines values for JobResultStatusEnum.
const (
	JobResultStatusEnumCompleted JobResultStatusEnum = "completed"

	JobResultStatusEnumErrored JobResultStatusEnum = "errored"

	JobResultStatusEnumFailed JobResultStatusEnum = "failed"

	JobResultStatusEnumPending JobResultStatusEnum = "pending"

	JobResultStatusEnumRunning JobResultStatusEnum = "running"
)

// Defines values for LengthUnitEnum.
const (
	LengthUnitEnumCm LengthUnitEnum = "cm"

	LengthUnitEnumFt LengthUnitEnum = "ft"

	LengthUnitEnumIn LengthUnitEnum = "in"

	LengthUnitEnumM LengthUnitEnum = "m"
)

// Defines values for LogLevelEnum.
const (
	LogLevelEnumDefault LogLevelEnum = "default"

	LogLevelEnumFailure LogLevelEnum = "failure"

	LogLevelEnumInfo LogLevelEnum = "info"

	LogLevelEnumSuccess LogLevelEnum = "success"

	LogLevelEnumWarning LogLevelEnum = "warning"
)

// Defines values for ModeEnum.
const (
	ModeEnumAccess ModeEnum = "access"

	ModeEnumTagged ModeEnum = "tagged"

	ModeEnumTaggedAll ModeEnum = "tagged-all"
)

// Defines values for NestedJobResultStatusLabel.
const (
	NestedJobResultStatusLabelCompleted NestedJobResultStatusLabel = "Completed"

	NestedJobResultStatusLabelErrored NestedJobResultStatusLabel = "Errored"

	NestedJobResultStatusLabelFailed NestedJobResultStatusLabel = "Failed"

	NestedJobResultStatusLabelPending NestedJobResultStatusLabel = "Pending"

	NestedJobResultStatusLabelRunning NestedJobResultStatusLabel = "Running"
)

// Defines values for NestedJobResultStatusValue.
const (
	NestedJobResultStatusValueCompleted NestedJobResultStatusValue = "completed"

	NestedJobResultStatusValueErrored NestedJobResultStatusValue = "errored"

	NestedJobResultStatusValueFailed NestedJobResultStatusValue = "failed"

	NestedJobResultStatusValuePending NestedJobResultStatusValue = "pending"

	NestedJobResultStatusValueRunning NestedJobResultStatusValue = "running"
)

// Defines values for ObjectChangeActionLabel.
const (
	ObjectChangeActionLabelCreated ObjectChangeActionLabel = "Created"

	ObjectChangeActionLabelDeleted ObjectChangeActionLabel = "Deleted"

	ObjectChangeActionLabelUpdated ObjectChangeActionLabel = "Updated"
)

// Defines values for ObjectChangeActionValue.
const (
	ObjectChangeActionValueCreate ObjectChangeActionValue = "create"

	ObjectChangeActionValueDelete ObjectChangeActionValue = "delete"

	ObjectChangeActionValueUpdate ObjectChangeActionValue = "update"
)

// Defines values for OuterUnitEnum.
const (
	OuterUnitEnumIn OuterUnitEnum = "in"

	OuterUnitEnumMm OuterUnitEnum = "mm"
)

// Defines values for PhaseEnum.
const (
	PhaseEnumSinglePhase PhaseEnum = "single-phase"

	PhaseEnumThreePhase PhaseEnum = "three-phase"
)

// Defines values for PortTypeChoices.
const (
	PortTypeChoicesBnc PortTypeChoices = "bnc"

	PortTypeChoicesCs PortTypeChoices = "cs"

	PortTypeChoicesFc PortTypeChoices = "fc"

	PortTypeChoicesGg45 PortTypeChoices = "gg45"

	PortTypeChoicesLc PortTypeChoices = "lc"

	PortTypeChoicesLcApc PortTypeChoices = "lc-apc"

	PortTypeChoicesLsh PortTypeChoices = "lsh"

	PortTypeChoicesLshApc PortTypeChoices = "lsh-apc"

	PortTypeChoicesMpo PortTypeChoices = "mpo"

	PortTypeChoicesMrj21 PortTypeChoices = "mrj21"

	PortTypeChoicesMtrj PortTypeChoices = "mtrj"

	PortTypeChoicesN110Punch PortTypeChoices = "110-punch"

	PortTypeChoicesN8p2c PortTypeChoices = "8p2c"

	PortTypeChoicesN8p4c PortTypeChoices = "8p4c"

	PortTypeChoicesN8p6c PortTypeChoices = "8p6c"

	PortTypeChoicesN8p8c PortTypeChoices = "8p8c"

	PortTypeChoicesSc PortTypeChoices = "sc"

	PortTypeChoicesScApc PortTypeChoices = "sc-apc"

	PortTypeChoicesSn PortTypeChoices = "sn"

	PortTypeChoicesSplice PortTypeChoices = "splice"

	PortTypeChoicesSt PortTypeChoices = "st"

	PortTypeChoicesTera1p PortTypeChoices = "tera-1p"

	PortTypeChoicesTera2p PortTypeChoices = "tera-2p"

	PortTypeChoicesTera4p PortTypeChoices = "tera-4p"

	PortTypeChoicesUrmP2 PortTypeChoices = "urm-p2"

	PortTypeChoicesUrmP4 PortTypeChoices = "urm-p4"

	PortTypeChoicesUrmP8 PortTypeChoices = "urm-p8"
)

// Defines values for PowerFeedPhaseLabel.
const (
	PowerFeedPhaseLabelSinglePhase PowerFeedPhaseLabel = "Single phase"

	PowerFeedPhaseLabelThreePhase PowerFeedPhaseLabel = "Three-phase"
)

// Defines values for PowerFeedPhaseValue.
const (
	PowerFeedPhaseValueSinglePhase PowerFeedPhaseValue = "single-phase"

	PowerFeedPhaseValueThreePhase PowerFeedPhaseValue = "three-phase"
)

// Defines values for PowerFeedStatusLabel.
const (
	PowerFeedStatusLabelActive PowerFeedStatusLabel = "Active"

	PowerFeedStatusLabelFailed PowerFeedStatusLabel = "Failed"

	PowerFeedStatusLabelOffline PowerFeedStatusLabel = "Offline"

	PowerFeedStatusLabelPlanned PowerFeedStatusLabel = "Planned"
)

// Defines values for PowerFeedStatusValue.
const (
	PowerFeedStatusValueActive PowerFeedStatusValue = "active"

	PowerFeedStatusValueFailed PowerFeedStatusValue = "failed"

	PowerFeedStatusValueOffline PowerFeedStatusValue = "offline"

	PowerFeedStatusValuePlanned PowerFeedStatusValue = "planned"
)

// Defines values for PowerFeedSupplyLabel.
const (
	PowerFeedSupplyLabelAC PowerFeedSupplyLabel = "AC"

	PowerFeedSupplyLabelDC PowerFeedSupplyLabel = "DC"
)

// Defines values for PowerFeedSupplyValue.
const (
	PowerFeedSupplyValueAc PowerFeedSupplyValue = "ac"

	PowerFeedSupplyValueDc PowerFeedSupplyValue = "dc"
)

// Defines values for PowerFeedTypeLabel.
const (
	PowerFeedTypeLabelPrimary PowerFeedTypeLabel = "Primary"

	PowerFeedTypeLabelRedundant PowerFeedTypeLabel = "Redundant"
)

// Defines values for PowerFeedTypeValue.
const (
	PowerFeedTypeValuePrimary PowerFeedTypeValue = "primary"

	PowerFeedTypeValueRedundant PowerFeedTypeValue = "redundant"
)

// Defines values for PowerFeedTypeChoices.
const (
	PowerFeedTypeChoicesPrimary PowerFeedTypeChoices = "primary"

	PowerFeedTypeChoicesRedundant PowerFeedTypeChoices = "redundant"
)

// Defines values for PowerOutletFeedLegLabel.
const (
	PowerOutletFeedLegLabelA PowerOutletFeedLegLabel = "A"

	PowerOutletFeedLegLabelB PowerOutletFeedLegLabel = "B"

	PowerOutletFeedLegLabelC PowerOutletFeedLegLabel = "C"
)

// Defines values for PowerOutletFeedLegValue.
const (
	PowerOutletFeedLegValueA PowerOutletFeedLegValue = "A"

	PowerOutletFeedLegValueB PowerOutletFeedLegValue = "B"

	PowerOutletFeedLegValueC PowerOutletFeedLegValue = "C"
)

// Defines values for PowerOutletTypeLabel.
const (
	PowerOutletTypeLabelC13 PowerOutletTypeLabel = "C13"

	PowerOutletTypeLabelC15 PowerOutletTypeLabel = "C15"

	PowerOutletTypeLabelC19 PowerOutletTypeLabel = "C19"

	PowerOutletTypeLabelC5 PowerOutletTypeLabel = "C5"

	PowerOutletTypeLabelC7 PowerOutletTypeLabel = "C7"

	PowerOutletTypeLabelCS6360C PowerOutletTypeLabel = "CS6360C"

	PowerOutletTypeLabelCS6364C PowerOutletTypeLabel = "CS6364C"

	PowerOutletTypeLabelCS8164C PowerOutletTypeLabel = "CS8164C"

	PowerOutletTypeLabelCS8264C PowerOutletTypeLabel = "CS8264C"

	PowerOutletTypeLabelCS8364C PowerOutletTypeLabel = "CS8364C"

	PowerOutletTypeLabelCS8464C PowerOutletTypeLabel = "CS8464C"

	PowerOutletTypeLabelHDOTCx PowerOutletTypeLabel = "HDOT Cx"

	PowerOutletTypeLabelITATypeECEE75 PowerOutletTypeLabel = "ITA Type E (CEE7/5)"

	PowerOutletTypeLabelITATypeFCEE73 PowerOutletTypeLabel = "ITA Type F (CEE7/3)"

	PowerOutletTypeLabelITATypeGBS1363 PowerOutletTypeLabel = "ITA Type G (BS 1363)"

	PowerOutletTypeLabelITATypeH PowerOutletTypeLabel = "ITA Type H"

	PowerOutletTypeLabelITATypeI PowerOutletTypeLabel = "ITA Type I"

	PowerOutletTypeLabelITATypeJ PowerOutletTypeLabel = "ITA Type J"

	PowerOutletTypeLabelITATypeK PowerOutletTypeLabel = "ITA Type K"

	PowerOutletTypeLabelITATypeLCEI2350 PowerOutletTypeLabel = "ITA Type L (CEI 23-50)"

	PowerOutletTypeLabelITATypeMBS546 PowerOutletTypeLabel = "ITA Type M (BS 546)"

	PowerOutletTypeLabelITATypeN PowerOutletTypeLabel = "ITA Type N"

	PowerOutletTypeLabelITATypeO PowerOutletTypeLabel = "ITA Type O"

	PowerOutletTypeLabelN2PE4H PowerOutletTypeLabel = "2P+E 4H"

	PowerOutletTypeLabelN2PE6H PowerOutletTypeLabel = "2P+E 6H"

	PowerOutletTypeLabelN2PE9H PowerOutletTypeLabel = "2P+E 9H"

	PowerOutletTypeLabelN3PE4H PowerOutletTypeLabel = "3P+E 4H"

	PowerOutletTypeLabelN3PE6H PowerOutletTypeLabel = "3P+E 6H"

	PowerOutletTypeLabelN3PE9H PowerOutletTypeLabel = "3P+E 9H"

	PowerOutletTypeLabelN3PNE4H PowerOutletTypeLabel = "3P+N+E 4H"

	PowerOutletTypeLabelN3PNE6H PowerOutletTypeLabel = "3P+N+E 6H"

	PowerOutletTypeLabelN3PNE9H PowerOutletTypeLabel = "3P+N+E 9H"

	PowerOutletTypeLabelNEMA1030R PowerOutletTypeLabel = "NEMA 10-30R"

	PowerOutletTypeLabelNEMA1050R PowerOutletTypeLabel = "NEMA 10-50R"

	PowerOutletTypeLabelNEMA115R PowerOutletTypeLabel = "NEMA 1-15R"

	PowerOutletTypeLabelNEMA1420R PowerOutletTypeLabel = "NEMA 14-20R"

	PowerOutletTypeLabelNEMA1430R PowerOutletTypeLabel = "NEMA 14-30R"

	PowerOutletTypeLabelNEMA1450R PowerOutletTypeLabel = "NEMA 14-50R"

	PowerOutletTypeLabelNEMA1460R PowerOutletTypeLabel = "NEMA 14-60R"

	PowerOutletTypeLabelNEMA1515R PowerOutletTypeLabel = "NEMA 15-15R"

	PowerOutletTypeLabelNEMA1520R PowerOutletTypeLabel = "NEMA 15-20R"

	PowerOutletTypeLabelNEMA1530R PowerOutletTypeLabel = "NEMA 15-30R"

	PowerOutletTypeLabelNEMA1550R PowerOutletTypeLabel = "NEMA 15-50R"

	PowerOutletTypeLabelNEMA1560R PowerOutletTypeLabel = "NEMA 15-60R"

	PowerOutletTypeLabelNEMA515R PowerOutletTypeLabel = "NEMA 5-15R"

	PowerOutletTypeLabelNEMA520R PowerOutletTypeLabel = "NEMA 5-20R"

	PowerOutletTypeLabelNEMA530R PowerOutletTypeLabel = "NEMA 5-30R"

	PowerOutletTypeLabelNEMA550R PowerOutletTypeLabel = "NEMA 5-50R"

	PowerOutletTypeLabelNEMA615R PowerOutletTypeLabel = "NEMA 6-15R"

	PowerOutletTypeLabelNEMA620R PowerOutletTypeLabel = "NEMA 6-20R"

	PowerOutletTypeLabelNEMA630R PowerOutletTypeLabel = "NEMA 6-30R"

	PowerOutletTypeLabelNEMA650R PowerOutletTypeLabel = "NEMA 6-50R"

	PowerOutletTypeLabelNEMAL1030R PowerOutletTypeLabel = "NEMA L10-30R"

	PowerOutletTypeLabelNEMAL115R PowerOutletTypeLabel = "NEMA L1-15R"

	PowerOutletTypeLabelNEMAL1420R PowerOutletTypeLabel = "NEMA L14-20R"

	PowerOutletTypeLabelNEMAL1430R PowerOutletTypeLabel = "NEMA L14-30R"

	PowerOutletTypeLabelNEMAL1450R PowerOutletTypeLabel = "NEMA L14-50R"

	PowerOutletTypeLabelNEMAL1460R PowerOutletTypeLabel = "NEMA L14-60R"

	PowerOutletTypeLabelNEMAL1520R PowerOutletTypeLabel = "NEMA L15-20R"

	PowerOutletTypeLabelNEMAL1530R PowerOutletTypeLabel = "NEMA L15-30R"

	PowerOutletTypeLabelNEMAL1550R PowerOutletTypeLabel = "NEMA L15-50R"

	PowerOutletTypeLabelNEMAL1560R PowerOutletTypeLabel = "NEMA L15-60R"

	PowerOutletTypeLabelNEMAL2120R PowerOutletTypeLabel = "NEMA L21-20R"

	PowerOutletTypeLabelNEMAL2130R PowerOutletTypeLabel = "NEMA L21-30R"

	PowerOutletTypeLabelNEMAL515R PowerOutletTypeLabel = "NEMA L5-15R"

	PowerOutletTypeLabelNEMAL520R PowerOutletTypeLabel = "NEMA L5-20R"

	PowerOutletTypeLabelNEMAL530R PowerOutletTypeLabel = "NEMA L5-30R"

	PowerOutletTypeLabelNEMAL550R PowerOutletTypeLabel = "NEMA L5-50R"

	PowerOutletTypeLabelNEMAL615R PowerOutletTypeLabel = "NEMA L6-15R"

	PowerOutletTypeLabelNEMAL620R PowerOutletTypeLabel = "NEMA L6-20R"

	PowerOutletTypeLabelNEMAL630R PowerOutletTypeLabel = "NEMA L6-30R"

	PowerOutletTypeLabelNEMAL650R PowerOutletTypeLabel = "NEMA L6-50R"

	PowerOutletTypeLabelPNE4H PowerOutletTypeLabel = "P+N+E 4H"

	PowerOutletTypeLabelPNE6H PowerOutletTypeLabel = "P+N+E 6H"

	PowerOutletTypeLabelPNE9H PowerOutletTypeLabel = "P+N+E 9H"

	PowerOutletTypeLabelUSBMicroB PowerOutletTypeLabel = "USB Micro B"

	PowerOutletTypeLabelUSBTypeA PowerOutletTypeLabel = "USB Type A"

	PowerOutletTypeLabelUSBTypeC PowerOutletTypeLabel = "USB Type C"
)

// Defines values for PowerOutletTypeValue.
const (
	PowerOutletTypeValueCS6360C PowerOutletTypeValue = "CS6360C"

	PowerOutletTypeValueCS6364C PowerOutletTypeValue = "CS6364C"

	PowerOutletTypeValueCS8164C PowerOutletTypeValue = "CS8164C"

	PowerOutletTypeValueCS8264C PowerOutletTypeValue = "CS8264C"

	PowerOutletTypeValueCS8364C PowerOutletTypeValue = "CS8364C"

	PowerOutletTypeValueCS8464C PowerOutletTypeValue = "CS8464C"

	PowerOutletTypeValueHdotCx PowerOutletTypeValue = "hdot-cx"

	PowerOutletTypeValueIec603092pE4h PowerOutletTypeValue = "iec-60309-2p-e-4h"

	PowerOutletTypeValueIec603092pE6h PowerOutletTypeValue = "iec-60309-2p-e-6h"

	PowerOutletTypeValueIec603092pE9h PowerOutletTypeValue = "iec-60309-2p-e-9h"

	PowerOutletTypeValueIec603093pE4h PowerOutletTypeValue = "iec-60309-3p-e-4h"

	PowerOutletTypeValueIec603093pE6h PowerOutletTypeValue = "iec-60309-3p-e-6h"

	PowerOutletTypeValueIec603093pE9h PowerOutletTypeValue = "iec-60309-3p-e-9h"

	PowerOutletTypeValueIec603093pNE4h PowerOutletTypeValue = "iec-60309-3p-n-e-4h"

	PowerOutletTypeValueIec603093pNE6h PowerOutletTypeValue = "iec-60309-3p-n-e-6h"

	PowerOutletTypeValueIec603093pNE9h PowerOutletTypeValue = "iec-60309-3p-n-e-9h"

	PowerOutletTypeValueIec60309PNE4h PowerOutletTypeValue = "iec-60309-p-n-e-4h"

	PowerOutletTypeValueIec60309PNE6h PowerOutletTypeValue = "iec-60309-p-n-e-6h"

	PowerOutletTypeValueIec60309PNE9h PowerOutletTypeValue = "iec-60309-p-n-e-9h"

	PowerOutletTypeValueIec60320C13 PowerOutletTypeValue = "iec-60320-c13"

	PowerOutletTypeValueIec60320C15 PowerOutletTypeValue = "iec-60320-c15"

	PowerOutletTypeValueIec60320C19 PowerOutletTypeValue = "iec-60320-c19"

	PowerOutletTypeValueIec60320C5 PowerOutletTypeValue = "iec-60320-c5"

	PowerOutletTypeValueIec60320C7 PowerOutletTypeValue = "iec-60320-c7"

	PowerOutletTypeValueItaE PowerOutletTypeValue = "ita-e"

	PowerOutletTypeValueItaF PowerOutletTypeValue = "ita-f"

	PowerOutletTypeValueItaG PowerOutletTypeValue = "ita-g"

	PowerOutletTypeValueItaH PowerOutletTypeValue = "ita-h"

	PowerOutletTypeValueItaI PowerOutletTypeValue = "ita-i"

	PowerOutletTypeValueItaJ PowerOutletTypeValue = "ita-j"

	PowerOutletTypeValueItaK PowerOutletTypeValue = "ita-k"

	PowerOutletTypeValueItaL PowerOutletTypeValue = "ita-l"

	PowerOutletTypeValueItaM PowerOutletTypeValue = "ita-m"

	PowerOutletTypeValueItaN PowerOutletTypeValue = "ita-n"

	PowerOutletTypeValueItaO PowerOutletTypeValue = "ita-o"

	PowerOutletTypeValueNema1030r PowerOutletTypeValue = "nema-10-30r"

	PowerOutletTypeValueNema1050r PowerOutletTypeValue = "nema-10-50r"

	PowerOutletTypeValueNema115r PowerOutletTypeValue = "nema-1-15r"

	PowerOutletTypeValueNema1420r PowerOutletTypeValue = "nema-14-20r"

	PowerOutletTypeValueNema1430r PowerOutletTypeValue = "nema-14-30r"

	PowerOutletTypeValueNema1450r PowerOutletTypeValue = "nema-14-50r"

	PowerOutletTypeValueNema1460r PowerOutletTypeValue = "nema-14-60r"

	PowerOutletTypeValueNema1515r PowerOutletTypeValue = "nema-15-15r"

	PowerOutletTypeValueNema1520r PowerOutletTypeValue = "nema-15-20r"

	PowerOutletTypeValueNema1530r PowerOutletTypeValue = "nema-15-30r"

	PowerOutletTypeValueNema1550r PowerOutletTypeValue = "nema-15-50r"

	PowerOutletTypeValueNema1560r PowerOutletTypeValue = "nema-15-60r"

	PowerOutletTypeValueNema515r PowerOutletTypeValue = "nema-5-15r"

	PowerOutletTypeValueNema520r PowerOutletTypeValue = "nema-5-20r"

	PowerOutletTypeValueNema530r PowerOutletTypeValue = "nema-5-30r"

	PowerOutletTypeValueNema550r PowerOutletTypeValue = "nema-5-50r"

	PowerOutletTypeValueNema615r PowerOutletTypeValue = "nema-6-15r"

	PowerOutletTypeValueNema620r PowerOutletTypeValue = "nema-6-20r"

	PowerOutletTypeValueNema630r PowerOutletTypeValue = "nema-6-30r"

	PowerOutletTypeValueNema650r PowerOutletTypeValue = "nema-6-50r"

	PowerOutletTypeValueNemaL1030r PowerOutletTypeValue = "nema-l10-30r"

	PowerOutletTypeValueNemaL115r PowerOutletTypeValue = "nema-l1-15r"

	PowerOutletTypeValueNemaL1420r PowerOutletTypeValue = "nema-l14-20r"

	PowerOutletTypeValueNemaL1430r PowerOutletTypeValue = "nema-l14-30r"

	PowerOutletTypeValueNemaL1450r PowerOutletTypeValue = "nema-l14-50r"

	PowerOutletTypeValueNemaL1460r PowerOutletTypeValue = "nema-l14-60r"

	PowerOutletTypeValueNemaL1520r PowerOutletTypeValue = "nema-l15-20r"

	PowerOutletTypeValueNemaL1530r PowerOutletTypeValue = "nema-l15-30r"

	PowerOutletTypeValueNemaL1550r PowerOutletTypeValue = "nema-l15-50r"

	PowerOutletTypeValueNemaL1560r PowerOutletTypeValue = "nema-l15-60r"

	PowerOutletTypeValueNemaL2120r PowerOutletTypeValue = "nema-l21-20r"

	PowerOutletTypeValueNemaL2130r PowerOutletTypeValue = "nema-l21-30r"

	PowerOutletTypeValueNemaL515r PowerOutletTypeValue = "nema-l5-15r"

	PowerOutletTypeValueNemaL520r PowerOutletTypeValue = "nema-l5-20r"

	PowerOutletTypeValueNemaL530r PowerOutletTypeValue = "nema-l5-30r"

	PowerOutletTypeValueNemaL550r PowerOutletTypeValue = "nema-l5-50r"

	PowerOutletTypeValueNemaL615r PowerOutletTypeValue = "nema-l6-15r"

	PowerOutletTypeValueNemaL620r PowerOutletTypeValue = "nema-l6-20r"

	PowerOutletTypeValueNemaL630r PowerOutletTypeValue = "nema-l6-30r"

	PowerOutletTypeValueNemaL650r PowerOutletTypeValue = "nema-l6-50r"

	PowerOutletTypeValueUsbA PowerOutletTypeValue = "usb-a"

	PowerOutletTypeValueUsbC PowerOutletTypeValue = "usb-c"

	PowerOutletTypeValueUsbMicroB PowerOutletTypeValue = "usb-micro-b"
)

// Defines values for PowerOutletTemplateFeedLegLabel.
const (
	PowerOutletTemplateFeedLegLabelA PowerOutletTemplateFeedLegLabel = "A"

	PowerOutletTemplateFeedLegLabelB PowerOutletTemplateFeedLegLabel = "B"

	PowerOutletTemplateFeedLegLabelC PowerOutletTemplateFeedLegLabel = "C"
)

// Defines values for PowerOutletTemplateFeedLegValue.
const (
	PowerOutletTemplateFeedLegValueA PowerOutletTemplateFeedLegValue = "A"

	PowerOutletTemplateFeedLegValueB PowerOutletTemplateFeedLegValue = "B"

	PowerOutletTemplateFeedLegValueC PowerOutletTemplateFeedLegValue = "C"
)

// Defines values for PowerOutletTemplateTypeLabel.
const (
	PowerOutletTemplateTypeLabelC13 PowerOutletTemplateTypeLabel = "C13"

	PowerOutletTemplateTypeLabelC15 PowerOutletTemplateTypeLabel = "C15"

	PowerOutletTemplateTypeLabelC19 PowerOutletTemplateTypeLabel = "C19"

	PowerOutletTemplateTypeLabelC5 PowerOutletTemplateTypeLabel = "C5"

	PowerOutletTemplateTypeLabelC7 PowerOutletTemplateTypeLabel = "C7"

	PowerOutletTemplateTypeLabelCS6360C PowerOutletTemplateTypeLabel = "CS6360C"

	PowerOutletTemplateTypeLabelCS6364C PowerOutletTemplateTypeLabel = "CS6364C"

	PowerOutletTemplateTypeLabelCS8164C PowerOutletTemplateTypeLabel = "CS8164C"

	PowerOutletTemplateTypeLabelCS8264C PowerOutletTemplateTypeLabel = "CS8264C"

	PowerOutletTemplateTypeLabelCS8364C PowerOutletTemplateTypeLabel = "CS8364C"

	PowerOutletTemplateTypeLabelCS8464C PowerOutletTemplateTypeLabel = "CS8464C"

	PowerOutletTemplateTypeLabelHDOTCx PowerOutletTemplateTypeLabel = "HDOT Cx"

	PowerOutletTemplateTypeLabelITATypeECEE75 PowerOutletTemplateTypeLabel = "ITA Type E (CEE7/5)"

	PowerOutletTemplateTypeLabelITATypeFCEE73 PowerOutletTemplateTypeLabel = "ITA Type F (CEE7/3)"

	PowerOutletTemplateTypeLabelITATypeGBS1363 PowerOutletTemplateTypeLabel = "ITA Type G (BS 1363)"

	PowerOutletTemplateTypeLabelITATypeH PowerOutletTemplateTypeLabel = "ITA Type H"

	PowerOutletTemplateTypeLabelITATypeI PowerOutletTemplateTypeLabel = "ITA Type I"

	PowerOutletTemplateTypeLabelITATypeJ PowerOutletTemplateTypeLabel = "ITA Type J"

	PowerOutletTemplateTypeLabelITATypeK PowerOutletTemplateTypeLabel = "ITA Type K"

	PowerOutletTemplateTypeLabelITATypeLCEI2350 PowerOutletTemplateTypeLabel = "ITA Type L (CEI 23-50)"

	PowerOutletTemplateTypeLabelITATypeMBS546 PowerOutletTemplateTypeLabel = "ITA Type M (BS 546)"

	PowerOutletTemplateTypeLabelITATypeN PowerOutletTemplateTypeLabel = "ITA Type N"

	PowerOutletTemplateTypeLabelITATypeO PowerOutletTemplateTypeLabel = "ITA Type O"

	PowerOutletTemplateTypeLabelN2PE4H PowerOutletTemplateTypeLabel = "2P+E 4H"

	PowerOutletTemplateTypeLabelN2PE6H PowerOutletTemplateTypeLabel = "2P+E 6H"

	PowerOutletTemplateTypeLabelN2PE9H PowerOutletTemplateTypeLabel = "2P+E 9H"

	PowerOutletTemplateTypeLabelN3PE4H PowerOutletTemplateTypeLabel = "3P+E 4H"

	PowerOutletTemplateTypeLabelN3PE6H PowerOutletTemplateTypeLabel = "3P+E 6H"

	PowerOutletTemplateTypeLabelN3PE9H PowerOutletTemplateTypeLabel = "3P+E 9H"

	PowerOutletTemplateTypeLabelN3PNE4H PowerOutletTemplateTypeLabel = "3P+N+E 4H"

	PowerOutletTemplateTypeLabelN3PNE6H PowerOutletTemplateTypeLabel = "3P+N+E 6H"

	PowerOutletTemplateTypeLabelN3PNE9H PowerOutletTemplateTypeLabel = "3P+N+E 9H"

	PowerOutletTemplateTypeLabelNEMA1030R PowerOutletTemplateTypeLabel = "NEMA 10-30R"

	PowerOutletTemplateTypeLabelNEMA1050R PowerOutletTemplateTypeLabel = "NEMA 10-50R"

	PowerOutletTemplateTypeLabelNEMA115R PowerOutletTemplateTypeLabel = "NEMA 1-15R"

	PowerOutletTemplateTypeLabelNEMA1420R PowerOutletTemplateTypeLabel = "NEMA 14-20R"

	PowerOutletTemplateTypeLabelNEMA1430R PowerOutletTemplateTypeLabel = "NEMA 14-30R"

	PowerOutletTemplateTypeLabelNEMA1450R PowerOutletTemplateTypeLabel = "NEMA 14-50R"

	PowerOutletTemplateTypeLabelNEMA1460R PowerOutletTemplateTypeLabel = "NEMA 14-60R"

	PowerOutletTemplateTypeLabelNEMA1515R PowerOutletTemplateTypeLabel = "NEMA 15-15R"

	PowerOutletTemplateTypeLabelNEMA1520R PowerOutletTemplateTypeLabel = "NEMA 15-20R"

	PowerOutletTemplateTypeLabelNEMA1530R PowerOutletTemplateTypeLabel = "NEMA 15-30R"

	PowerOutletTemplateTypeLabelNEMA1550R PowerOutletTemplateTypeLabel = "NEMA 15-50R"

	PowerOutletTemplateTypeLabelNEMA1560R PowerOutletTemplateTypeLabel = "NEMA 15-60R"

	PowerOutletTemplateTypeLabelNEMA515R PowerOutletTemplateTypeLabel = "NEMA 5-15R"

	PowerOutletTemplateTypeLabelNEMA520R PowerOutletTemplateTypeLabel = "NEMA 5-20R"

	PowerOutletTemplateTypeLabelNEMA530R PowerOutletTemplateTypeLabel = "NEMA 5-30R"

	PowerOutletTemplateTypeLabelNEMA550R PowerOutletTemplateTypeLabel = "NEMA 5-50R"

	PowerOutletTemplateTypeLabelNEMA615R PowerOutletTemplateTypeLabel = "NEMA 6-15R"

	PowerOutletTemplateTypeLabelNEMA620R PowerOutletTemplateTypeLabel = "NEMA 6-20R"

	PowerOutletTemplateTypeLabelNEMA630R PowerOutletTemplateTypeLabel = "NEMA 6-30R"

	PowerOutletTemplateTypeLabelNEMA650R PowerOutletTemplateTypeLabel = "NEMA 6-50R"

	PowerOutletTemplateTypeLabelNEMAL1030R PowerOutletTemplateTypeLabel = "NEMA L10-30R"

	PowerOutletTemplateTypeLabelNEMAL115R PowerOutletTemplateTypeLabel = "NEMA L1-15R"

	PowerOutletTemplateTypeLabelNEMAL1420R PowerOutletTemplateTypeLabel = "NEMA L14-20R"

	PowerOutletTemplateTypeLabelNEMAL1430R PowerOutletTemplateTypeLabel = "NEMA L14-30R"

	PowerOutletTemplateTypeLabelNEMAL1450R PowerOutletTemplateTypeLabel = "NEMA L14-50R"

	PowerOutletTemplateTypeLabelNEMAL1460R PowerOutletTemplateTypeLabel = "NEMA L14-60R"

	PowerOutletTemplateTypeLabelNEMAL1520R PowerOutletTemplateTypeLabel = "NEMA L15-20R"

	PowerOutletTemplateTypeLabelNEMAL1530R PowerOutletTemplateTypeLabel = "NEMA L15-30R"

	PowerOutletTemplateTypeLabelNEMAL1550R PowerOutletTemplateTypeLabel = "NEMA L15-50R"

	PowerOutletTemplateTypeLabelNEMAL1560R PowerOutletTemplateTypeLabel = "NEMA L15-60R"

	PowerOutletTemplateTypeLabelNEMAL2120R PowerOutletTemplateTypeLabel = "NEMA L21-20R"

	PowerOutletTemplateTypeLabelNEMAL2130R PowerOutletTemplateTypeLabel = "NEMA L21-30R"

	PowerOutletTemplateTypeLabelNEMAL515R PowerOutletTemplateTypeLabel = "NEMA L5-15R"

	PowerOutletTemplateTypeLabelNEMAL520R PowerOutletTemplateTypeLabel = "NEMA L5-20R"

	PowerOutletTemplateTypeLabelNEMAL530R PowerOutletTemplateTypeLabel = "NEMA L5-30R"

	PowerOutletTemplateTypeLabelNEMAL550R PowerOutletTemplateTypeLabel = "NEMA L5-50R"

	PowerOutletTemplateTypeLabelNEMAL615R PowerOutletTemplateTypeLabel = "NEMA L6-15R"

	PowerOutletTemplateTypeLabelNEMAL620R PowerOutletTemplateTypeLabel = "NEMA L6-20R"

	PowerOutletTemplateTypeLabelNEMAL630R PowerOutletTemplateTypeLabel = "NEMA L6-30R"

	PowerOutletTemplateTypeLabelNEMAL650R PowerOutletTemplateTypeLabel = "NEMA L6-50R"

	PowerOutletTemplateTypeLabelPNE4H PowerOutletTemplateTypeLabel = "P+N+E 4H"

	PowerOutletTemplateTypeLabelPNE6H PowerOutletTemplateTypeLabel = "P+N+E 6H"

	PowerOutletTemplateTypeLabelPNE9H PowerOutletTemplateTypeLabel = "P+N+E 9H"

	PowerOutletTemplateTypeLabelUSBMicroB PowerOutletTemplateTypeLabel = "USB Micro B"

	PowerOutletTemplateTypeLabelUSBTypeA PowerOutletTemplateTypeLabel = "USB Type A"

	PowerOutletTemplateTypeLabelUSBTypeC PowerOutletTemplateTypeLabel = "USB Type C"
)

// Defines values for PowerOutletTemplateTypeValue.
const (
	PowerOutletTemplateTypeValueCS6360C PowerOutletTemplateTypeValue = "CS6360C"

	PowerOutletTemplateTypeValueCS6364C PowerOutletTemplateTypeValue = "CS6364C"

	PowerOutletTemplateTypeValueCS8164C PowerOutletTemplateTypeValue = "CS8164C"

	PowerOutletTemplateTypeValueCS8264C PowerOutletTemplateTypeValue = "CS8264C"

	PowerOutletTemplateTypeValueCS8364C PowerOutletTemplateTypeValue = "CS8364C"

	PowerOutletTemplateTypeValueCS8464C PowerOutletTemplateTypeValue = "CS8464C"

	PowerOutletTemplateTypeValueHdotCx PowerOutletTemplateTypeValue = "hdot-cx"

	PowerOutletTemplateTypeValueIec603092pE4h PowerOutletTemplateTypeValue = "iec-60309-2p-e-4h"

	PowerOutletTemplateTypeValueIec603092pE6h PowerOutletTemplateTypeValue = "iec-60309-2p-e-6h"

	PowerOutletTemplateTypeValueIec603092pE9h PowerOutletTemplateTypeValue = "iec-60309-2p-e-9h"

	PowerOutletTemplateTypeValueIec603093pE4h PowerOutletTemplateTypeValue = "iec-60309-3p-e-4h"

	PowerOutletTemplateTypeValueIec603093pE6h PowerOutletTemplateTypeValue = "iec-60309-3p-e-6h"

	PowerOutletTemplateTypeValueIec603093pE9h PowerOutletTemplateTypeValue = "iec-60309-3p-e-9h"

	PowerOutletTemplateTypeValueIec603093pNE4h PowerOutletTemplateTypeValue = "iec-60309-3p-n-e-4h"

	PowerOutletTemplateTypeValueIec603093pNE6h PowerOutletTemplateTypeValue = "iec-60309-3p-n-e-6h"

	PowerOutletTemplateTypeValueIec603093pNE9h PowerOutletTemplateTypeValue = "iec-60309-3p-n-e-9h"

	PowerOutletTemplateTypeValueIec60309PNE4h PowerOutletTemplateTypeValue = "iec-60309-p-n-e-4h"

	PowerOutletTemplateTypeValueIec60309PNE6h PowerOutletTemplateTypeValue = "iec-60309-p-n-e-6h"

	PowerOutletTemplateTypeValueIec60309PNE9h PowerOutletTemplateTypeValue = "iec-60309-p-n-e-9h"

	PowerOutletTemplateTypeValueIec60320C13 PowerOutletTemplateTypeValue = "iec-60320-c13"

	PowerOutletTemplateTypeValueIec60320C15 PowerOutletTemplateTypeValue = "iec-60320-c15"

	PowerOutletTemplateTypeValueIec60320C19 PowerOutletTemplateTypeValue = "iec-60320-c19"

	PowerOutletTemplateTypeValueIec60320C5 PowerOutletTemplateTypeValue = "iec-60320-c5"

	PowerOutletTemplateTypeValueIec60320C7 PowerOutletTemplateTypeValue = "iec-60320-c7"

	PowerOutletTemplateTypeValueItaE PowerOutletTemplateTypeValue = "ita-e"

	PowerOutletTemplateTypeValueItaF PowerOutletTemplateTypeValue = "ita-f"

	PowerOutletTemplateTypeValueItaG PowerOutletTemplateTypeValue = "ita-g"

	PowerOutletTemplateTypeValueItaH PowerOutletTemplateTypeValue = "ita-h"

	PowerOutletTemplateTypeValueItaI PowerOutletTemplateTypeValue = "ita-i"

	PowerOutletTemplateTypeValueItaJ PowerOutletTemplateTypeValue = "ita-j"

	PowerOutletTemplateTypeValueItaK PowerOutletTemplateTypeValue = "ita-k"

	PowerOutletTemplateTypeValueItaL PowerOutletTemplateTypeValue = "ita-l"

	PowerOutletTemplateTypeValueItaM PowerOutletTemplateTypeValue = "ita-m"

	PowerOutletTemplateTypeValueItaN PowerOutletTemplateTypeValue = "ita-n"

	PowerOutletTemplateTypeValueItaO PowerOutletTemplateTypeValue = "ita-o"

	PowerOutletTemplateTypeValueNema1030r PowerOutletTemplateTypeValue = "nema-10-30r"

	PowerOutletTemplateTypeValueNema1050r PowerOutletTemplateTypeValue = "nema-10-50r"

	PowerOutletTemplateTypeValueNema115r PowerOutletTemplateTypeValue = "nema-1-15r"

	PowerOutletTemplateTypeValueNema1420r PowerOutletTemplateTypeValue = "nema-14-20r"

	PowerOutletTemplateTypeValueNema1430r PowerOutletTemplateTypeValue = "nema-14-30r"

	PowerOutletTemplateTypeValueNema1450r PowerOutletTemplateTypeValue = "nema-14-50r"

	PowerOutletTemplateTypeValueNema1460r PowerOutletTemplateTypeValue = "nema-14-60r"

	PowerOutletTemplateTypeValueNema1515r PowerOutletTemplateTypeValue = "nema-15-15r"

	PowerOutletTemplateTypeValueNema1520r PowerOutletTemplateTypeValue = "nema-15-20r"

	PowerOutletTemplateTypeValueNema1530r PowerOutletTemplateTypeValue = "nema-15-30r"

	PowerOutletTemplateTypeValueNema1550r PowerOutletTemplateTypeValue = "nema-15-50r"

	PowerOutletTemplateTypeValueNema1560r PowerOutletTemplateTypeValue = "nema-15-60r"

	PowerOutletTemplateTypeValueNema515r PowerOutletTemplateTypeValue = "nema-5-15r"

	PowerOutletTemplateTypeValueNema520r PowerOutletTemplateTypeValue = "nema-5-20r"

	PowerOutletTemplateTypeValueNema530r PowerOutletTemplateTypeValue = "nema-5-30r"

	PowerOutletTemplateTypeValueNema550r PowerOutletTemplateTypeValue = "nema-5-50r"

	PowerOutletTemplateTypeValueNema615r PowerOutletTemplateTypeValue = "nema-6-15r"

	PowerOutletTemplateTypeValueNema620r PowerOutletTemplateTypeValue = "nema-6-20r"

	PowerOutletTemplateTypeValueNema630r PowerOutletTemplateTypeValue = "nema-6-30r"

	PowerOutletTemplateTypeValueNema650r PowerOutletTemplateTypeValue = "nema-6-50r"

	PowerOutletTemplateTypeValueNemaL1030r PowerOutletTemplateTypeValue = "nema-l10-30r"

	PowerOutletTemplateTypeValueNemaL115r PowerOutletTemplateTypeValue = "nema-l1-15r"

	PowerOutletTemplateTypeValueNemaL1420r PowerOutletTemplateTypeValue = "nema-l14-20r"

	PowerOutletTemplateTypeValueNemaL1430r PowerOutletTemplateTypeValue = "nema-l14-30r"

	PowerOutletTemplateTypeValueNemaL1450r PowerOutletTemplateTypeValue = "nema-l14-50r"

	PowerOutletTemplateTypeValueNemaL1460r PowerOutletTemplateTypeValue = "nema-l14-60r"

	PowerOutletTemplateTypeValueNemaL1520r PowerOutletTemplateTypeValue = "nema-l15-20r"

	PowerOutletTemplateTypeValueNemaL1530r PowerOutletTemplateTypeValue = "nema-l15-30r"

	PowerOutletTemplateTypeValueNemaL1550r PowerOutletTemplateTypeValue = "nema-l15-50r"

	PowerOutletTemplateTypeValueNemaL1560r PowerOutletTemplateTypeValue = "nema-l15-60r"

	PowerOutletTemplateTypeValueNemaL2120r PowerOutletTemplateTypeValue = "nema-l21-20r"

	PowerOutletTemplateTypeValueNemaL2130r PowerOutletTemplateTypeValue = "nema-l21-30r"

	PowerOutletTemplateTypeValueNemaL515r PowerOutletTemplateTypeValue = "nema-l5-15r"

	PowerOutletTemplateTypeValueNemaL520r PowerOutletTemplateTypeValue = "nema-l5-20r"

	PowerOutletTemplateTypeValueNemaL530r PowerOutletTemplateTypeValue = "nema-l5-30r"

	PowerOutletTemplateTypeValueNemaL550r PowerOutletTemplateTypeValue = "nema-l5-50r"

	PowerOutletTemplateTypeValueNemaL615r PowerOutletTemplateTypeValue = "nema-l6-15r"

	PowerOutletTemplateTypeValueNemaL620r PowerOutletTemplateTypeValue = "nema-l6-20r"

	PowerOutletTemplateTypeValueNemaL630r PowerOutletTemplateTypeValue = "nema-l6-30r"

	PowerOutletTemplateTypeValueNemaL650r PowerOutletTemplateTypeValue = "nema-l6-50r"

	PowerOutletTemplateTypeValueUsbA PowerOutletTemplateTypeValue = "usb-a"

	PowerOutletTemplateTypeValueUsbC PowerOutletTemplateTypeValue = "usb-c"

	PowerOutletTemplateTypeValueUsbMicroB PowerOutletTemplateTypeValue = "usb-micro-b"
)

// Defines values for PowerOutletTypeChoices.
const (
	PowerOutletTypeChoicesCS6360C PowerOutletTypeChoices = "CS6360C"

	PowerOutletTypeChoicesCS6364C PowerOutletTypeChoices = "CS6364C"

	PowerOutletTypeChoicesCS8164C PowerOutletTypeChoices = "CS8164C"

	PowerOutletTypeChoicesCS8264C PowerOutletTypeChoices = "CS8264C"

	PowerOutletTypeChoicesCS8364C PowerOutletTypeChoices = "CS8364C"

	PowerOutletTypeChoicesCS8464C PowerOutletTypeChoices = "CS8464C"

	PowerOutletTypeChoicesHdotCx PowerOutletTypeChoices = "hdot-cx"

	PowerOutletTypeChoicesIec603092pE4h PowerOutletTypeChoices = "iec-60309-2p-e-4h"

	PowerOutletTypeChoicesIec603092pE6h PowerOutletTypeChoices = "iec-60309-2p-e-6h"

	PowerOutletTypeChoicesIec603092pE9h PowerOutletTypeChoices = "iec-60309-2p-e-9h"

	PowerOutletTypeChoicesIec603093pE4h PowerOutletTypeChoices = "iec-60309-3p-e-4h"

	PowerOutletTypeChoicesIec603093pE6h PowerOutletTypeChoices = "iec-60309-3p-e-6h"

	PowerOutletTypeChoicesIec603093pE9h PowerOutletTypeChoices = "iec-60309-3p-e-9h"

	PowerOutletTypeChoicesIec603093pNE4h PowerOutletTypeChoices = "iec-60309-3p-n-e-4h"

	PowerOutletTypeChoicesIec603093pNE6h PowerOutletTypeChoices = "iec-60309-3p-n-e-6h"

	PowerOutletTypeChoicesIec603093pNE9h PowerOutletTypeChoices = "iec-60309-3p-n-e-9h"

	PowerOutletTypeChoicesIec60309PNE4h PowerOutletTypeChoices = "iec-60309-p-n-e-4h"

	PowerOutletTypeChoicesIec60309PNE6h PowerOutletTypeChoices = "iec-60309-p-n-e-6h"

	PowerOutletTypeChoicesIec60309PNE9h PowerOutletTypeChoices = "iec-60309-p-n-e-9h"

	PowerOutletTypeChoicesIec60320C13 PowerOutletTypeChoices = "iec-60320-c13"

	PowerOutletTypeChoicesIec60320C15 PowerOutletTypeChoices = "iec-60320-c15"

	PowerOutletTypeChoicesIec60320C19 PowerOutletTypeChoices = "iec-60320-c19"

	PowerOutletTypeChoicesIec60320C5 PowerOutletTypeChoices = "iec-60320-c5"

	PowerOutletTypeChoicesIec60320C7 PowerOutletTypeChoices = "iec-60320-c7"

	PowerOutletTypeChoicesItaE PowerOutletTypeChoices = "ita-e"

	PowerOutletTypeChoicesItaF PowerOutletTypeChoices = "ita-f"

	PowerOutletTypeChoicesItaG PowerOutletTypeChoices = "ita-g"

	PowerOutletTypeChoicesItaH PowerOutletTypeChoices = "ita-h"

	PowerOutletTypeChoicesItaI PowerOutletTypeChoices = "ita-i"

	PowerOutletTypeChoicesItaJ PowerOutletTypeChoices = "ita-j"

	PowerOutletTypeChoicesItaK PowerOutletTypeChoices = "ita-k"

	PowerOutletTypeChoicesItaL PowerOutletTypeChoices = "ita-l"

	PowerOutletTypeChoicesItaM PowerOutletTypeChoices = "ita-m"

	PowerOutletTypeChoicesItaN PowerOutletTypeChoices = "ita-n"

	PowerOutletTypeChoicesItaO PowerOutletTypeChoices = "ita-o"

	PowerOutletTypeChoicesNema1030r PowerOutletTypeChoices = "nema-10-30r"

	PowerOutletTypeChoicesNema1050r PowerOutletTypeChoices = "nema-10-50r"

	PowerOutletTypeChoicesNema115r PowerOutletTypeChoices = "nema-1-15r"

	PowerOutletTypeChoicesNema1420r PowerOutletTypeChoices = "nema-14-20r"

	PowerOutletTypeChoicesNema1430r PowerOutletTypeChoices = "nema-14-30r"

	PowerOutletTypeChoicesNema1450r PowerOutletTypeChoices = "nema-14-50r"

	PowerOutletTypeChoicesNema1460r PowerOutletTypeChoices = "nema-14-60r"

	PowerOutletTypeChoicesNema1515r PowerOutletTypeChoices = "nema-15-15r"

	PowerOutletTypeChoicesNema1520r PowerOutletTypeChoices = "nema-15-20r"

	PowerOutletTypeChoicesNema1530r PowerOutletTypeChoices = "nema-15-30r"

	PowerOutletTypeChoicesNema1550r PowerOutletTypeChoices = "nema-15-50r"

	PowerOutletTypeChoicesNema1560r PowerOutletTypeChoices = "nema-15-60r"

	PowerOutletTypeChoicesNema515r PowerOutletTypeChoices = "nema-5-15r"

	PowerOutletTypeChoicesNema520r PowerOutletTypeChoices = "nema-5-20r"

	PowerOutletTypeChoicesNema530r PowerOutletTypeChoices = "nema-5-30r"

	PowerOutletTypeChoicesNema550r PowerOutletTypeChoices = "nema-5-50r"

	PowerOutletTypeChoicesNema615r PowerOutletTypeChoices = "nema-6-15r"

	PowerOutletTypeChoicesNema620r PowerOutletTypeChoices = "nema-6-20r"

	PowerOutletTypeChoicesNema630r PowerOutletTypeChoices = "nema-6-30r"

	PowerOutletTypeChoicesNema650r PowerOutletTypeChoices = "nema-6-50r"

	PowerOutletTypeChoicesNemaL1030r PowerOutletTypeChoices = "nema-l10-30r"

	PowerOutletTypeChoicesNemaL115r PowerOutletTypeChoices = "nema-l1-15r"

	PowerOutletTypeChoicesNemaL1420r PowerOutletTypeChoices = "nema-l14-20r"

	PowerOutletTypeChoicesNemaL1430r PowerOutletTypeChoices = "nema-l14-30r"

	PowerOutletTypeChoicesNemaL1450r PowerOutletTypeChoices = "nema-l14-50r"

	PowerOutletTypeChoicesNemaL1460r PowerOutletTypeChoices = "nema-l14-60r"

	PowerOutletTypeChoicesNemaL1520r PowerOutletTypeChoices = "nema-l15-20r"

	PowerOutletTypeChoicesNemaL1530r PowerOutletTypeChoices = "nema-l15-30r"

	PowerOutletTypeChoicesNemaL1550r PowerOutletTypeChoices = "nema-l15-50r"

	PowerOutletTypeChoicesNemaL1560r PowerOutletTypeChoices = "nema-l15-60r"

	PowerOutletTypeChoicesNemaL2120r PowerOutletTypeChoices = "nema-l21-20r"

	PowerOutletTypeChoicesNemaL2130r PowerOutletTypeChoices = "nema-l21-30r"

	PowerOutletTypeChoicesNemaL515r PowerOutletTypeChoices = "nema-l5-15r"

	PowerOutletTypeChoicesNemaL520r PowerOutletTypeChoices = "nema-l5-20r"

	PowerOutletTypeChoicesNemaL530r PowerOutletTypeChoices = "nema-l5-30r"

	PowerOutletTypeChoicesNemaL550r PowerOutletTypeChoices = "nema-l5-50r"

	PowerOutletTypeChoicesNemaL615r PowerOutletTypeChoices = "nema-l6-15r"

	PowerOutletTypeChoicesNemaL620r PowerOutletTypeChoices = "nema-l6-20r"

	PowerOutletTypeChoicesNemaL630r PowerOutletTypeChoices = "nema-l6-30r"

	PowerOutletTypeChoicesNemaL650r PowerOutletTypeChoices = "nema-l6-50r"

	PowerOutletTypeChoicesUsbA PowerOutletTypeChoices = "usb-a"

	PowerOutletTypeChoicesUsbC PowerOutletTypeChoices = "usb-c"

	PowerOutletTypeChoicesUsbMicroB PowerOutletTypeChoices = "usb-micro-b"
)

// Defines values for PowerPortTypeLabel.
const (
	PowerPortTypeLabelC14 PowerPortTypeLabel = "C14"

	PowerPortTypeLabelC16 PowerPortTypeLabel = "C16"

	PowerPortTypeLabelC20 PowerPortTypeLabel = "C20"

	PowerPortTypeLabelC6 PowerPortTypeLabel = "C6"

	PowerPortTypeLabelC8 PowerPortTypeLabel = "C8"

	PowerPortTypeLabelCS6361C PowerPortTypeLabel = "CS6361C"

	PowerPortTypeLabelCS6365C PowerPortTypeLabel = "CS6365C"

	PowerPortTypeLabelCS8165C PowerPortTypeLabel = "CS8165C"

	PowerPortTypeLabelCS8265C PowerPortTypeLabel = "CS8265C"

	PowerPortTypeLabelCS8365C PowerPortTypeLabel = "CS8365C"

	PowerPortTypeLabelCS8465C PowerPortTypeLabel = "CS8465C"

	PowerPortTypeLabelITATypeECEE75 PowerPortTypeLabel = "ITA Type E (CEE 7/5)"

	PowerPortTypeLabelITATypeEFCEE77 PowerPortTypeLabel = "ITA Type E/F (CEE 7/7)"

	PowerPortTypeLabelITATypeFCEE74 PowerPortTypeLabel = "ITA Type F (CEE 7/4)"

	PowerPortTypeLabelITATypeGBS1363 PowerPortTypeLabel = "ITA Type G (BS 1363)"

	PowerPortTypeLabelITATypeH PowerPortTypeLabel = "ITA Type H"

	PowerPortTypeLabelITATypeI PowerPortTypeLabel = "ITA Type I"

	PowerPortTypeLabelITATypeJ PowerPortTypeLabel = "ITA Type J"

	PowerPortTypeLabelITATypeK PowerPortTypeLabel = "ITA Type K"

	PowerPortTypeLabelITATypeLCEI2350 PowerPortTypeLabel = "ITA Type L (CEI 23-50)"

	PowerPortTypeLabelITATypeMBS546 PowerPortTypeLabel = "ITA Type M (BS 546)"

	PowerPortTypeLabelITATypeN PowerPortTypeLabel = "ITA Type N"

	PowerPortTypeLabelITATypeO PowerPortTypeLabel = "ITA Type O"

	PowerPortTypeLabelN2PE4H PowerPortTypeLabel = "2P+E 4H"

	PowerPortTypeLabelN2PE6H PowerPortTypeLabel = "2P+E 6H"

	PowerPortTypeLabelN2PE9H PowerPortTypeLabel = "2P+E 9H"

	PowerPortTypeLabelN3PE4H PowerPortTypeLabel = "3P+E 4H"

	PowerPortTypeLabelN3PE6H PowerPortTypeLabel = "3P+E 6H"

	PowerPortTypeLabelN3PE9H PowerPortTypeLabel = "3P+E 9H"

	PowerPortTypeLabelN3PNE4H PowerPortTypeLabel = "3P+N+E 4H"

	PowerPortTypeLabelN3PNE6H PowerPortTypeLabel = "3P+N+E 6H"

	PowerPortTypeLabelN3PNE9H PowerPortTypeLabel = "3P+N+E 9H"

	PowerPortTypeLabelNEMA1030P PowerPortTypeLabel = "NEMA 10-30P"

	PowerPortTypeLabelNEMA1050P PowerPortTypeLabel = "NEMA 10-50P"

	PowerPortTypeLabelNEMA115P PowerPortTypeLabel = "NEMA 1-15P"

	PowerPortTypeLabelNEMA1420P PowerPortTypeLabel = "NEMA 14-20P"

	PowerPortTypeLabelNEMA1430P PowerPortTypeLabel = "NEMA 14-30P"

	PowerPortTypeLabelNEMA1450P PowerPortTypeLabel = "NEMA 14-50P"

	PowerPortTypeLabelNEMA1460P PowerPortTypeLabel = "NEMA 14-60P"

	PowerPortTypeLabelNEMA1515P PowerPortTypeLabel = "NEMA 15-15P"

	PowerPortTypeLabelNEMA1520P PowerPortTypeLabel = "NEMA 15-20P"

	PowerPortTypeLabelNEMA1530P PowerPortTypeLabel = "NEMA 15-30P"

	PowerPortTypeLabelNEMA1550P PowerPortTypeLabel = "NEMA 15-50P"

	PowerPortTypeLabelNEMA1560P PowerPortTypeLabel = "NEMA 15-60P"

	PowerPortTypeLabelNEMA515P PowerPortTypeLabel = "NEMA 5-15P"

	PowerPortTypeLabelNEMA520P PowerPortTypeLabel = "NEMA 5-20P"

	PowerPortTypeLabelNEMA530P PowerPortTypeLabel = "NEMA 5-30P"

	PowerPortTypeLabelNEMA550P PowerPortTypeLabel = "NEMA 5-50P"

	PowerPortTypeLabelNEMA615P PowerPortTypeLabel = "NEMA 6-15P"

	PowerPortTypeLabelNEMA620P PowerPortTypeLabel = "NEMA 6-20P"

	PowerPortTypeLabelNEMA630P PowerPortTypeLabel = "NEMA 6-30P"

	PowerPortTypeLabelNEMA650P PowerPortTypeLabel = "NEMA 6-50P"

	PowerPortTypeLabelNEMAL1030P PowerPortTypeLabel = "NEMA L10-30P"

	PowerPortTypeLabelNEMAL115P PowerPortTypeLabel = "NEMA L1-15P"

	PowerPortTypeLabelNEMAL1420P PowerPortTypeLabel = "NEMA L14-20P"

	PowerPortTypeLabelNEMAL1430P PowerPortTypeLabel = "NEMA L14-30P"

	PowerPortTypeLabelNEMAL1450P PowerPortTypeLabel = "NEMA L14-50P"

	PowerPortTypeLabelNEMAL1460P PowerPortTypeLabel = "NEMA L14-60P"

	PowerPortTypeLabelNEMAL1520P PowerPortTypeLabel = "NEMA L15-20P"

	PowerPortTypeLabelNEMAL1530P PowerPortTypeLabel = "NEMA L15-30P"

	PowerPortTypeLabelNEMAL1550P PowerPortTypeLabel = "NEMA L15-50P"

	PowerPortTypeLabelNEMAL1560P PowerPortTypeLabel = "NEMA L15-60P"

	PowerPortTypeLabelNEMAL2120P PowerPortTypeLabel = "NEMA L21-20P"

	PowerPortTypeLabelNEMAL2130P PowerPortTypeLabel = "NEMA L21-30P"

	PowerPortTypeLabelNEMAL515P PowerPortTypeLabel = "NEMA L5-15P"

	PowerPortTypeLabelNEMAL520P PowerPortTypeLabel = "NEMA L5-20P"

	PowerPortTypeLabelNEMAL530P PowerPortTypeLabel = "NEMA L5-30P"

	PowerPortTypeLabelNEMAL550P PowerPortTypeLabel = "NEMA L5-50P"

	PowerPortTypeLabelNEMAL615P PowerPortTypeLabel = "NEMA L6-15P"

	PowerPortTypeLabelNEMAL620P PowerPortTypeLabel = "NEMA L6-20P"

	PowerPortTypeLabelNEMAL630P PowerPortTypeLabel = "NEMA L6-30P"

	PowerPortTypeLabelNEMAL650P PowerPortTypeLabel = "NEMA L6-50P"

	PowerPortTypeLabelPNE4H PowerPortTypeLabel = "P+N+E 4H"

	PowerPortTypeLabelPNE6H PowerPortTypeLabel = "P+N+E 6H"

	PowerPortTypeLabelPNE9H PowerPortTypeLabel = "P+N+E 9H"

	PowerPortTypeLabelUSB30MicroB PowerPortTypeLabel = "USB 3.0 Micro B"

	PowerPortTypeLabelUSB30TypeB PowerPortTypeLabel = "USB 3.0 Type B"

	PowerPortTypeLabelUSBMicroA PowerPortTypeLabel = "USB Micro A"

	PowerPortTypeLabelUSBMicroB PowerPortTypeLabel = "USB Micro B"

	PowerPortTypeLabelUSBMiniA PowerPortTypeLabel = "USB Mini A"

	PowerPortTypeLabelUSBMiniB PowerPortTypeLabel = "USB Mini B"

	PowerPortTypeLabelUSBTypeA PowerPortTypeLabel = "USB Type A"

	PowerPortTypeLabelUSBTypeB PowerPortTypeLabel = "USB Type B"

	PowerPortTypeLabelUSBTypeC PowerPortTypeLabel = "USB Type C"
)

// Defines values for PowerPortTypeValue.
const (
	PowerPortTypeValueCs6361c PowerPortTypeValue = "cs6361c"

	PowerPortTypeValueCs6365c PowerPortTypeValue = "cs6365c"

	PowerPortTypeValueCs8165c PowerPortTypeValue = "cs8165c"

	PowerPortTypeValueCs8265c PowerPortTypeValue = "cs8265c"

	PowerPortTypeValueCs8365c PowerPortTypeValue = "cs8365c"

	PowerPortTypeValueCs8465c PowerPortTypeValue = "cs8465c"

	PowerPortTypeValueIec603092pE4h PowerPortTypeValue = "iec-60309-2p-e-4h"

	PowerPortTypeValueIec603092pE6h PowerPortTypeValue = "iec-60309-2p-e-6h"

	PowerPortTypeValueIec603092pE9h PowerPortTypeValue = "iec-60309-2p-e-9h"

	PowerPortTypeValueIec603093pE4h PowerPortTypeValue = "iec-60309-3p-e-4h"

	PowerPortTypeValueIec603093pE6h PowerPortTypeValue = "iec-60309-3p-e-6h"

	PowerPortTypeValueIec603093pE9h PowerPortTypeValue = "iec-60309-3p-e-9h"

	PowerPortTypeValueIec603093pNE4h PowerPortTypeValue = "iec-60309-3p-n-e-4h"

	PowerPortTypeValueIec603093pNE6h PowerPortTypeValue = "iec-60309-3p-n-e-6h"

	PowerPortTypeValueIec603093pNE9h PowerPortTypeValue = "iec-60309-3p-n-e-9h"

	PowerPortTypeValueIec60309PNE4h PowerPortTypeValue = "iec-60309-p-n-e-4h"

	PowerPortTypeValueIec60309PNE6h PowerPortTypeValue = "iec-60309-p-n-e-6h"

	PowerPortTypeValueIec60309PNE9h PowerPortTypeValue = "iec-60309-p-n-e-9h"

	PowerPortTypeValueIec60320C14 PowerPortTypeValue = "iec-60320-c14"

	PowerPortTypeValueIec60320C16 PowerPortTypeValue = "iec-60320-c16"

	PowerPortTypeValueIec60320C20 PowerPortTypeValue = "iec-60320-c20"

	PowerPortTypeValueIec60320C6 PowerPortTypeValue = "iec-60320-c6"

	PowerPortTypeValueIec60320C8 PowerPortTypeValue = "iec-60320-c8"

	PowerPortTypeValueItaE PowerPortTypeValue = "ita-e"

	PowerPortTypeValueItaEf PowerPortTypeValue = "ita-ef"

	PowerPortTypeValueItaF PowerPortTypeValue = "ita-f"

	PowerPortTypeValueItaG PowerPortTypeValue = "ita-g"

	PowerPortTypeValueItaH PowerPortTypeValue = "ita-h"

	PowerPortTypeValueItaI PowerPortTypeValue = "ita-i"

	PowerPortTypeValueItaJ PowerPortTypeValue = "ita-j"

	PowerPortTypeValueItaK PowerPortTypeValue = "ita-k"

	PowerPortTypeValueItaL PowerPortTypeValue = "ita-l"

	PowerPortTypeValueItaM PowerPortTypeValue = "ita-m"

	PowerPortTypeValueItaN PowerPortTypeValue = "ita-n"

	PowerPortTypeValueItaO PowerPortTypeValue = "ita-o"

	PowerPortTypeValueNema1030p PowerPortTypeValue = "nema-10-30p"

	PowerPortTypeValueNema1050p PowerPortTypeValue = "nema-10-50p"

	PowerPortTypeValueNema115p PowerPortTypeValue = "nema-1-15p"

	PowerPortTypeValueNema1420p PowerPortTypeValue = "nema-14-20p"

	PowerPortTypeValueNema1430p PowerPortTypeValue = "nema-14-30p"

	PowerPortTypeValueNema1450p PowerPortTypeValue = "nema-14-50p"

	PowerPortTypeValueNema1460p PowerPortTypeValue = "nema-14-60p"

	PowerPortTypeValueNema1515p PowerPortTypeValue = "nema-15-15p"

	PowerPortTypeValueNema1520p PowerPortTypeValue = "nema-15-20p"

	PowerPortTypeValueNema1530p PowerPortTypeValue = "nema-15-30p"

	PowerPortTypeValueNema1550p PowerPortTypeValue = "nema-15-50p"

	PowerPortTypeValueNema1560p PowerPortTypeValue = "nema-15-60p"

	PowerPortTypeValueNema515p PowerPortTypeValue = "nema-5-15p"

	PowerPortTypeValueNema520p PowerPortTypeValue = "nema-5-20p"

	PowerPortTypeValueNema530p PowerPortTypeValue = "nema-5-30p"

	PowerPortTypeValueNema550p PowerPortTypeValue = "nema-5-50p"

	PowerPortTypeValueNema615p PowerPortTypeValue = "nema-6-15p"

	PowerPortTypeValueNema620p PowerPortTypeValue = "nema-6-20p"

	PowerPortTypeValueNema630p PowerPortTypeValue = "nema-6-30p"

	PowerPortTypeValueNema650p PowerPortTypeValue = "nema-6-50p"

	PowerPortTypeValueNemaL1030p PowerPortTypeValue = "nema-l10-30p"

	PowerPortTypeValueNemaL115p PowerPortTypeValue = "nema-l1-15p"

	PowerPortTypeValueNemaL1420p PowerPortTypeValue = "nema-l14-20p"

	PowerPortTypeValueNemaL1430p PowerPortTypeValue = "nema-l14-30p"

	PowerPortTypeValueNemaL1450p PowerPortTypeValue = "nema-l14-50p"

	PowerPortTypeValueNemaL1460p PowerPortTypeValue = "nema-l14-60p"

	PowerPortTypeValueNemaL1520p PowerPortTypeValue = "nema-l15-20p"

	PowerPortTypeValueNemaL1530p PowerPortTypeValue = "nema-l15-30p"

	PowerPortTypeValueNemaL1550p PowerPortTypeValue = "nema-l15-50p"

	PowerPortTypeValueNemaL1560p PowerPortTypeValue = "nema-l15-60p"

	PowerPortTypeValueNemaL2120p PowerPortTypeValue = "nema-l21-20p"

	PowerPortTypeValueNemaL2130p PowerPortTypeValue = "nema-l21-30p"

	PowerPortTypeValueNemaL515p PowerPortTypeValue = "nema-l5-15p"

	PowerPortTypeValueNemaL520p PowerPortTypeValue = "nema-l5-20p"

	PowerPortTypeValueNemaL530p PowerPortTypeValue = "nema-l5-30p"

	PowerPortTypeValueNemaL550p PowerPortTypeValue = "nema-l5-50p"

	PowerPortTypeValueNemaL615p PowerPortTypeValue = "nema-l6-15p"

	PowerPortTypeValueNemaL620p PowerPortTypeValue = "nema-l6-20p"

	PowerPortTypeValueNemaL630p PowerPortTypeValue = "nema-l6-30p"

	PowerPortTypeValueNemaL650p PowerPortTypeValue = "nema-l6-50p"

	PowerPortTypeValueUsb3B PowerPortTypeValue = "usb-3-b"

	PowerPortTypeValueUsb3MicroB PowerPortTypeValue = "usb-3-micro-b"

	PowerPortTypeValueUsbA PowerPortTypeValue = "usb-a"

	PowerPortTypeValueUsbB PowerPortTypeValue = "usb-b"

	PowerPortTypeValueUsbC PowerPortTypeValue = "usb-c"

	PowerPortTypeValueUsbMicroA PowerPortTypeValue = "usb-micro-a"

	PowerPortTypeValueUsbMicroB PowerPortTypeValue = "usb-micro-b"

	PowerPortTypeValueUsbMiniA PowerPortTypeValue = "usb-mini-a"

	PowerPortTypeValueUsbMiniB PowerPortTypeValue = "usb-mini-b"
)

// Defines values for PowerPortTemplateTypeLabel.
const (
	PowerPortTemplateTypeLabelC14 PowerPortTemplateTypeLabel = "C14"

	PowerPortTemplateTypeLabelC16 PowerPortTemplateTypeLabel = "C16"

	PowerPortTemplateTypeLabelC20 PowerPortTemplateTypeLabel = "C20"

	PowerPortTemplateTypeLabelC6 PowerPortTemplateTypeLabel = "C6"

	PowerPortTemplateTypeLabelC8 PowerPortTemplateTypeLabel = "C8"

	PowerPortTemplateTypeLabelCS6361C PowerPortTemplateTypeLabel = "CS6361C"

	PowerPortTemplateTypeLabelCS6365C PowerPortTemplateTypeLabel = "CS6365C"

	PowerPortTemplateTypeLabelCS8165C PowerPortTemplateTypeLabel = "CS8165C"

	PowerPortTemplateTypeLabelCS8265C PowerPortTemplateTypeLabel = "CS8265C"

	PowerPortTemplateTypeLabelCS8365C PowerPortTemplateTypeLabel = "CS8365C"

	PowerPortTemplateTypeLabelCS8465C PowerPortTemplateTypeLabel = "CS8465C"

	PowerPortTemplateTypeLabelITATypeECEE75 PowerPortTemplateTypeLabel = "ITA Type E (CEE 7/5)"

	PowerPortTemplateTypeLabelITATypeEFCEE77 PowerPortTemplateTypeLabel = "ITA Type E/F (CEE 7/7)"

	PowerPortTemplateTypeLabelITATypeFCEE74 PowerPortTemplateTypeLabel = "ITA Type F (CEE 7/4)"

	PowerPortTemplateTypeLabelITATypeGBS1363 PowerPortTemplateTypeLabel = "ITA Type G (BS 1363)"

	PowerPortTemplateTypeLabelITATypeH PowerPortTemplateTypeLabel = "ITA Type H"

	PowerPortTemplateTypeLabelITATypeI PowerPortTemplateTypeLabel = "ITA Type I"

	PowerPortTemplateTypeLabelITATypeJ PowerPortTemplateTypeLabel = "ITA Type J"

	PowerPortTemplateTypeLabelITATypeK PowerPortTemplateTypeLabel = "ITA Type K"

	PowerPortTemplateTypeLabelITATypeLCEI2350 PowerPortTemplateTypeLabel = "ITA Type L (CEI 23-50)"

	PowerPortTemplateTypeLabelITATypeMBS546 PowerPortTemplateTypeLabel = "ITA Type M (BS 546)"

	PowerPortTemplateTypeLabelITATypeN PowerPortTemplateTypeLabel = "ITA Type N"

	PowerPortTemplateTypeLabelITATypeO PowerPortTemplateTypeLabel = "ITA Type O"

	PowerPortTemplateTypeLabelN2PE4H PowerPortTemplateTypeLabel = "2P+E 4H"

	PowerPortTemplateTypeLabelN2PE6H PowerPortTemplateTypeLabel = "2P+E 6H"

	PowerPortTemplateTypeLabelN2PE9H PowerPortTemplateTypeLabel = "2P+E 9H"

	PowerPortTemplateTypeLabelN3PE4H PowerPortTemplateTypeLabel = "3P+E 4H"

	PowerPortTemplateTypeLabelN3PE6H PowerPortTemplateTypeLabel = "3P+E 6H"

	PowerPortTemplateTypeLabelN3PE9H PowerPortTemplateTypeLabel = "3P+E 9H"

	PowerPortTemplateTypeLabelN3PNE4H PowerPortTemplateTypeLabel = "3P+N+E 4H"

	PowerPortTemplateTypeLabelN3PNE6H PowerPortTemplateTypeLabel = "3P+N+E 6H"

	PowerPortTemplateTypeLabelN3PNE9H PowerPortTemplateTypeLabel = "3P+N+E 9H"

	PowerPortTemplateTypeLabelNEMA1030P PowerPortTemplateTypeLabel = "NEMA 10-30P"

	PowerPortTemplateTypeLabelNEMA1050P PowerPortTemplateTypeLabel = "NEMA 10-50P"

	PowerPortTemplateTypeLabelNEMA115P PowerPortTemplateTypeLabel = "NEMA 1-15P"

	PowerPortTemplateTypeLabelNEMA1420P PowerPortTemplateTypeLabel = "NEMA 14-20P"

	PowerPortTemplateTypeLabelNEMA1430P PowerPortTemplateTypeLabel = "NEMA 14-30P"

	PowerPortTemplateTypeLabelNEMA1450P PowerPortTemplateTypeLabel = "NEMA 14-50P"

	PowerPortTemplateTypeLabelNEMA1460P PowerPortTemplateTypeLabel = "NEMA 14-60P"

	PowerPortTemplateTypeLabelNEMA1515P PowerPortTemplateTypeLabel = "NEMA 15-15P"

	PowerPortTemplateTypeLabelNEMA1520P PowerPortTemplateTypeLabel = "NEMA 15-20P"

	PowerPortTemplateTypeLabelNEMA1530P PowerPortTemplateTypeLabel = "NEMA 15-30P"

	PowerPortTemplateTypeLabelNEMA1550P PowerPortTemplateTypeLabel = "NEMA 15-50P"

	PowerPortTemplateTypeLabelNEMA1560P PowerPortTemplateTypeLabel = "NEMA 15-60P"

	PowerPortTemplateTypeLabelNEMA515P PowerPortTemplateTypeLabel = "NEMA 5-15P"

	PowerPortTemplateTypeLabelNEMA520P PowerPortTemplateTypeLabel = "NEMA 5-20P"

	PowerPortTemplateTypeLabelNEMA530P PowerPortTemplateTypeLabel = "NEMA 5-30P"

	PowerPortTemplateTypeLabelNEMA550P PowerPortTemplateTypeLabel = "NEMA 5-50P"

	PowerPortTemplateTypeLabelNEMA615P PowerPortTemplateTypeLabel = "NEMA 6-15P"

	PowerPortTemplateTypeLabelNEMA620P PowerPortTemplateTypeLabel = "NEMA 6-20P"

	PowerPortTemplateTypeLabelNEMA630P PowerPortTemplateTypeLabel = "NEMA 6-30P"

	PowerPortTemplateTypeLabelNEMA650P PowerPortTemplateTypeLabel = "NEMA 6-50P"

	PowerPortTemplateTypeLabelNEMAL1030P PowerPortTemplateTypeLabel = "NEMA L10-30P"

	PowerPortTemplateTypeLabelNEMAL115P PowerPortTemplateTypeLabel = "NEMA L1-15P"

	PowerPortTemplateTypeLabelNEMAL1420P PowerPortTemplateTypeLabel = "NEMA L14-20P"

	PowerPortTemplateTypeLabelNEMAL1430P PowerPortTemplateTypeLabel = "NEMA L14-30P"

	PowerPortTemplateTypeLabelNEMAL1450P PowerPortTemplateTypeLabel = "NEMA L14-50P"

	PowerPortTemplateTypeLabelNEMAL1460P PowerPortTemplateTypeLabel = "NEMA L14-60P"

	PowerPortTemplateTypeLabelNEMAL1520P PowerPortTemplateTypeLabel = "NEMA L15-20P"

	PowerPortTemplateTypeLabelNEMAL1530P PowerPortTemplateTypeLabel = "NEMA L15-30P"

	PowerPortTemplateTypeLabelNEMAL1550P PowerPortTemplateTypeLabel = "NEMA L15-50P"

	PowerPortTemplateTypeLabelNEMAL1560P PowerPortTemplateTypeLabel = "NEMA L15-60P"

	PowerPortTemplateTypeLabelNEMAL2120P PowerPortTemplateTypeLabel = "NEMA L21-20P"

	PowerPortTemplateTypeLabelNEMAL2130P PowerPortTemplateTypeLabel = "NEMA L21-30P"

	PowerPortTemplateTypeLabelNEMAL515P PowerPortTemplateTypeLabel = "NEMA L5-15P"

	PowerPortTemplateTypeLabelNEMAL520P PowerPortTemplateTypeLabel = "NEMA L5-20P"

	PowerPortTemplateTypeLabelNEMAL530P PowerPortTemplateTypeLabel = "NEMA L5-30P"

	PowerPortTemplateTypeLabelNEMAL550P PowerPortTemplateTypeLabel = "NEMA L5-50P"

	PowerPortTemplateTypeLabelNEMAL615P PowerPortTemplateTypeLabel = "NEMA L6-15P"

	PowerPortTemplateTypeLabelNEMAL620P PowerPortTemplateTypeLabel = "NEMA L6-20P"

	PowerPortTemplateTypeLabelNEMAL630P PowerPortTemplateTypeLabel = "NEMA L6-30P"

	PowerPortTemplateTypeLabelNEMAL650P PowerPortTemplateTypeLabel = "NEMA L6-50P"

	PowerPortTemplateTypeLabelPNE4H PowerPortTemplateTypeLabel = "P+N+E 4H"

	PowerPortTemplateTypeLabelPNE6H PowerPortTemplateTypeLabel = "P+N+E 6H"

	PowerPortTemplateTypeLabelPNE9H PowerPortTemplateTypeLabel = "P+N+E 9H"

	PowerPortTemplateTypeLabelUSB30MicroB PowerPortTemplateTypeLabel = "USB 3.0 Micro B"

	PowerPortTemplateTypeLabelUSB30TypeB PowerPortTemplateTypeLabel = "USB 3.0 Type B"

	PowerPortTemplateTypeLabelUSBMicroA PowerPortTemplateTypeLabel = "USB Micro A"

	PowerPortTemplateTypeLabelUSBMicroB PowerPortTemplateTypeLabel = "USB Micro B"

	PowerPortTemplateTypeLabelUSBMiniA PowerPortTemplateTypeLabel = "USB Mini A"

	PowerPortTemplateTypeLabelUSBMiniB PowerPortTemplateTypeLabel = "USB Mini B"

	PowerPortTemplateTypeLabelUSBTypeA PowerPortTemplateTypeLabel = "USB Type A"

	PowerPortTemplateTypeLabelUSBTypeB PowerPortTemplateTypeLabel = "USB Type B"

	PowerPortTemplateTypeLabelUSBTypeC PowerPortTemplateTypeLabel = "USB Type C"
)

// Defines values for PowerPortTemplateTypeValue.
const (
	PowerPortTemplateTypeValueCs6361c PowerPortTemplateTypeValue = "cs6361c"

	PowerPortTemplateTypeValueCs6365c PowerPortTemplateTypeValue = "cs6365c"

	PowerPortTemplateTypeValueCs8165c PowerPortTemplateTypeValue = "cs8165c"

	PowerPortTemplateTypeValueCs8265c PowerPortTemplateTypeValue = "cs8265c"

	PowerPortTemplateTypeValueCs8365c PowerPortTemplateTypeValue = "cs8365c"

	PowerPortTemplateTypeValueCs8465c PowerPortTemplateTypeValue = "cs8465c"

	PowerPortTemplateTypeValueIec603092pE4h PowerPortTemplateTypeValue = "iec-60309-2p-e-4h"

	PowerPortTemplateTypeValueIec603092pE6h PowerPortTemplateTypeValue = "iec-60309-2p-e-6h"

	PowerPortTemplateTypeValueIec603092pE9h PowerPortTemplateTypeValue = "iec-60309-2p-e-9h"

	PowerPortTemplateTypeValueIec603093pE4h PowerPortTemplateTypeValue = "iec-60309-3p-e-4h"

	PowerPortTemplateTypeValueIec603093pE6h PowerPortTemplateTypeValue = "iec-60309-3p-e-6h"

	PowerPortTemplateTypeValueIec603093pE9h PowerPortTemplateTypeValue = "iec-60309-3p-e-9h"

	PowerPortTemplateTypeValueIec603093pNE4h PowerPortTemplateTypeValue = "iec-60309-3p-n-e-4h"

	PowerPortTemplateTypeValueIec603093pNE6h PowerPortTemplateTypeValue = "iec-60309-3p-n-e-6h"

	PowerPortTemplateTypeValueIec603093pNE9h PowerPortTemplateTypeValue = "iec-60309-3p-n-e-9h"

	PowerPortTemplateTypeValueIec60309PNE4h PowerPortTemplateTypeValue = "iec-60309-p-n-e-4h"

	PowerPortTemplateTypeValueIec60309PNE6h PowerPortTemplateTypeValue = "iec-60309-p-n-e-6h"

	PowerPortTemplateTypeValueIec60309PNE9h PowerPortTemplateTypeValue = "iec-60309-p-n-e-9h"

	PowerPortTemplateTypeValueIec60320C14 PowerPortTemplateTypeValue = "iec-60320-c14"

	PowerPortTemplateTypeValueIec60320C16 PowerPortTemplateTypeValue = "iec-60320-c16"

	PowerPortTemplateTypeValueIec60320C20 PowerPortTemplateTypeValue = "iec-60320-c20"

	PowerPortTemplateTypeValueIec60320C6 PowerPortTemplateTypeValue = "iec-60320-c6"

	PowerPortTemplateTypeValueIec60320C8 PowerPortTemplateTypeValue = "iec-60320-c8"

	PowerPortTemplateTypeValueItaE PowerPortTemplateTypeValue = "ita-e"

	PowerPortTemplateTypeValueItaEf PowerPortTemplateTypeValue = "ita-ef"

	PowerPortTemplateTypeValueItaF PowerPortTemplateTypeValue = "ita-f"

	PowerPortTemplateTypeValueItaG PowerPortTemplateTypeValue = "ita-g"

	PowerPortTemplateTypeValueItaH PowerPortTemplateTypeValue = "ita-h"

	PowerPortTemplateTypeValueItaI PowerPortTemplateTypeValue = "ita-i"

	PowerPortTemplateTypeValueItaJ PowerPortTemplateTypeValue = "ita-j"

	PowerPortTemplateTypeValueItaK PowerPortTemplateTypeValue = "ita-k"

	PowerPortTemplateTypeValueItaL PowerPortTemplateTypeValue = "ita-l"

	PowerPortTemplateTypeValueItaM PowerPortTemplateTypeValue = "ita-m"

	PowerPortTemplateTypeValueItaN PowerPortTemplateTypeValue = "ita-n"

	PowerPortTemplateTypeValueItaO PowerPortTemplateTypeValue = "ita-o"

	PowerPortTemplateTypeValueNema1030p PowerPortTemplateTypeValue = "nema-10-30p"

	PowerPortTemplateTypeValueNema1050p PowerPortTemplateTypeValue = "nema-10-50p"

	PowerPortTemplateTypeValueNema115p PowerPortTemplateTypeValue = "nema-1-15p"

	PowerPortTemplateTypeValueNema1420p PowerPortTemplateTypeValue = "nema-14-20p"

	PowerPortTemplateTypeValueNema1430p PowerPortTemplateTypeValue = "nema-14-30p"

	PowerPortTemplateTypeValueNema1450p PowerPortTemplateTypeValue = "nema-14-50p"

	PowerPortTemplateTypeValueNema1460p PowerPortTemplateTypeValue = "nema-14-60p"

	PowerPortTemplateTypeValueNema1515p PowerPortTemplateTypeValue = "nema-15-15p"

	PowerPortTemplateTypeValueNema1520p PowerPortTemplateTypeValue = "nema-15-20p"

	PowerPortTemplateTypeValueNema1530p PowerPortTemplateTypeValue = "nema-15-30p"

	PowerPortTemplateTypeValueNema1550p PowerPortTemplateTypeValue = "nema-15-50p"

	PowerPortTemplateTypeValueNema1560p PowerPortTemplateTypeValue = "nema-15-60p"

	PowerPortTemplateTypeValueNema515p PowerPortTemplateTypeValue = "nema-5-15p"

	PowerPortTemplateTypeValueNema520p PowerPortTemplateTypeValue = "nema-5-20p"

	PowerPortTemplateTypeValueNema530p PowerPortTemplateTypeValue = "nema-5-30p"

	PowerPortTemplateTypeValueNema550p PowerPortTemplateTypeValue = "nema-5-50p"

	PowerPortTemplateTypeValueNema615p PowerPortTemplateTypeValue = "nema-6-15p"

	PowerPortTemplateTypeValueNema620p PowerPortTemplateTypeValue = "nema-6-20p"

	PowerPortTemplateTypeValueNema630p PowerPortTemplateTypeValue = "nema-6-30p"

	PowerPortTemplateTypeValueNema650p PowerPortTemplateTypeValue = "nema-6-50p"

	PowerPortTemplateTypeValueNemaL1030p PowerPortTemplateTypeValue = "nema-l10-30p"

	PowerPortTemplateTypeValueNemaL115p PowerPortTemplateTypeValue = "nema-l1-15p"

	PowerPortTemplateTypeValueNemaL1420p PowerPortTemplateTypeValue = "nema-l14-20p"

	PowerPortTemplateTypeValueNemaL1430p PowerPortTemplateTypeValue = "nema-l14-30p"

	PowerPortTemplateTypeValueNemaL1450p PowerPortTemplateTypeValue = "nema-l14-50p"

	PowerPortTemplateTypeValueNemaL1460p PowerPortTemplateTypeValue = "nema-l14-60p"

	PowerPortTemplateTypeValueNemaL1520p PowerPortTemplateTypeValue = "nema-l15-20p"

	PowerPortTemplateTypeValueNemaL1530p PowerPortTemplateTypeValue = "nema-l15-30p"

	PowerPortTemplateTypeValueNemaL1550p PowerPortTemplateTypeValue = "nema-l15-50p"

	PowerPortTemplateTypeValueNemaL1560p PowerPortTemplateTypeValue = "nema-l15-60p"

	PowerPortTemplateTypeValueNemaL2120p PowerPortTemplateTypeValue = "nema-l21-20p"

	PowerPortTemplateTypeValueNemaL2130p PowerPortTemplateTypeValue = "nema-l21-30p"

	PowerPortTemplateTypeValueNemaL515p PowerPortTemplateTypeValue = "nema-l5-15p"

	PowerPortTemplateTypeValueNemaL520p PowerPortTemplateTypeValue = "nema-l5-20p"

	PowerPortTemplateTypeValueNemaL530p PowerPortTemplateTypeValue = "nema-l5-30p"

	PowerPortTemplateTypeValueNemaL550p PowerPortTemplateTypeValue = "nema-l5-50p"

	PowerPortTemplateTypeValueNemaL615p PowerPortTemplateTypeValue = "nema-l6-15p"

	PowerPortTemplateTypeValueNemaL620p PowerPortTemplateTypeValue = "nema-l6-20p"

	PowerPortTemplateTypeValueNemaL630p PowerPortTemplateTypeValue = "nema-l6-30p"

	PowerPortTemplateTypeValueNemaL650p PowerPortTemplateTypeValue = "nema-l6-50p"

	PowerPortTemplateTypeValueUsb3B PowerPortTemplateTypeValue = "usb-3-b"

	PowerPortTemplateTypeValueUsb3MicroB PowerPortTemplateTypeValue = "usb-3-micro-b"

	PowerPortTemplateTypeValueUsbA PowerPortTemplateTypeValue = "usb-a"

	PowerPortTemplateTypeValueUsbB PowerPortTemplateTypeValue = "usb-b"

	PowerPortTemplateTypeValueUsbC PowerPortTemplateTypeValue = "usb-c"

	PowerPortTemplateTypeValueUsbMicroA PowerPortTemplateTypeValue = "usb-micro-a"

	PowerPortTemplateTypeValueUsbMicroB PowerPortTemplateTypeValue = "usb-micro-b"

	PowerPortTemplateTypeValueUsbMiniA PowerPortTemplateTypeValue = "usb-mini-a"

	PowerPortTemplateTypeValueUsbMiniB PowerPortTemplateTypeValue = "usb-mini-b"
)

// Defines values for PowerPortTypeChoices.
const (
	PowerPortTypeChoicesCs6361c PowerPortTypeChoices = "cs6361c"

	PowerPortTypeChoicesCs6365c PowerPortTypeChoices = "cs6365c"

	PowerPortTypeChoicesCs8165c PowerPortTypeChoices = "cs8165c"

	PowerPortTypeChoicesCs8265c PowerPortTypeChoices = "cs8265c"

	PowerPortTypeChoicesCs8365c PowerPortTypeChoices = "cs8365c"

	PowerPortTypeChoicesCs8465c PowerPortTypeChoices = "cs8465c"

	PowerPortTypeChoicesIec603092pE4h PowerPortTypeChoices = "iec-60309-2p-e-4h"

	PowerPortTypeChoicesIec603092pE6h PowerPortTypeChoices = "iec-60309-2p-e-6h"

	PowerPortTypeChoicesIec603092pE9h PowerPortTypeChoices = "iec-60309-2p-e-9h"

	PowerPortTypeChoicesIec603093pE4h PowerPortTypeChoices = "iec-60309-3p-e-4h"

	PowerPortTypeChoicesIec603093pE6h PowerPortTypeChoices = "iec-60309-3p-e-6h"

	PowerPortTypeChoicesIec603093pE9h PowerPortTypeChoices = "iec-60309-3p-e-9h"

	PowerPortTypeChoicesIec603093pNE4h PowerPortTypeChoices = "iec-60309-3p-n-e-4h"

	PowerPortTypeChoicesIec603093pNE6h PowerPortTypeChoices = "iec-60309-3p-n-e-6h"

	PowerPortTypeChoicesIec603093pNE9h PowerPortTypeChoices = "iec-60309-3p-n-e-9h"

	PowerPortTypeChoicesIec60309PNE4h PowerPortTypeChoices = "iec-60309-p-n-e-4h"

	PowerPortTypeChoicesIec60309PNE6h PowerPortTypeChoices = "iec-60309-p-n-e-6h"

	PowerPortTypeChoicesIec60309PNE9h PowerPortTypeChoices = "iec-60309-p-n-e-9h"

	PowerPortTypeChoicesIec60320C14 PowerPortTypeChoices = "iec-60320-c14"

	PowerPortTypeChoicesIec60320C16 PowerPortTypeChoices = "iec-60320-c16"

	PowerPortTypeChoicesIec60320C20 PowerPortTypeChoices = "iec-60320-c20"

	PowerPortTypeChoicesIec60320C6 PowerPortTypeChoices = "iec-60320-c6"

	PowerPortTypeChoicesIec60320C8 PowerPortTypeChoices = "iec-60320-c8"

	PowerPortTypeChoicesItaE PowerPortTypeChoices = "ita-e"

	PowerPortTypeChoicesItaEf PowerPortTypeChoices = "ita-ef"

	PowerPortTypeChoicesItaF PowerPortTypeChoices = "ita-f"

	PowerPortTypeChoicesItaG PowerPortTypeChoices = "ita-g"

	PowerPortTypeChoicesItaH PowerPortTypeChoices = "ita-h"

	PowerPortTypeChoicesItaI PowerPortTypeChoices = "ita-i"

	PowerPortTypeChoicesItaJ PowerPortTypeChoices = "ita-j"

	PowerPortTypeChoicesItaK PowerPortTypeChoices = "ita-k"

	PowerPortTypeChoicesItaL PowerPortTypeChoices = "ita-l"

	PowerPortTypeChoicesItaM PowerPortTypeChoices = "ita-m"

	PowerPortTypeChoicesItaN PowerPortTypeChoices = "ita-n"

	PowerPortTypeChoicesItaO PowerPortTypeChoices = "ita-o"

	PowerPortTypeChoicesNema1030p PowerPortTypeChoices = "nema-10-30p"

	PowerPortTypeChoicesNema1050p PowerPortTypeChoices = "nema-10-50p"

	PowerPortTypeChoicesNema115p PowerPortTypeChoices = "nema-1-15p"

	PowerPortTypeChoicesNema1420p PowerPortTypeChoices = "nema-14-20p"

	PowerPortTypeChoicesNema1430p PowerPortTypeChoices = "nema-14-30p"

	PowerPortTypeChoicesNema1450p PowerPortTypeChoices = "nema-14-50p"

	PowerPortTypeChoicesNema1460p PowerPortTypeChoices = "nema-14-60p"

	PowerPortTypeChoicesNema1515p PowerPortTypeChoices = "nema-15-15p"

	PowerPortTypeChoicesNema1520p PowerPortTypeChoices = "nema-15-20p"

	PowerPortTypeChoicesNema1530p PowerPortTypeChoices = "nema-15-30p"

	PowerPortTypeChoicesNema1550p PowerPortTypeChoices = "nema-15-50p"

	PowerPortTypeChoicesNema1560p PowerPortTypeChoices = "nema-15-60p"

	PowerPortTypeChoicesNema515p PowerPortTypeChoices = "nema-5-15p"

	PowerPortTypeChoicesNema520p PowerPortTypeChoices = "nema-5-20p"

	PowerPortTypeChoicesNema530p PowerPortTypeChoices = "nema-5-30p"

	PowerPortTypeChoicesNema550p PowerPortTypeChoices = "nema-5-50p"

	PowerPortTypeChoicesNema615p PowerPortTypeChoices = "nema-6-15p"

	PowerPortTypeChoicesNema620p PowerPortTypeChoices = "nema-6-20p"

	PowerPortTypeChoicesNema630p PowerPortTypeChoices = "nema-6-30p"

	PowerPortTypeChoicesNema650p PowerPortTypeChoices = "nema-6-50p"

	PowerPortTypeChoicesNemaL1030p PowerPortTypeChoices = "nema-l10-30p"

	PowerPortTypeChoicesNemaL115p PowerPortTypeChoices = "nema-l1-15p"

	PowerPortTypeChoicesNemaL1420p PowerPortTypeChoices = "nema-l14-20p"

	PowerPortTypeChoicesNemaL1430p PowerPortTypeChoices = "nema-l14-30p"

	PowerPortTypeChoicesNemaL1450p PowerPortTypeChoices = "nema-l14-50p"

	PowerPortTypeChoicesNemaL1460p PowerPortTypeChoices = "nema-l14-60p"

	PowerPortTypeChoicesNemaL1520p PowerPortTypeChoices = "nema-l15-20p"

	PowerPortTypeChoicesNemaL1530p PowerPortTypeChoices = "nema-l15-30p"

	PowerPortTypeChoicesNemaL1550p PowerPortTypeChoices = "nema-l15-50p"

	PowerPortTypeChoicesNemaL1560p PowerPortTypeChoices = "nema-l15-60p"

	PowerPortTypeChoicesNemaL2120p PowerPortTypeChoices = "nema-l21-20p"

	PowerPortTypeChoicesNemaL2130p PowerPortTypeChoices = "nema-l21-30p"

	PowerPortTypeChoicesNemaL515p PowerPortTypeChoices = "nema-l5-15p"

	PowerPortTypeChoicesNemaL520p PowerPortTypeChoices = "nema-l5-20p"

	PowerPortTypeChoicesNemaL530p PowerPortTypeChoices = "nema-l5-30p"

	PowerPortTypeChoicesNemaL550p PowerPortTypeChoices = "nema-l5-50p"

	PowerPortTypeChoicesNemaL615p PowerPortTypeChoices = "nema-l6-15p"

	PowerPortTypeChoicesNemaL620p PowerPortTypeChoices = "nema-l6-20p"

	PowerPortTypeChoicesNemaL630p PowerPortTypeChoices = "nema-l6-30p"

	PowerPortTypeChoicesNemaL650p PowerPortTypeChoices = "nema-l6-50p"

	PowerPortTypeChoicesUsb3B PowerPortTypeChoices = "usb-3-b"

	PowerPortTypeChoicesUsb3MicroB PowerPortTypeChoices = "usb-3-micro-b"

	PowerPortTypeChoicesUsbA PowerPortTypeChoices = "usb-a"

	PowerPortTypeChoicesUsbB PowerPortTypeChoices = "usb-b"

	PowerPortTypeChoicesUsbC PowerPortTypeChoices = "usb-c"

	PowerPortTypeChoicesUsbMicroA PowerPortTypeChoices = "usb-micro-a"

	PowerPortTypeChoicesUsbMicroB PowerPortTypeChoices = "usb-micro-b"

	PowerPortTypeChoicesUsbMiniA PowerPortTypeChoices = "usb-mini-a"

	PowerPortTypeChoicesUsbMiniB PowerPortTypeChoices = "usb-mini-b"
)

// Defines values for PrefixFamilyLabel.
const (
	PrefixFamilyLabelIPv4 PrefixFamilyLabel = "IPv4"

	PrefixFamilyLabelIPv6 PrefixFamilyLabel = "IPv6"
)

// Defines values for PrefixFamilyValue.
const (
	PrefixFamilyValueN4 PrefixFamilyValue = 4

	PrefixFamilyValueN6 PrefixFamilyValue = 6
)

// Defines values for PrefixStatusLabel.
const (
	PrefixStatusLabelActive PrefixStatusLabel = "Active"

	PrefixStatusLabelContainer PrefixStatusLabel = "Container"

	PrefixStatusLabelDeprecated PrefixStatusLabel = "Deprecated"

	PrefixStatusLabelReserved PrefixStatusLabel = "Reserved"
)

// Defines values for PrefixStatusValue.
const (
	PrefixStatusValueActive PrefixStatusValue = "active"

	PrefixStatusValueContainer PrefixStatusValue = "container"

	PrefixStatusValueDeprecated PrefixStatusValue = "deprecated"

	PrefixStatusValueReserved PrefixStatusValue = "reserved"
)

// Defines values for ProtocolEnum.
const (
	ProtocolEnumTcp ProtocolEnum = "tcp"

	ProtocolEnumUdp ProtocolEnum = "udp"
)

// Defines values for ProvidedContentsEnum.
const (
	ProvidedContentsEnumExtrasConfigcontext ProvidedContentsEnum = "extras.configcontext"

	ProvidedContentsEnumExtrasConfigcontextschema ProvidedContentsEnum = "extras.configcontextschema"

	ProvidedContentsEnumExtrasExporttemplate ProvidedContentsEnum = "extras.exporttemplate"

	ProvidedContentsEnumExtrasJob ProvidedContentsEnum = "extras.job"
)

// Defines values for RackOuterUnitLabel.
const (
	RackOuterUnitLabelInches RackOuterUnitLabel = "Inches"

	RackOuterUnitLabelMillimeters RackOuterUnitLabel = "Millimeters"
)

// Defines values for RackOuterUnitValue.
const (
	RackOuterUnitValueIn RackOuterUnitValue = "in"

	RackOuterUnitValueMm RackOuterUnitValue = "mm"
)

// Defines values for RackStatusLabel.
const (
	RackStatusLabelActive RackStatusLabel = "Active"

	RackStatusLabelAvailable RackStatusLabel = "Available"

	RackStatusLabelDeprecated RackStatusLabel = "Deprecated"

	RackStatusLabelPlanned RackStatusLabel = "Planned"

	RackStatusLabelReserved RackStatusLabel = "Reserved"
)

// Defines values for RackStatusValue.
const (
	RackStatusValueActive RackStatusValue = "active"

	RackStatusValueAvailable RackStatusValue = "available"

	RackStatusValueDeprecated RackStatusValue = "deprecated"

	RackStatusValuePlanned RackStatusValue = "planned"

	RackStatusValueReserved RackStatusValue = "reserved"
)

// Defines values for RackTypeLabel.
const (
	RackTypeLabelN2PostFrame RackTypeLabel = "2-post frame"

	RackTypeLabelN4PostCabinet RackTypeLabel = "4-post cabinet"

	RackTypeLabelN4PostFrame RackTypeLabel = "4-post frame"

	RackTypeLabelWallMountedCabinet RackTypeLabel = "Wall-mounted cabinet"

	RackTypeLabelWallMountedFrame RackTypeLabel = "Wall-mounted frame"
)

// Defines values for RackTypeValue.
const (
	RackTypeValueN2PostFrame RackTypeValue = "2-post-frame"

	RackTypeValueN4PostCabinet RackTypeValue = "4-post-cabinet"

	RackTypeValueN4PostFrame RackTypeValue = "4-post-frame"

	RackTypeValueWallCabinet RackTypeValue = "wall-cabinet"

	RackTypeValueWallFrame RackTypeValue = "wall-frame"
)

// Defines values for RackWidthLabel.
const (
	RackWidthLabelN10Inches RackWidthLabel = "10 inches"

	RackWidthLabelN19Inches RackWidthLabel = "19 inches"

	RackWidthLabelN21Inches RackWidthLabel = "21 inches"

	RackWidthLabelN23Inches RackWidthLabel = "23 inches"
)

// Defines values for RackWidthValue.
const (
	RackWidthValueN10 RackWidthValue = 10

	RackWidthValueN19 RackWidthValue = 19

	RackWidthValueN21 RackWidthValue = 21

	RackWidthValueN23 RackWidthValue = 23
)

// Defines values for RackTypeChoices.
const (
	RackTypeChoicesN2PostFrame RackTypeChoices = "2-post-frame"

	RackTypeChoicesN4PostCabinet RackTypeChoices = "4-post-cabinet"

	RackTypeChoicesN4PostFrame RackTypeChoices = "4-post-frame"

	RackTypeChoicesWallCabinet RackTypeChoices = "wall-cabinet"

	RackTypeChoicesWallFrame RackTypeChoices = "wall-frame"
)

// Defines values for RackUnitFaceLabel.
const (
	RackUnitFaceLabelFront RackUnitFaceLabel = "Front"

	RackUnitFaceLabelRear RackUnitFaceLabel = "Rear"
)

// Defines values for RackUnitFaceValue.
const (
	RackUnitFaceValueFront RackUnitFaceValue = "front"

	RackUnitFaceValueRear RackUnitFaceValue = "rear"
)

// Defines values for RearPortTypeLabel.
const (
	RearPortTypeLabelBNC RearPortTypeLabel = "BNC"

	RearPortTypeLabelCS RearPortTypeLabel = "CS"

	RearPortTypeLabelFC RearPortTypeLabel = "FC"

	RearPortTypeLabelGG45 RearPortTypeLabel = "GG45"

	RearPortTypeLabelLC RearPortTypeLabel = "LC"

	RearPortTypeLabelLCAPC RearPortTypeLabel = "LC/APC"

	RearPortTypeLabelLSH RearPortTypeLabel = "LSH"

	RearPortTypeLabelLSHAPC RearPortTypeLabel = "LSH/APC"

	RearPortTypeLabelMPO RearPortTypeLabel = "MPO"

	RearPortTypeLabelMRJ21 RearPortTypeLabel = "MRJ21"

	RearPortTypeLabelMTRJ RearPortTypeLabel = "MTRJ"

	RearPortTypeLabelN110Punch RearPortTypeLabel = "110 Punch"

	RearPortTypeLabelN8P2C RearPortTypeLabel = "8P2C"

	RearPortTypeLabelN8P4C RearPortTypeLabel = "8P4C"

	RearPortTypeLabelN8P6C RearPortTypeLabel = "8P6C"

	RearPortTypeLabelN8P8C RearPortTypeLabel = "8P8C"

	RearPortTypeLabelSC RearPortTypeLabel = "SC"

	RearPortTypeLabelSCAPC RearPortTypeLabel = "SC/APC"

	RearPortTypeLabelSN RearPortTypeLabel = "SN"

	RearPortTypeLabelST RearPortTypeLabel = "ST"

	RearPortTypeLabelSplice RearPortTypeLabel = "Splice"

	RearPortTypeLabelTERA1P RearPortTypeLabel = "TERA 1P"

	RearPortTypeLabelTERA2P RearPortTypeLabel = "TERA 2P"

	RearPortTypeLabelTERA4P RearPortTypeLabel = "TERA 4P"

	RearPortTypeLabelURMP2 RearPortTypeLabel = "URM-P2"

	RearPortTypeLabelURMP4 RearPortTypeLabel = "URM-P4"

	RearPortTypeLabelURMP8 RearPortTypeLabel = "URM-P8"
)

// Defines values for RearPortTypeValue.
const (
	RearPortTypeValueBnc RearPortTypeValue = "bnc"

	RearPortTypeValueCs RearPortTypeValue = "cs"

	RearPortTypeValueFc RearPortTypeValue = "fc"

	RearPortTypeValueGg45 RearPortTypeValue = "gg45"

	RearPortTypeValueLc RearPortTypeValue = "lc"

	RearPortTypeValueLcApc RearPortTypeValue = "lc-apc"

	RearPortTypeValueLsh RearPortTypeValue = "lsh"

	RearPortTypeValueLshApc RearPortTypeValue = "lsh-apc"

	RearPortTypeValueMpo RearPortTypeValue = "mpo"

	RearPortTypeValueMrj21 RearPortTypeValue = "mrj21"

	RearPortTypeValueMtrj RearPortTypeValue = "mtrj"

	RearPortTypeValueN110Punch RearPortTypeValue = "110-punch"

	RearPortTypeValueN8p2c RearPortTypeValue = "8p2c"

	RearPortTypeValueN8p4c RearPortTypeValue = "8p4c"

	RearPortTypeValueN8p6c RearPortTypeValue = "8p6c"

	RearPortTypeValueN8p8c RearPortTypeValue = "8p8c"

	RearPortTypeValueSc RearPortTypeValue = "sc"

	RearPortTypeValueScApc RearPortTypeValue = "sc-apc"

	RearPortTypeValueSn RearPortTypeValue = "sn"

	RearPortTypeValueSplice RearPortTypeValue = "splice"

	RearPortTypeValueSt RearPortTypeValue = "st"

	RearPortTypeValueTera1p RearPortTypeValue = "tera-1p"

	RearPortTypeValueTera2p RearPortTypeValue = "tera-2p"

	RearPortTypeValueTera4p RearPortTypeValue = "tera-4p"

	RearPortTypeValueUrmP2 RearPortTypeValue = "urm-p2"

	RearPortTypeValueUrmP4 RearPortTypeValue = "urm-p4"

	RearPortTypeValueUrmP8 RearPortTypeValue = "urm-p8"
)

// Defines values for RearPortTemplateTypeLabel.
const (
	RearPortTemplateTypeLabelBNC RearPortTemplateTypeLabel = "BNC"

	RearPortTemplateTypeLabelCS RearPortTemplateTypeLabel = "CS"

	RearPortTemplateTypeLabelFC RearPortTemplateTypeLabel = "FC"

	RearPortTemplateTypeLabelGG45 RearPortTemplateTypeLabel = "GG45"

	RearPortTemplateTypeLabelLC RearPortTemplateTypeLabel = "LC"

	RearPortTemplateTypeLabelLCAPC RearPortTemplateTypeLabel = "LC/APC"

	RearPortTemplateTypeLabelLSH RearPortTemplateTypeLabel = "LSH"

	RearPortTemplateTypeLabelLSHAPC RearPortTemplateTypeLabel = "LSH/APC"

	RearPortTemplateTypeLabelMPO RearPortTemplateTypeLabel = "MPO"

	RearPortTemplateTypeLabelMRJ21 RearPortTemplateTypeLabel = "MRJ21"

	RearPortTemplateTypeLabelMTRJ RearPortTemplateTypeLabel = "MTRJ"

	RearPortTemplateTypeLabelN110Punch RearPortTemplateTypeLabel = "110 Punch"

	RearPortTemplateTypeLabelN8P2C RearPortTemplateTypeLabel = "8P2C"

	RearPortTemplateTypeLabelN8P4C RearPortTemplateTypeLabel = "8P4C"

	RearPortTemplateTypeLabelN8P6C RearPortTemplateTypeLabel = "8P6C"

	RearPortTemplateTypeLabelN8P8C RearPortTemplateTypeLabel = "8P8C"

	RearPortTemplateTypeLabelSC RearPortTemplateTypeLabel = "SC"

	RearPortTemplateTypeLabelSCAPC RearPortTemplateTypeLabel = "SC/APC"

	RearPortTemplateTypeLabelSN RearPortTemplateTypeLabel = "SN"

	RearPortTemplateTypeLabelST RearPortTemplateTypeLabel = "ST"

	RearPortTemplateTypeLabelSplice RearPortTemplateTypeLabel = "Splice"

	RearPortTemplateTypeLabelTERA1P RearPortTemplateTypeLabel = "TERA 1P"

	RearPortTemplateTypeLabelTERA2P RearPortTemplateTypeLabel = "TERA 2P"

	RearPortTemplateTypeLabelTERA4P RearPortTemplateTypeLabel = "TERA 4P"

	RearPortTemplateTypeLabelURMP2 RearPortTemplateTypeLabel = "URM-P2"

	RearPortTemplateTypeLabelURMP4 RearPortTemplateTypeLabel = "URM-P4"

	RearPortTemplateTypeLabelURMP8 RearPortTemplateTypeLabel = "URM-P8"
)

// Defines values for RearPortTemplateTypeValue.
const (
	RearPortTemplateTypeValueBnc RearPortTemplateTypeValue = "bnc"

	RearPortTemplateTypeValueCs RearPortTemplateTypeValue = "cs"

	RearPortTemplateTypeValueFc RearPortTemplateTypeValue = "fc"

	RearPortTemplateTypeValueGg45 RearPortTemplateTypeValue = "gg45"

	RearPortTemplateTypeValueLc RearPortTemplateTypeValue = "lc"

	RearPortTemplateTypeValueLcApc RearPortTemplateTypeValue = "lc-apc"

	RearPortTemplateTypeValueLsh RearPortTemplateTypeValue = "lsh"

	RearPortTemplateTypeValueLshApc RearPortTemplateTypeValue = "lsh-apc"

	RearPortTemplateTypeValueMpo RearPortTemplateTypeValue = "mpo"

	RearPortTemplateTypeValueMrj21 RearPortTemplateTypeValue = "mrj21"

	RearPortTemplateTypeValueMtrj RearPortTemplateTypeValue = "mtrj"

	RearPortTemplateTypeValueN110Punch RearPortTemplateTypeValue = "110-punch"

	RearPortTemplateTypeValueN8p2c RearPortTemplateTypeValue = "8p2c"

	RearPortTemplateTypeValueN8p4c RearPortTemplateTypeValue = "8p4c"

	RearPortTemplateTypeValueN8p6c RearPortTemplateTypeValue = "8p6c"

	RearPortTemplateTypeValueN8p8c RearPortTemplateTypeValue = "8p8c"

	RearPortTemplateTypeValueSc RearPortTemplateTypeValue = "sc"

	RearPortTemplateTypeValueScApc RearPortTemplateTypeValue = "sc-apc"

	RearPortTemplateTypeValueSn RearPortTemplateTypeValue = "sn"

	RearPortTemplateTypeValueSplice RearPortTemplateTypeValue = "splice"

	RearPortTemplateTypeValueSt RearPortTemplateTypeValue = "st"

	RearPortTemplateTypeValueTera1p RearPortTemplateTypeValue = "tera-1p"

	RearPortTemplateTypeValueTera2p RearPortTemplateTypeValue = "tera-2p"

	RearPortTemplateTypeValueTera4p RearPortTemplateTypeValue = "tera-4p"

	RearPortTemplateTypeValueUrmP2 RearPortTemplateTypeValue = "urm-p2"

	RearPortTemplateTypeValueUrmP4 RearPortTemplateTypeValue = "urm-p4"

	RearPortTemplateTypeValueUrmP8 RearPortTemplateTypeValue = "urm-p8"
)

// Defines values for RelationshipTypeChoices.
const (
	RelationshipTypeChoicesManyToMany RelationshipTypeChoices = "many-to-many"

	RelationshipTypeChoicesOneToMany RelationshipTypeChoices = "one-to-many"

	RelationshipTypeChoicesOneToOne RelationshipTypeChoices = "one-to-one"

	RelationshipTypeChoicesSymmetricManyToMany RelationshipTypeChoices = "symmetric-many-to-many"

	RelationshipTypeChoicesSymmetricOneToOne RelationshipTypeChoices = "symmetric-one-to-one"
)

// Defines values for RoleEnum.
const (
	RoleEnumAnycast RoleEnum = "anycast"

	RoleEnumCarp RoleEnum = "carp"

	RoleEnumGlbp RoleEnum = "glbp"

	RoleEnumHsrp RoleEnum = "hsrp"

	RoleEnumLoopback RoleEnum = "loopback"

	RoleEnumSecondary RoleEnum = "secondary"

	RoleEnumVip RoleEnum = "vip"

	RoleEnumVrrp RoleEnum = "vrrp"
)

// Defines values for SecretTypeEnum.
const (
	SecretTypeEnumKey SecretTypeEnum = "key"

	SecretTypeEnumPassword SecretTypeEnum = "password"

	SecretTypeEnumSecret SecretTypeEnum = "secret"

	SecretTypeEnumToken SecretTypeEnum = "token"

	SecretTypeEnumUsername SecretTypeEnum = "username"
)

// Defines values for ServiceProtocolLabel.
const (
	ServiceProtocolLabelTCP ServiceProtocolLabel = "TCP"

	ServiceProtocolLabelUDP ServiceProtocolLabel = "UDP"
)

// Defines values for ServiceProtocolValue.
const (
	ServiceProtocolValueTcp ServiceProtocolValue = "tcp"

	ServiceProtocolValueUdp ServiceProtocolValue = "udp"
)

// Defines values for SiteStatusLabel.
const (
	SiteStatusLabelActive SiteStatusLabel = "Active"

	SiteStatusLabelDecommissioning SiteStatusLabel = "Decommissioning"

	SiteStatusLabelPlanned SiteStatusLabel = "Planned"

	SiteStatusLabelRetired SiteStatusLabel = "Retired"

	SiteStatusLabelStaging SiteStatusLabel = "Staging"
)

// Defines values for SiteStatusValue.
const (
	SiteStatusValueActive SiteStatusValue = "active"

	SiteStatusValueDecommissioning SiteStatusValue = "decommissioning"

	SiteStatusValuePlanned SiteStatusValue = "planned"

	SiteStatusValueRetired SiteStatusValue = "retired"

	SiteStatusValueStaging SiteStatusValue = "staging"
)

// Defines values for SubdeviceRoleEnum.
const (
	SubdeviceRoleEnumChild SubdeviceRoleEnum = "child"

	SubdeviceRoleEnumParent SubdeviceRoleEnum = "parent"
)

// Defines values for SupplyEnum.
const (
	SupplyEnumAc SupplyEnum = "ac"

	SupplyEnumDc SupplyEnum = "dc"
)

// Defines values for TermSideEnum.
const (
	TermSideEnumA TermSideEnum = "A"

	TermSideEnumZ TermSideEnum = "Z"
)

// Defines values for VLANStatusLabel.
const (
	VLANStatusLabelActive VLANStatusLabel = "Active"

	VLANStatusLabelDeprecated VLANStatusLabel = "Deprecated"

	VLANStatusLabelReserved VLANStatusLabel = "Reserved"
)

// Defines values for VLANStatusValue.
const (
	VLANStatusValueActive VLANStatusValue = "active"

	VLANStatusValueDeprecated VLANStatusValue = "deprecated"

	VLANStatusValueReserved VLANStatusValue = "reserved"
)

// Defines values for VMInterfaceModeLabel.
const (
	VMInterfaceModeLabelAccess VMInterfaceModeLabel = "Access"

	VMInterfaceModeLabelTagged VMInterfaceModeLabel = "Tagged"

	VMInterfaceModeLabelTaggedAll VMInterfaceModeLabel = "Tagged (All)"
)

// Defines values for VMInterfaceModeValue.
const (
	VMInterfaceModeValueAccess VMInterfaceModeValue = "access"

	VMInterfaceModeValueTagged VMInterfaceModeValue = "tagged"

	VMInterfaceModeValueTaggedAll VMInterfaceModeValue = "tagged-all"
)

// Defines values for VirtualMachineWithConfigContextStatusLabel.
const (
	VirtualMachineWithConfigContextStatusLabelActive VirtualMachineWithConfigContextStatusLabel = "Active"

	VirtualMachineWithConfigContextStatusLabelDecommissioning VirtualMachineWithConfigContextStatusLabel = "Decommissioning"

	VirtualMachineWithConfigContextStatusLabelFailed VirtualMachineWithConfigContextStatusLabel = "Failed"

	VirtualMachineWithConfigContextStatusLabelOffline VirtualMachineWithConfigContextStatusLabel = "Offline"

	VirtualMachineWithConfigContextStatusLabelPlanned VirtualMachineWithConfigContextStatusLabel = "Planned"

	VirtualMachineWithConfigContextStatusLabelStaged VirtualMachineWithConfigContextStatusLabel = "Staged"
)

// Defines values for VirtualMachineWithConfigContextStatusValue.
const (
	VirtualMachineWithConfigContextStatusValueActive VirtualMachineWithConfigContextStatusValue = "active"

	VirtualMachineWithConfigContextStatusValueDecommissioning VirtualMachineWithConfigContextStatusValue = "decommissioning"

	VirtualMachineWithConfigContextStatusValueFailed VirtualMachineWithConfigContextStatusValue = "failed"

	VirtualMachineWithConfigContextStatusValueOffline VirtualMachineWithConfigContextStatusValue = "offline"

	VirtualMachineWithConfigContextStatusValuePlanned VirtualMachineWithConfigContextStatusValue = "planned"

	VirtualMachineWithConfigContextStatusValueStaged VirtualMachineWithConfigContextStatusValue = "staged"
)

// Defines values for WidthEnum.
const (
	WidthEnumN10 WidthEnum = 10

	WidthEnumN19 WidthEnum = 19

	WidthEnumN21 WidthEnum = 21

	WidthEnumN23 WidthEnum = 23
)

// Defines values for WritableCableStatusEnum.
const (
	WritableCableStatusEnumConnected WritableCableStatusEnum = "connected"

	WritableCableStatusEnumDecommissioning WritableCableStatusEnum = "decommissioning"

	WritableCableStatusEnumPlanned WritableCableStatusEnum = "planned"
)

// Defines values for WritableCircuitStatusEnum.
const (
	WritableCircuitStatusEnumActive WritableCircuitStatusEnum = "active"

	WritableCircuitStatusEnumDecommissioned WritableCircuitStatusEnum = "decommissioned"

	WritableCircuitStatusEnumDeprovisioning WritableCircuitStatusEnum = "deprovisioning"

	WritableCircuitStatusEnumOffline WritableCircuitStatusEnum = "offline"

	WritableCircuitStatusEnumPlanned WritableCircuitStatusEnum = "planned"

	WritableCircuitStatusEnumProvisioning WritableCircuitStatusEnum = "provisioning"
)

// Defines values for WritableDeviceWithConfigContextStatusEnum.
const (
	WritableDeviceWithConfigContextStatusEnumActive WritableDeviceWithConfigContextStatusEnum = "active"

	WritableDeviceWithConfigContextStatusEnumDecommissioning WritableDeviceWithConfigContextStatusEnum = "decommissioning"

	WritableDeviceWithConfigContextStatusEnumFailed WritableDeviceWithConfigContextStatusEnum = "failed"

	WritableDeviceWithConfigContextStatusEnumInventory WritableDeviceWithConfigContextStatusEnum = "inventory"

	WritableDeviceWithConfigContextStatusEnumOffline WritableDeviceWithConfigContextStatusEnum = "offline"

	WritableDeviceWithConfigContextStatusEnumPlanned WritableDeviceWithConfigContextStatusEnum = "planned"

	WritableDeviceWithConfigContextStatusEnumStaged WritableDeviceWithConfigContextStatusEnum = "staged"
)

// Defines values for WritableIPAddressStatusEnum.
const (
	WritableIPAddressStatusEnumActive WritableIPAddressStatusEnum = "active"

	WritableIPAddressStatusEnumDeprecated WritableIPAddressStatusEnum = "deprecated"

	WritableIPAddressStatusEnumDhcp WritableIPAddressStatusEnum = "dhcp"

	WritableIPAddressStatusEnumReserved WritableIPAddressStatusEnum = "reserved"

	WritableIPAddressStatusEnumSlaac WritableIPAddressStatusEnum = "slaac"
)

// Defines values for WritablePowerFeedStatusEnum.
const (
	WritablePowerFeedStatusEnumActive WritablePowerFeedStatusEnum = "active"

	WritablePowerFeedStatusEnumFailed WritablePowerFeedStatusEnum = "failed"

	WritablePowerFeedStatusEnumOffline WritablePowerFeedStatusEnum = "offline"

	WritablePowerFeedStatusEnumPlanned WritablePowerFeedStatusEnum = "planned"
)

// Defines values for WritablePrefixStatusEnum.
const (
	WritablePrefixStatusEnumActive WritablePrefixStatusEnum = "active"

	WritablePrefixStatusEnumContainer WritablePrefixStatusEnum = "container"

	WritablePrefixStatusEnumDeprecated WritablePrefixStatusEnum = "deprecated"

	WritablePrefixStatusEnumReserved WritablePrefixStatusEnum = "reserved"
)

// Defines values for WritableRackStatusEnum.
const (
	WritableRackStatusEnumActive WritableRackStatusEnum = "active"

	WritableRackStatusEnumAvailable WritableRackStatusEnum = "available"

	WritableRackStatusEnumDeprecated WritableRackStatusEnum = "deprecated"

	WritableRackStatusEnumPlanned WritableRackStatusEnum = "planned"

	WritableRackStatusEnumReserved WritableRackStatusEnum = "reserved"
)

// Defines values for WritableSiteStatusEnum.
const (
	WritableSiteStatusEnumActive WritableSiteStatusEnum = "active"

	WritableSiteStatusEnumDecommissioning WritableSiteStatusEnum = "decommissioning"

	WritableSiteStatusEnumPlanned WritableSiteStatusEnum = "planned"

	WritableSiteStatusEnumRetired WritableSiteStatusEnum = "retired"

	WritableSiteStatusEnumStaging WritableSiteStatusEnum = "staging"
)

// Defines values for WritableVLANStatusEnum.
const (
	WritableVLANStatusEnumActive WritableVLANStatusEnum = "active"

	WritableVLANStatusEnumDeprecated WritableVLANStatusEnum = "deprecated"

	WritableVLANStatusEnumReserved WritableVLANStatusEnum = "reserved"
)

// Defines values for WritableVirtualMachineWithConfigContextStatusEnum.
const (
	WritableVirtualMachineWithConfigContextStatusEnumActive WritableVirtualMachineWithConfigContextStatusEnum = "active"

	WritableVirtualMachineWithConfigContextStatusEnumDecommissioning WritableVirtualMachineWithConfigContextStatusEnum = "decommissioning"

	WritableVirtualMachineWithConfigContextStatusEnumFailed WritableVirtualMachineWithConfigContextStatusEnum = "failed"

	WritableVirtualMachineWithConfigContextStatusEnumOffline WritableVirtualMachineWithConfigContextStatusEnum = "offline"

	WritableVirtualMachineWithConfigContextStatusEnumPlanned WritableVirtualMachineWithConfigContextStatusEnum = "planned"

	WritableVirtualMachineWithConfigContextStatusEnumStaged WritableVirtualMachineWithConfigContextStatusEnum = "staged"
)

// AccessTypeEnum defines model for AccessTypeEnum.
type AccessTypeEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Aggregate struct {
	Created      *openapi_types.Date     `json:"created,omitempty"`
	CustomFields *Aggregate_CustomFields `json:"custom_fields,omitempty"`
	DateAdded    *openapi_types.Date     `json:"date_added"`
	Description  *string                 `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Family  *struct {
		Label *AggregateFamilyLabel `json:"label,omitempty"`
		Value *AggregateFamilyValue `json:"value,omitempty"`
	} `json:"family,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Prefix      string              `json:"prefix"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Rir    NestedRIR             `json:"rir"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url *string `json:"url,omitempty"`
}

// Aggregate_CustomFields defines model for Aggregate.CustomFields.
type Aggregate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// AggregateFamilyLabel defines model for Aggregate.Family.Label.
type AggregateFamilyLabel string

// AggregateFamilyValue defines model for Aggregate.Family.Value.
type AggregateFamilyValue int

// Representation of an IP address which does not exist in the database.
type AvailableIP struct {
	Address *string `json:"address,omitempty"`
	Family  *int    `json:"family,omitempty"`
	Vrf     *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVRF)
		NestedVRF `yaml:",inline"`
	} `json:"vrf,omitempty"`
}

// Representation of a prefix which does not exist in the database.
type AvailablePrefix struct {
	Family *int    `json:"family,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
	Vrf    *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVRF)
		NestedVRF `yaml:",inline"`
	} `json:"vrf,omitempty"`
}

// BlankEnum defines model for BlankEnum.
type BlankEnum interface{}

// ButtonClassEnum defines model for ButtonClassEnum.
type ButtonClassEnum string

// Mixin to add `status` choice field to model serializers.
type Cable struct {
	Color        *string             `json:"color,omitempty"`
	CustomFields *Cable_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	Id         *openapi_types.UUID `json:"id,omitempty"`
	Label      *string             `json:"label,omitempty"`
	Length     *int                `json:"length"`
	LengthUnit *struct {
		Label *CableLengthUnitLabel `json:"label,omitempty"`
		Value *CableLengthUnitValue `json:"value,omitempty"`
	} `json:"length_unit,omitempty"`
	Status struct {
		Label *CableStatusLabel `json:"label,omitempty"`
		Value *CableStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags             *[]TagSerializerField `json:"tags,omitempty"`
	TerminationA     *Cable_TerminationA   `json:"termination_a"`
	TerminationAId   openapi_types.UUID    `json:"termination_a_id"`
	TerminationAType string                `json:"termination_a_type"`
	TerminationB     *Cable_TerminationB   `json:"termination_b"`
	TerminationBId   openapi_types.UUID    `json:"termination_b_id"`
	TerminationBType string                `json:"termination_b_type"`
	Type             *interface{}          `json:"type,omitempty"`
	Url              *string               `json:"url,omitempty"`
}

// Cable_CustomFields defines model for Cable.CustomFields.
type Cable_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// CableLengthUnitLabel defines model for Cable.LengthUnit.Label.
type CableLengthUnitLabel string

// CableLengthUnitValue defines model for Cable.LengthUnit.Value.
type CableLengthUnitValue string

// CableStatusLabel defines model for Cable.Status.Label.
type CableStatusLabel string

// CableStatusValue defines model for Cable.Status.Value.
type CableStatusValue string

// Cable_TerminationA defines model for Cable.TerminationA.
type Cable_TerminationA struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Cable_TerminationB defines model for Cable.TerminationB.
type Cable_TerminationB struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// CableTypeChoices defines model for CableTypeChoices.
type CableTypeChoices string

// Mixin to add `status` choice field to model serializers.
type Circuit struct {
	Cid          string                `json:"cid"`
	Comments     *string               `json:"comments,omitempty"`
	CommitRate   *int                  `json:"commit_rate"`
	Created      *openapi_types.Date   `json:"created,omitempty"`
	CustomFields *Circuit_CustomFields `json:"custom_fields,omitempty"`
	Description  *string               `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	InstallDate *openapi_types.Date `json:"install_date"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Provider NestedProvider `json:"provider"`
	Status   struct {
		Label *CircuitStatusLabel `json:"label,omitempty"`
		Value *CircuitStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	TerminationA *struct {
		// Embedded struct due to allOf(#/components/schemas/CircuitCircuitTermination)
		CircuitCircuitTermination `yaml:",inline"`
	} `json:"termination_a,omitempty"`
	TerminationZ *struct {
		// Embedded struct due to allOf(#/components/schemas/CircuitCircuitTermination)
		CircuitCircuitTermination `yaml:",inline"`
	} `json:"termination_z,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Type NestedCircuitType `json:"type"`
	Url  *string           `json:"url,omitempty"`
}

// Circuit_CustomFields defines model for Circuit.CustomFields.
type Circuit_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// CircuitStatusLabel defines model for Circuit.Status.Label.
type CircuitStatusLabel string

// CircuitStatusValue defines model for Circuit.Status.Value.
type CircuitStatusValue string

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type CircuitCircuitTermination struct {
	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	ConnectedEndpoint NestedInterface `json:"connected_endpoint"`

	// Human friendly display value
	Display   *string             `json:"display,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	PortSpeed *int                `json:"port_speed"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	ProviderNetwork NestedProviderNetwork `json:"provider_network"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Site NestedSite `json:"site"`

	// Upstream speed, if different from port speed
	UpstreamSpeed *int    `json:"upstream_speed"`
	Url           *string `json:"url,omitempty"`
	XconnectId    *string `json:"xconnect_id,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type CircuitTermination struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer     *CircuitTermination_CablePeer `json:"cable_peer"`
	CablePeerType *string                       `json:"cable_peer_type"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Circuit                    NestedCircuit                         `json:"circuit"`
	ConnectedEndpoint          *CircuitTermination_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                 `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                               `json:"connected_endpoint_type"`
	Description                *string                               `json:"description,omitempty"`

	// Human friendly display value
	Display         *string             `json:"display,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	PortSpeed       *int                `json:"port_speed"`
	PpInfo          *string             `json:"pp_info,omitempty"`
	ProviderNetwork *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedProviderNetwork)
		NestedProviderNetwork `yaml:",inline"`
	} `json:"provider_network"`
	Site *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site"`
	TermSide struct {
		// Embedded struct due to allOf(#/components/schemas/TermSideEnum)
		TermSideEnum `yaml:",inline"`
	} `json:"term_side"`

	// Upstream speed, if different from port speed
	UpstreamSpeed *int    `json:"upstream_speed"`
	Url           *string `json:"url,omitempty"`
	XconnectId    *string `json:"xconnect_id,omitempty"`
}

// CircuitTermination_CablePeer defines model for CircuitTermination.CablePeer.
type CircuitTermination_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// CircuitTermination_ConnectedEndpoint defines model for CircuitTermination.ConnectedEndpoint.
type CircuitTermination_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type CircuitType struct {
	CircuitCount *int                      `json:"circuit_count,omitempty"`
	Created      *openapi_types.Date       `json:"created,omitempty"`
	CustomFields *CircuitType_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                   `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// CircuitType_CustomFields defines model for CircuitType.CustomFields.
type CircuitType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Cluster struct {
	Comments     *string               `json:"comments,omitempty"`
	Created      *openapi_types.Date   `json:"created,omitempty"`
	CustomFields *Cluster_CustomFields `json:"custom_fields,omitempty"`
	DeviceCount  *int                  `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Group   *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedClusterGroup)
		NestedClusterGroup `yaml:",inline"`
	} `json:"group"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Site        *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Type                NestedClusterType `json:"type"`
	Url                 *string           `json:"url,omitempty"`
	VirtualmachineCount *int              `json:"virtualmachine_count,omitempty"`
}

// Cluster_CustomFields defines model for Cluster.CustomFields.
type Cluster_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ClusterGroup struct {
	ClusterCount *int                       `json:"cluster_count,omitempty"`
	Created      *openapi_types.Date        `json:"created,omitempty"`
	CustomFields *ClusterGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                    `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// ClusterGroup_CustomFields defines model for ClusterGroup.CustomFields.
type ClusterGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ClusterType struct {
	ClusterCount *int                      `json:"cluster_count,omitempty"`
	Created      *openapi_types.Date       `json:"created,omitempty"`
	CustomFields *ClusterType_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                   `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// ClusterType_CustomFields defines model for ClusterType.CustomFields.
type ClusterType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ComputedField struct {
	ContentType string  `json:"content_type"`
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Fallback value (if any) to be output for the field in the case of a template rendering error.
	FallbackValue *string             `json:"fallback_value,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`

	// Name of the field as displayed to users
	Label string `json:"label"`

	// Internal field name
	Slug *string `json:"slug,omitempty"`

	// Jinja2 template code for field value
	Template string  `json:"template"`
	Url      *string `json:"url,omitempty"`
	Weight   *int    `json:"weight,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ConfigContext struct {
	ClusterGroups *[]struct {
		ClusterCount *int `json:"cluster_count,omitempty"`

		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Name    string              `json:"name"`
		Slug    *string             `json:"slug,omitempty"`
		Url     *string             `json:"url,omitempty"`
	} `json:"cluster_groups,omitempty"`
	Clusters *[]struct {
		// Human friendly display value
		Display             *string             `json:"display,omitempty"`
		Id                  *openapi_types.UUID `json:"id,omitempty"`
		Name                string              `json:"name"`
		Url                 *string             `json:"url,omitempty"`
		VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`
	} `json:"clusters,omitempty"`
	Created     *openapi_types.Date `json:"created,omitempty"`
	Data        ConfigContext_Data  `json:"data"`
	Description *string             `json:"description,omitempty"`
	DeviceTypes *[]struct {
		DeviceCount *int `json:"device_count,omitempty"`

		// Human friendly display value
		Display      *string             `json:"display,omitempty"`
		Id           *openapi_types.UUID `json:"id,omitempty"`
		Manufacturer *struct {
			// Embedded struct due to allOf(#/components/schemas/NestedManufacturer)
			NestedManufacturer `yaml:",inline"`
		} `json:"manufacturer,omitempty"`
		Model string  `json:"model"`
		Slug  string  `json:"slug"`
		Url   *string `json:"url,omitempty"`
	} `json:"device_types,omitempty"`

	// Human friendly display value
	Display          *string              `json:"display,omitempty"`
	Id               *openapi_types.UUID  `json:"id,omitempty"`
	IsActive         *bool                `json:"is_active,omitempty"`
	LastUpdated      *time.Time           `json:"last_updated,omitempty"`
	Name             string               `json:"name"`
	Owner            *ConfigContext_Owner `json:"owner"`
	OwnerContentType *string              `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID  `json:"owner_object_id"`
	Platforms        *[]struct {
		DeviceCount *int `json:"device_count,omitempty"`

		// Human friendly display value
		Display             *string             `json:"display,omitempty"`
		Id                  *openapi_types.UUID `json:"id,omitempty"`
		Name                string              `json:"name"`
		Slug                *string             `json:"slug,omitempty"`
		Url                 *string             `json:"url,omitempty"`
		VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`
	} `json:"platforms,omitempty"`
	Regions *[]struct {
		Depth *int `json:"_depth,omitempty"`

		// Human friendly display value
		Display   *string             `json:"display,omitempty"`
		Id        *openapi_types.UUID `json:"id,omitempty"`
		Name      string              `json:"name"`
		SiteCount *int                `json:"site_count,omitempty"`
		Slug      *string             `json:"slug,omitempty"`
		Url       *string             `json:"url,omitempty"`
	} `json:"regions,omitempty"`
	Roles *[]struct {
		DeviceCount *int `json:"device_count,omitempty"`

		// Human friendly display value
		Display             *string             `json:"display,omitempty"`
		Id                  *openapi_types.UUID `json:"id,omitempty"`
		Name                string              `json:"name"`
		Slug                *string             `json:"slug,omitempty"`
		Url                 *string             `json:"url,omitempty"`
		VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`
	} `json:"roles,omitempty"`
	Schema *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedConfigContextSchema)
		NestedConfigContextSchema `yaml:",inline"`
	} `json:"schema"`
	Sites *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Name    string              `json:"name"`
		Slug    *string             `json:"slug,omitempty"`
		Url     *string             `json:"url,omitempty"`
	} `json:"sites,omitempty"`
	Tags         *[]string `json:"tags,omitempty"`
	TenantGroups *[]struct {
		Depth *int `json:"_depth,omitempty"`

		// Human friendly display value
		Display     *string             `json:"display,omitempty"`
		Id          *openapi_types.UUID `json:"id,omitempty"`
		Name        string              `json:"name"`
		Slug        *string             `json:"slug,omitempty"`
		TenantCount *int                `json:"tenant_count,omitempty"`
		Url         *string             `json:"url,omitempty"`
	} `json:"tenant_groups,omitempty"`
	Tenants *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Name    string              `json:"name"`
		Slug    *string             `json:"slug,omitempty"`
		Url     *string             `json:"url,omitempty"`
	} `json:"tenants,omitempty"`
	Url    *string `json:"url,omitempty"`
	Weight *int    `json:"weight,omitempty"`
}

// ConfigContext_Data defines model for ConfigContext.Data.
type ConfigContext_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConfigContext_Owner defines model for ConfigContext.Owner.
type ConfigContext_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ConfigContextSchema struct {
	Created *openapi_types.Date `json:"created,omitempty"`

	// A JSON Schema document which is used to validate a config context object.
	DataSchema  ConfigContextSchema_DataSchema `json:"data_schema"`
	Description *string                        `json:"description,omitempty"`

	// Human friendly display value
	Display          *string                    `json:"display,omitempty"`
	Id               *openapi_types.UUID        `json:"id,omitempty"`
	LastUpdated      *time.Time                 `json:"last_updated,omitempty"`
	Name             string                     `json:"name"`
	Owner            *ConfigContextSchema_Owner `json:"owner"`
	OwnerContentType *string                    `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID        `json:"owner_object_id"`
	Slug             *string                    `json:"slug,omitempty"`
	Url              *string                    `json:"url,omitempty"`
}

// A JSON Schema document which is used to validate a config context object.
type ConfigContextSchema_DataSchema struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConfigContextSchema_Owner defines model for ConfigContextSchema.Owner.
type ConfigContextSchema_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ConsolePort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *ConsolePort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                        `json:"cable_peer_type"`
	ComputedFields             *ConsolePort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *ConsolePort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                          `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                        `json:"connected_endpoint_type"`
	CustomFields               *ConsolePort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                        `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  string                `json:"name"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`
	Type  *struct {
		Label *ConsolePortTypeLabel `json:"label,omitempty"`
		Value *ConsolePortTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// ConsolePort_CablePeer defines model for ConsolePort.CablePeer.
type ConsolePort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsolePort_ComputedFields defines model for ConsolePort.ComputedFields.
type ConsolePort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsolePort_ConnectedEndpoint defines model for ConsolePort.ConnectedEndpoint.
type ConsolePort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsolePort_CustomFields defines model for ConsolePort.CustomFields.
type ConsolePort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsolePortTypeLabel defines model for ConsolePort.Type.Label.
type ConsolePortTypeLabel string

// ConsolePortTypeValue defines model for ConsolePort.Type.Value.
type ConsolePortTypeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ConsolePortTemplate struct {
	CustomFields *ConsolePortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                           `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`
	Type  *struct {
		Label *ConsolePortTemplateTypeLabel `json:"label,omitempty"`
		Value *ConsolePortTemplateTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// ConsolePortTemplate_CustomFields defines model for ConsolePortTemplate.CustomFields.
type ConsolePortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsolePortTemplateTypeLabel defines model for ConsolePortTemplate.Type.Label.
type ConsolePortTemplateTypeLabel string

// ConsolePortTemplateTypeValue defines model for ConsolePortTemplate.Type.Value.
type ConsolePortTemplateTypeValue string

// ConsolePortTypeChoices defines model for ConsolePortTypeChoices.
type ConsolePortTypeChoices string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ConsoleServerPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *ConsoleServerPort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                              `json:"cable_peer_type"`
	ConnectedEndpoint          *ConsoleServerPort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                              `json:"connected_endpoint_type"`
	CustomFields               *ConsoleServerPort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                              `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  string                `json:"name"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`
	Type  *struct {
		Label *ConsoleServerPortTypeLabel `json:"label,omitempty"`
		Value *ConsoleServerPortTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// ConsoleServerPort_CablePeer defines model for ConsoleServerPort.CablePeer.
type ConsoleServerPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsoleServerPort_ConnectedEndpoint defines model for ConsoleServerPort.ConnectedEndpoint.
type ConsoleServerPort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsoleServerPort_CustomFields defines model for ConsoleServerPort.CustomFields.
type ConsoleServerPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsoleServerPortTypeLabel defines model for ConsoleServerPort.Type.Label.
type ConsoleServerPortTypeLabel string

// ConsoleServerPortTypeValue defines model for ConsoleServerPort.Type.Value.
type ConsoleServerPortTypeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ConsoleServerPortTemplate struct {
	CustomFields *ConsoleServerPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                                 `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`
	Type  *struct {
		Label *ConsoleServerPortTemplateTypeLabel `json:"label,omitempty"`
		Value *ConsoleServerPortTemplateTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// ConsoleServerPortTemplate_CustomFields defines model for ConsoleServerPortTemplate.CustomFields.
type ConsoleServerPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ConsoleServerPortTemplateTypeLabel defines model for ConsoleServerPortTemplate.Type.Label.
type ConsoleServerPortTemplateTypeLabel string

// ConsoleServerPortTemplateTypeValue defines model for ConsoleServerPortTemplate.Type.Value.
type ConsoleServerPortTemplateTypeValue string

// ContentType defines model for ContentType.
type ContentType struct {
	AppLabel string  `json:"app_label"`
	Display  *string `json:"display,omitempty"`
	Id       *int    `json:"id,omitempty"`
	Model    string  `json:"model"`
	Url      *string `json:"url,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type CustomField struct {
	ContentTypes []string `json:"content_types"`

	// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. "Foo").
	Default *CustomField_Default `json:"default"`

	// A helpful description for this field.
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display     *string `json:"display,omitempty"`
	FilterLogic *struct {
		Label *CustomFieldFilterLogicLabel `json:"label,omitempty"`
		Value *CustomFieldFilterLogicValue `json:"value,omitempty"`
	} `json:"filter_logic,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Name of the field as displayed to users (if not provided, the field's slug will be used.)
	Label *string `json:"label,omitempty"`

	// URL-friendly unique shorthand.
	Name string `json:"name"`

	// If true, this field is required when creating new objects or editing an existing object.
	Required *bool `json:"required,omitempty"`
	Type     struct {
		Label *CustomFieldTypeLabel `json:"label,omitempty"`
		Value *CustomFieldTypeValue `json:"value,omitempty"`
	} `json:"type"`
	Url *string `json:"url,omitempty"`

	// Maximum allowed value (for numeric fields).
	ValidationMaximum *int64 `json:"validation_maximum"`

	// Minimum allowed value (for numeric fields).
	ValidationMinimum *int64 `json:"validation_minimum"`

	// Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters. Regular expression on select and multi-select will be applied at <code>Custom Field Choices</code> definition.
	ValidationRegex *string `json:"validation_regex,omitempty"`

	// Fields with higher weights appear lower in a form.
	Weight *int `json:"weight,omitempty"`
}

// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. "Foo").
type CustomField_Default struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// CustomFieldFilterLogicLabel defines model for CustomField.FilterLogic.Label.
type CustomFieldFilterLogicLabel string

// CustomFieldFilterLogicValue defines model for CustomField.FilterLogic.Value.
type CustomFieldFilterLogicValue string

// CustomFieldTypeLabel defines model for CustomField.Type.Label.
type CustomFieldTypeLabel string

// CustomFieldTypeValue defines model for CustomField.Type.Value.
type CustomFieldTypeValue string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type CustomFieldChoice struct {
	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Field NestedCustomField   `json:"field"`
	Id    *openapi_types.UUID `json:"id,omitempty"`
	Url   *string             `json:"url,omitempty"`
	Value string              `json:"value"`

	// Higher weights appear later in the list
	Weight *int `json:"weight,omitempty"`
}

// CustomFieldTypeChoices defines model for CustomFieldTypeChoices.
type CustomFieldTypeChoices string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type CustomLink struct {
	// The class of the first link in a group will be used for the dropdown button
	ButtonClass *struct {
		// Embedded struct due to allOf(#/components/schemas/ButtonClassEnum)
		ButtonClassEnum `yaml:",inline"`
	} `json:"button_class,omitempty"`
	ContentType string `json:"content_type"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Links with the same group will appear as a dropdown menu
	GroupName *string             `json:"group_name,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      string              `json:"name"`

	// Force link to open in a new window
	NewWindow bool `json:"new_window"`

	// Jinja2 template code for link URL. Reference the object as <code>{{ obj }}</code> such as <code>{{ obj.platform.slug }}</code>.
	TargetUrl string `json:"target_url"`

	// Jinja2 template code for link text. Reference the object as <code>{{ obj }}</code> such as <code>{{ obj.platform.slug }}</code>. Links which render as empty text will not be displayed.
	Text   string  `json:"text"`
	Url    *string `json:"url,omitempty"`
	Weight *int    `json:"weight,omitempty"`
}

// Mixin to add `status` choice field to model serializers.
type Device struct {
	// A unique tag used to identify this device
	AssetTag *string `json:"asset_tag"`
	Cluster  *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCluster)
		NestedCluster `yaml:",inline"`
	} `json:"cluster"`
	Comments       *string                `json:"comments,omitempty"`
	ComputedFields *Device_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date    `json:"created,omitempty"`
	CustomFields   *Device_CustomFields   `json:"custom_fields,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceRole NestedDeviceRole `json:"device_role"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Face    *struct {
		Label *DeviceFaceLabel `json:"label,omitempty"`
		Value *DeviceFaceValue `json:"value,omitempty"`
	} `json:"face,omitempty"`
	Id                 *openapi_types.UUID      `json:"id,omitempty"`
	LastUpdated        *time.Time               `json:"last_updated,omitempty"`
	LocalContextData   *Device_LocalContextData `json:"local_context_data"`
	LocalContextSchema *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedConfigContextSchema)
		NestedConfigContextSchema `yaml:",inline"`
	} `json:"local_context_schema"`
	Name         *string `json:"name"`
	ParentDevice *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"parent_device,omitempty"`
	Platform *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedPlatform)
		NestedPlatform `yaml:",inline"`
	} `json:"platform"`

	// The lowest-numbered unit occupied by the device
	Position  *int `json:"position"`
	PrimaryIp *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4 *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip4"`
	PrimaryIp6 *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip6"`
	Rack *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRack)
		NestedRack `yaml:",inline"`
	} `json:"rack"`
	SecretsGroup *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSecretsGroup)
		NestedSecretsGroup `yaml:",inline"`
	} `json:"secrets_group"`
	Serial *string `json:"serial,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Site   NestedSite `json:"site"`
	Status struct {
		Label *DeviceStatusLabel `json:"label,omitempty"`
		Value *DeviceStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url            *string `json:"url,omitempty"`
	VcPosition     *int    `json:"vc_position"`
	VcPriority     *int    `json:"vc_priority"`
	VirtualChassis *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVirtualChassis)
		NestedVirtualChassis `yaml:",inline"`
	} `json:"virtual_chassis"`
}

// Device_ComputedFields defines model for Device.ComputedFields.
type Device_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Device_CustomFields defines model for Device.CustomFields.
type Device_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceFaceLabel defines model for Device.Face.Label.
type DeviceFaceLabel string

// DeviceFaceValue defines model for Device.Face.Value.
type DeviceFaceValue string

// Device_LocalContextData defines model for Device.LocalContextData.
type Device_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceStatusLabel defines model for Device.Status.Label.
type DeviceStatusLabel string

// DeviceStatusValue defines model for Device.Status.Value.
type DeviceStatusValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type DeviceBay struct {
	CustomFields *DeviceBay_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                 `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display         *string             `json:"display,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	InstalledDevice *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"installed_device"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  string                `json:"name"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`
	Url   *string               `json:"url,omitempty"`
}

// DeviceBay_CustomFields defines model for DeviceBay.CustomFields.
type DeviceBay_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type DeviceBayTemplate struct {
	CustomFields *DeviceBayTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                         `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`
	Url   *string `json:"url,omitempty"`
}

// DeviceBayTemplate_CustomFields defines model for DeviceBayTemplate.CustomFields.
type DeviceBayTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceNAPALM defines model for DeviceNAPALM.
type DeviceNAPALM struct {
	Method DeviceNAPALM_Method `json:"method"`
}

// DeviceNAPALM_Method defines model for DeviceNAPALM.Method.
type DeviceNAPALM_Method struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type DeviceRole struct {
	Color        *string                  `json:"color,omitempty"`
	Created      *openapi_types.Date      `json:"created,omitempty"`
	CustomFields *DeviceRole_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                  `json:"description,omitempty"`
	DeviceCount  *int                     `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string             `json:"display,omitempty"`
	Id                  *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated         *time.Time          `json:"last_updated,omitempty"`
	Name                string              `json:"name"`
	Slug                *string             `json:"slug,omitempty"`
	Url                 *string             `json:"url,omitempty"`
	VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`

	// Virtual machines may be assigned to this role
	VmRole *bool `json:"vm_role,omitempty"`
}

// DeviceRole_CustomFields defines model for DeviceRole.CustomFields.
type DeviceRole_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type DeviceType struct {
	Comments     *string                  `json:"comments,omitempty"`
	Created      *openapi_types.Date      `json:"created,omitempty"`
	CustomFields *DeviceType_CustomFields `json:"custom_fields,omitempty"`
	DeviceCount  *int                     `json:"device_count,omitempty"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	FrontImage *string             `json:"front_image,omitempty"`
	Id         *openapi_types.UUID `json:"id,omitempty"`

	// Device consumes both front and rear rack faces
	IsFullDepth *bool      `json:"is_full_depth,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Manufacturer NestedManufacturer `json:"manufacturer"`
	Model        string             `json:"model"`

	// Discrete part number (optional)
	PartNumber    *string `json:"part_number,omitempty"`
	RearImage     *string `json:"rear_image,omitempty"`
	Slug          *string `json:"slug,omitempty"`
	SubdeviceRole *struct {
		Label *DeviceTypeSubdeviceRoleLabel `json:"label,omitempty"`
		Value *DeviceTypeSubdeviceRoleValue `json:"value,omitempty"`
	} `json:"subdevice_role,omitempty"`
	Tags    *[]TagSerializerField `json:"tags,omitempty"`
	UHeight *int                  `json:"u_height,omitempty"`
	Url     *string               `json:"url,omitempty"`
}

// DeviceType_CustomFields defines model for DeviceType.CustomFields.
type DeviceType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceTypeSubdeviceRoleLabel defines model for DeviceType.SubdeviceRole.Label.
type DeviceTypeSubdeviceRoleLabel string

// DeviceTypeSubdeviceRoleValue defines model for DeviceType.SubdeviceRole.Value.
type DeviceTypeSubdeviceRoleValue string

// Mixin to add `status` choice field to model serializers.
type DeviceWithConfigContext struct {
	// A unique tag used to identify this device
	AssetTag *string `json:"asset_tag"`
	Cluster  *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCluster)
		NestedCluster `yaml:",inline"`
	} `json:"cluster"`
	Comments      *string                                `json:"comments,omitempty"`
	ConfigContext *DeviceWithConfigContext_ConfigContext `json:"config_context,omitempty"`
	Created       *openapi_types.Date                    `json:"created,omitempty"`
	CustomFields  *DeviceWithConfigContext_CustomFields  `json:"custom_fields,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceRole NestedDeviceRole `json:"device_role"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Face    *struct {
		Label *DeviceWithConfigContextFaceLabel `json:"label,omitempty"`
		Value *DeviceWithConfigContextFaceValue `json:"value,omitempty"`
	} `json:"face,omitempty"`
	Id                 *openapi_types.UUID                       `json:"id,omitempty"`
	LastUpdated        *time.Time                                `json:"last_updated,omitempty"`
	LocalContextData   *DeviceWithConfigContext_LocalContextData `json:"local_context_data"`
	LocalContextSchema *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedConfigContextSchema)
		NestedConfigContextSchema `yaml:",inline"`
	} `json:"local_context_schema"`
	Name         *string `json:"name"`
	ParentDevice *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"parent_device,omitempty"`
	Platform *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedPlatform)
		NestedPlatform `yaml:",inline"`
	} `json:"platform"`

	// The lowest-numbered unit occupied by the device
	Position  *int `json:"position"`
	PrimaryIp *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4 *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip4"`
	PrimaryIp6 *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip6"`
	Rack *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRack)
		NestedRack `yaml:",inline"`
	} `json:"rack"`
	SecretsGroup *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSecretsGroup)
		NestedSecretsGroup `yaml:",inline"`
	} `json:"secrets_group"`
	Serial *string `json:"serial,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Site   NestedSite `json:"site"`
	Status struct {
		Label *DeviceWithConfigContextStatusLabel `json:"label,omitempty"`
		Value *DeviceWithConfigContextStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url            *string `json:"url,omitempty"`
	VcPosition     *int    `json:"vc_position"`
	VcPriority     *int    `json:"vc_priority"`
	VirtualChassis *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVirtualChassis)
		NestedVirtualChassis `yaml:",inline"`
	} `json:"virtual_chassis"`
}

// DeviceWithConfigContext_ConfigContext defines model for DeviceWithConfigContext.ConfigContext.
type DeviceWithConfigContext_ConfigContext struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceWithConfigContext_CustomFields defines model for DeviceWithConfigContext.CustomFields.
type DeviceWithConfigContext_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceWithConfigContextFaceLabel defines model for DeviceWithConfigContext.Face.Label.
type DeviceWithConfigContextFaceLabel string

// DeviceWithConfigContextFaceValue defines model for DeviceWithConfigContext.Face.Value.
type DeviceWithConfigContextFaceValue string

// DeviceWithConfigContext_LocalContextData defines model for DeviceWithConfigContext.LocalContextData.
type DeviceWithConfigContext_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// DeviceWithConfigContextStatusLabel defines model for DeviceWithConfigContext.Status.Label.
type DeviceWithConfigContextStatusLabel string

// DeviceWithConfigContextStatusValue defines model for DeviceWithConfigContext.Status.Value.
type DeviceWithConfigContextStatusValue string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type DynamicGroup struct {
	ContentType string  `json:"content_type"`
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// A JSON-encoded dictionary of filter parameters for group membership
	Filter DynamicGroup_Filter `json:"filter"`
	Id     *openapi_types.UUID `json:"id,omitempty"`

	// Dynamic Group name
	Name string `json:"name"`

	// Unique slug
	Slug *string `json:"slug,omitempty"`
	Url  *string `json:"url,omitempty"`
}

// A JSON-encoded dictionary of filter parameters for group membership
type DynamicGroup_Filter struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ExportTemplate struct {
	ContentType string  `json:"content_type"`
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Extension to append to the rendered filename
	FileExtension *string             `json:"file_extension,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`

	// Defaults to <code>text/plain</code>
	MimeType         *string               `json:"mime_type,omitempty"`
	Name             string                `json:"name"`
	Owner            *ExportTemplate_Owner `json:"owner"`
	OwnerContentType *string               `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID   `json:"owner_object_id"`

	// The list of objects being exported is passed as a context variable named <code>queryset</code>.
	TemplateCode string  `json:"template_code"`
	Url          *string `json:"url,omitempty"`
}

// ExportTemplate_Owner defines model for ExportTemplate.Owner.
type ExportTemplate_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// FaceEnum defines model for FaceEnum.
type FaceEnum string

// FamilyEnum defines model for FamilyEnum.
type FamilyEnum int

// FeedLegEnum defines model for FeedLegEnum.
type FeedLegEnum string

// FilterLogicEnum defines model for FilterLogicEnum.
type FilterLogicEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type FrontPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer     *FrontPort_CablePeer    `json:"cable_peer"`
	CablePeerType *string                 `json:"cable_peer_type"`
	CustomFields  *FrontPort_CustomFields `json:"custom_fields,omitempty"`
	Description   *string                 `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`

	// NestedRearPortSerializer but with parent device omitted (since front and rear ports must belong to same device)
	RearPort         FrontPortRearPort     `json:"rear_port"`
	RearPortPosition *int                  `json:"rear_port_position,omitempty"`
	Tags             *[]TagSerializerField `json:"tags,omitempty"`
	Type             struct {
		Label *FrontPortTypeLabel `json:"label,omitempty"`
		Value *FrontPortTypeValue `json:"value,omitempty"`
	} `json:"type"`
	Url *string `json:"url,omitempty"`
}

// FrontPort_CablePeer defines model for FrontPort.CablePeer.
type FrontPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// FrontPort_CustomFields defines model for FrontPort.CustomFields.
type FrontPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// FrontPortTypeLabel defines model for FrontPort.Type.Label.
type FrontPortTypeLabel string

// FrontPortTypeValue defines model for FrontPort.Type.Value.
type FrontPortTypeValue string

// NestedRearPortSerializer but with parent device omitted (since front and rear ports must belong to same device)
type FrontPortRearPort struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`
	Url   *string `json:"url,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type FrontPortTemplate struct {
	CustomFields *FrontPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                         `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	RearPort         NestedRearPortTemplate `json:"rear_port"`
	RearPortPosition *int                   `json:"rear_port_position,omitempty"`
	Type             struct {
		Label *FrontPortTemplateTypeLabel `json:"label,omitempty"`
		Value *FrontPortTemplateTypeValue `json:"value,omitempty"`
	} `json:"type"`
	Url *string `json:"url,omitempty"`
}

// FrontPortTemplate_CustomFields defines model for FrontPortTemplate.CustomFields.
type FrontPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// FrontPortTemplateTypeLabel defines model for FrontPortTemplate.Type.Label.
type FrontPortTemplateTypeLabel string

// FrontPortTemplateTypeValue defines model for FrontPortTemplate.Type.Value.
type FrontPortTemplateTypeValue string

// Git repositories defined as a data source.
type GitRepository struct {
	Branch  *string             `json:"branch,omitempty"`
	Created *openapi_types.Date `json:"created,omitempty"`

	// Commit hash of the most recent fetch from the selected branch. Used for syncing between workers.
	CurrentHead  *string                     `json:"current_head,omitempty"`
	CustomFields *GitRepository_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display          *string             `json:"display,omitempty"`
	Id               *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated      *time.Time          `json:"last_updated,omitempty"`
	Name             string              `json:"name"`
	ProvidedContents *[]interface{}      `json:"provided_contents,omitempty"`

	// Only HTTP and HTTPS URLs are presently supported
	RemoteUrl    string `json:"remote_url"`
	SecretsGroup *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSecretsGroup)
		NestedSecretsGroup `yaml:",inline"`
	} `json:"secrets_group"`
	Slug     *string `json:"slug,omitempty"`
	Token    *string `json:"token,omitempty"`
	Url      *string `json:"url,omitempty"`
	Username *string `json:"username,omitempty"`
}

// GitRepository_CustomFields defines model for GitRepository.CustomFields.
type GitRepository_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// GraphQLAPI defines model for GraphQLAPI.
type GraphQLAPI struct {
	// GraphQL query
	Query string `json:"query"`

	// Variables in JSON Format
	Variables *GraphQLAPI_Variables `json:"variables,omitempty"`
}

// Variables in JSON Format
type GraphQLAPI_Variables struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type GraphQLQuery struct {
	// Human friendly display value
	Display   *string                 `json:"display,omitempty"`
	Id        *openapi_types.UUID     `json:"id,omitempty"`
	Name      string                  `json:"name"`
	Query     string                  `json:"query"`
	Slug      *string                 `json:"slug,omitempty"`
	Url       *string                 `json:"url,omitempty"`
	Variables *GraphQLQuery_Variables `json:"variables"`
}

// GraphQLQuery_Variables defines model for GraphQLQuery.Variables.
type GraphQLQuery_Variables struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// GraphQLQueryInput defines model for GraphQLQueryInput.
type GraphQLQueryInput struct {
	Variables *GraphQLQueryInput_Variables `json:"variables"`
}

// GraphQLQueryInput_Variables defines model for GraphQLQueryInput.Variables.
type GraphQLQueryInput_Variables struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// GraphQLQueryOutput defines model for GraphQLQueryOutput.
type GraphQLQueryOutput struct {
	Data *GraphQLQueryOutput_Data `json:"data,omitempty"`
}

// GraphQLQueryOutput_Data defines model for GraphQLQueryOutput.Data.
type GraphQLQueryOutput_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type Group struct {
	// Human friendly display value
	Display   *string `json:"display,omitempty"`
	Id        *int    `json:"id,omitempty"`
	Name      string  `json:"name"`
	Url       *string `json:"url,omitempty"`
	UserCount *int    `json:"user_count,omitempty"`
}

// HttpMethodEnum defines model for HttpMethodEnum.
type HttpMethodEnum string

// Mixin to add `status` choice field to model serializers.
type IPAddress struct {
	Address            string                    `json:"address"`
	AssignedObject     *IPAddress_AssignedObject `json:"assigned_object"`
	AssignedObjectId   *openapi_types.UUID       `json:"assigned_object_id"`
	AssignedObjectType *string                   `json:"assigned_object_type"`
	Created            *openapi_types.Date       `json:"created,omitempty"`
	CustomFields       *IPAddress_CustomFields   `json:"custom_fields,omitempty"`
	Description        *string                   `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Hostname or FQDN (not case-sensitive)
	DnsName *string `json:"dns_name,omitempty"`
	Family  *struct {
		Label *IPAddressFamilyLabel `json:"label,omitempty"`
		Value *IPAddressFamilyValue `json:"value,omitempty"`
	} `json:"family,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	NatInside   *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"nat_inside"`
	NatOutside *[]NestedIPAddress `json:"nat_outside,omitempty"`
	Role       *struct {
		Label *IPAddressRoleLabel `json:"label,omitempty"`
		Value *IPAddressRoleValue `json:"value,omitempty"`
	} `json:"role,omitempty"`
	Status struct {
		Label *IPAddressStatusLabel `json:"label,omitempty"`
		Value *IPAddressStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url *string `json:"url,omitempty"`
	Vrf *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVRF)
		NestedVRF `yaml:",inline"`
	} `json:"vrf"`
}

// IPAddress_AssignedObject defines model for IPAddress.AssignedObject.
type IPAddress_AssignedObject struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// IPAddress_CustomFields defines model for IPAddress.CustomFields.
type IPAddress_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// IPAddressFamilyLabel defines model for IPAddress.Family.Label.
type IPAddressFamilyLabel string

// IPAddressFamilyValue defines model for IPAddress.Family.Value.
type IPAddressFamilyValue int

// IPAddressRoleLabel defines model for IPAddress.Role.Label.
type IPAddressRoleLabel string

// IPAddressRoleValue defines model for IPAddress.Role.Value.
type IPAddressRoleValue string

// IPAddressStatusLabel defines model for IPAddress.Status.Label.
type IPAddressStatusLabel string

// IPAddressStatusValue defines model for IPAddress.Status.Value.
type IPAddressStatusValue string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ImageAttachment struct {
	ContentType string     `json:"content_type"`
	Created     *time.Time `json:"created,omitempty"`

	// Human friendly display value
	Display     *string                 `json:"display,omitempty"`
	Id          *openapi_types.UUID     `json:"id,omitempty"`
	Image       string                  `json:"image"`
	ImageHeight int                     `json:"image_height"`
	ImageWidth  int                     `json:"image_width"`
	Name        *string                 `json:"name,omitempty"`
	ObjectId    openapi_types.UUID      `json:"object_id"`
	Parent      *ImageAttachment_Parent `json:"parent,omitempty"`
	Url         *string                 `json:"url,omitempty"`
}

// ImageAttachment_Parent defines model for ImageAttachment.Parent.
type ImageAttachment_Parent struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Interface struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *Interface_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                      `json:"cable_peer_type"`
	ConnectedEndpoint          *Interface_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                        `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                      `json:"connected_endpoint_type"`
	CountIpaddresses           *int                         `json:"count_ipaddresses,omitempty"`
	CustomFields               *Interface_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                      `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Enabled *bool               `json:"enabled,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Lag   *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedInterface)
		NestedInterface `yaml:",inline"`
	} `json:"lag"`
	MacAddress *string `json:"mac_address"`

	// This interface is used only for out-of-band management
	MgmtOnly *bool `json:"mgmt_only,omitempty"`
	Mode     *struct {
		Label *InterfaceModeLabel `json:"label,omitempty"`
		Value *InterfaceModeValue `json:"value,omitempty"`
	} `json:"mode,omitempty"`
	Mtu         *int   `json:"mtu"`
	Name        string `json:"name"`
	TaggedVlans *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Name    string              `json:"name"`
		Url     *string             `json:"url,omitempty"`
		Vid     int                 `json:"vid"`
	} `json:"tagged_vlans,omitempty"`
	Tags *[]TagSerializerField `json:"tags,omitempty"`
	Type struct {
		Label *InterfaceTypeLabel `json:"label,omitempty"`
		Value *InterfaceTypeValue `json:"value,omitempty"`
	} `json:"type"`
	UntaggedVlan *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVLAN)
		NestedVLAN `yaml:",inline"`
	} `json:"untagged_vlan"`
	Url *string `json:"url,omitempty"`
}

// Interface_CablePeer defines model for Interface.CablePeer.
type Interface_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Interface_ConnectedEndpoint defines model for Interface.ConnectedEndpoint.
type Interface_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Interface_CustomFields defines model for Interface.CustomFields.
type Interface_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// InterfaceModeLabel defines model for Interface.Mode.Label.
type InterfaceModeLabel string

// InterfaceModeValue defines model for Interface.Mode.Value.
type InterfaceModeValue string

// InterfaceTypeLabel defines model for Interface.Type.Label.
type InterfaceTypeLabel string

// InterfaceTypeValue defines model for Interface.Type.Value.
type InterfaceTypeValue string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type InterfaceConnection struct {
	ConnectedEndpointReachable *bool `json:"connected_endpoint_reachable"`

	// Human friendly display value
	Display    *string `json:"display,omitempty"`
	InterfaceA *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedInterface)
		NestedInterface `yaml:",inline"`
	} `json:"interface_a,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	InterfaceB NestedInterface `json:"interface_b"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type InterfaceTemplate struct {
	CustomFields *InterfaceTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                         `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label    *string `json:"label,omitempty"`
	MgmtOnly *bool   `json:"mgmt_only,omitempty"`
	Name     string  `json:"name"`
	Type     struct {
		Label *InterfaceTemplateTypeLabel `json:"label,omitempty"`
		Value *InterfaceTemplateTypeValue `json:"value,omitempty"`
	} `json:"type"`
	Url *string `json:"url,omitempty"`
}

// InterfaceTemplate_CustomFields defines model for InterfaceTemplate.CustomFields.
type InterfaceTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// InterfaceTemplateTypeLabel defines model for InterfaceTemplate.Type.Label.
type InterfaceTemplateTypeLabel string

// InterfaceTemplateTypeValue defines model for InterfaceTemplate.Type.Value.
type InterfaceTemplateTypeValue string

// InterfaceTypeChoices defines model for InterfaceTypeChoices.
type InterfaceTypeChoices string

// IntervalEnum defines model for IntervalEnum.
type IntervalEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type InventoryItem struct {
	Depth *int `json:"_depth,omitempty"`

	// A unique tag used to identify this item
	AssetTag     *string                     `json:"asset_tag"`
	CustomFields *InventoryItem_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                     `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// This item was automatically discovered
	Discovered *bool `json:"discovered,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label        *string `json:"label,omitempty"`
	Manufacturer *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedManufacturer)
		NestedManufacturer `yaml:",inline"`
	} `json:"manufacturer"`
	Name   string              `json:"name"`
	Parent *openapi_types.UUID `json:"parent"`

	// Manufacturer-assigned part identifier
	PartId *string               `json:"part_id,omitempty"`
	Serial *string               `json:"serial,omitempty"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Url    *string               `json:"url,omitempty"`
}

// InventoryItem_CustomFields defines model for InventoryItem.CustomFields.
type InventoryItem_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Job struct {
	// Whether the job requires approval from another user before running
	ApprovalRequired *bool `json:"approval_required,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	ApprovalRequiredOverride *bool `json:"approval_required_override,omitempty"`

	// Whether the job defaults to committing changes when run, or defaults to a dry-run
	CommitDefault *bool `json:"commit_default,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	CommitDefaultOverride *bool               `json:"commit_default_override,omitempty"`
	Created               *openapi_types.Date `json:"created,omitempty"`
	CustomFields          *Job_CustomFields   `json:"custom_fields,omitempty"`

	// Markdown formatting is supported
	Description *string `json:"description,omitempty"`

	// If set, the configured description will remain even if the underlying Job source code changes
	DescriptionOverride *bool `json:"description_override,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Whether this job can be executed by users
	Enabled *bool `json:"enabled,omitempty"`

	// Human-readable grouping that this job belongs to
	Grouping string `json:"grouping"`

	// If set, the configured grouping will remain even if the underlying Job source code changes
	GroupingOverride *bool `json:"grouping_override,omitempty"`

	// Whether the job defaults to not being shown in the UI
	Hidden *bool `json:"hidden,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	HiddenOverride *bool               `json:"hidden_override,omitempty"`
	Id             *openapi_types.UUID `json:"id,omitempty"`

	// Whether the Python module and class providing this job are presently installed and loadable
	Installed *bool `json:"installed,omitempty"`

	// Name of the Python class providing this job
	JobClassName *string    `json:"job_class_name,omitempty"`
	LastUpdated  *time.Time `json:"last_updated,omitempty"`

	// Dotted name of the Python module providing this job
	ModuleName *string `json:"module_name,omitempty"`

	// Human-readable name of this job
	Name string `json:"name"`

	// If set, the configured name will remain even if the underlying Job source code changes
	NameOverride *bool `json:"name_override,omitempty"`

	// Whether the job is prevented from making lasting changes to the database
	ReadOnly *bool `json:"read_only,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	ReadOnlyOverride *bool   `json:"read_only_override,omitempty"`
	Slug             *string `json:"slug,omitempty"`

	// Maximum runtime in seconds before the job will receive a <code>SoftTimeLimitExceeded</code> exception.<br>Set to 0 to use Nautobot system default
	SoftTimeLimit *float64 `json:"soft_time_limit,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	SoftTimeLimitOverride *bool `json:"soft_time_limit_override,omitempty"`

	// Source of the Python code for this job - local, Git repository, or plugins
	Source *string               `json:"source,omitempty"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`

	// Maximum runtime in seconds before the job will be forcibly terminated.<br>Set to 0 to use Nautobot system default
	TimeLimit *float64 `json:"time_limit,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	TimeLimitOverride *bool   `json:"time_limit_override,omitempty"`
	Url               *string `json:"url,omitempty"`
}

// Job_CustomFields defines model for Job.CustomFields.
type Job_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// JobClassDetail defines model for JobClassDetail.
type JobClassDetail struct {
	Description *string              `json:"description,omitempty"`
	Id          *string              `json:"id,omitempty"`
	Name        *string              `json:"name,omitempty"`
	Pk          *openapi_types.UUID  `json:"pk"`
	Result      *JobResult           `json:"result,omitempty"`
	TestMethods []string             `json:"test_methods"`
	Url         *string              `json:"url,omitempty"`
	Vars        *JobClassDetail_Vars `json:"vars,omitempty"`
}

// JobClassDetail_Vars defines model for JobClassDetail.Vars.
type JobClassDetail_Vars struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// JobInput defines model for JobInput.
type JobInput struct {
	Commit   *bool               `json:"commit,omitempty"`
	Data     *JobInput_Data      `json:"data,omitempty"`
	Schedule *NestedScheduledJob `json:"schedule,omitempty"`
}

// JobInput_Data defines model for JobInput.Data.
type JobInput_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// JobLogEntry defines model for JobLogEntry.
type JobLogEntry struct {
	AbsoluteUrl *string             `json:"absolute_url"`
	Created     *time.Time          `json:"created,omitempty"`
	Grouping    *string             `json:"grouping,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	JobResult   openapi_types.UUID  `json:"job_result"`
	LogLevel    *LogLevelEnum       `json:"log_level,omitempty"`
	LogObject   *string             `json:"log_object"`
	Message     *string             `json:"message,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// JobResult defines model for JobResult.
type JobResult struct {
	Completed *time.Time          `json:"completed"`
	Created   *time.Time          `json:"created,omitempty"`
	Data      *JobResult_Data     `json:"data"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	JobId     openapi_types.UUID  `json:"job_id"`
	JobModel  *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedJob)
		NestedJob `yaml:",inline"`
	} `json:"job_model,omitempty"`
	Name     string  `json:"name"`
	ObjType  *string `json:"obj_type,omitempty"`
	Schedule *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedScheduledJob)
		NestedScheduledJob `yaml:",inline"`
	} `json:"schedule,omitempty"`
	Status *struct {
		Label *JobResultStatusLabel `json:"label,omitempty"`
		Value *JobResultStatusValue `json:"value,omitempty"`
	} `json:"status,omitempty"`
	Url  *string `json:"url,omitempty"`
	User *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedUser)
		NestedUser `yaml:",inline"`
	} `json:"user,omitempty"`
}

// JobResult_Data defines model for JobResult.Data.
type JobResult_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// JobResultStatusLabel defines model for JobResult.Status.Label.
type JobResultStatusLabel string

// JobResultStatusValue defines model for JobResult.Status.Value.
type JobResultStatusValue string

// JobResultStatusEnum defines model for JobResultStatusEnum.
type JobResultStatusEnum string

// Serializer representing responses from the JobModelViewSet.run() POST endpoint.
type JobRunResponse struct {
	JobResult *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedJobResult)
		NestedJobResult `yaml:",inline"`
	} `json:"job_result,omitempty"`
	Schedule *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedScheduledJob)
		NestedScheduledJob `yaml:",inline"`
	} `json:"schedule,omitempty"`
}

// Serializer used for responses from the JobModelViewSet.variables() detail endpoint.
type JobVariable struct {
	Choices   *JobVariable_Choices `json:"choices,omitempty"`
	Default   *JobVariable_Default `json:"default,omitempty"`
	HelpText  *string              `json:"help_text,omitempty"`
	Label     *string              `json:"label,omitempty"`
	MaxLength *int                 `json:"max_length,omitempty"`
	MaxValue  *int                 `json:"max_value,omitempty"`
	MinLength *int                 `json:"min_length,omitempty"`
	MinValue  *int                 `json:"min_value,omitempty"`
	Model     *string              `json:"model,omitempty"`
	Name      *string              `json:"name,omitempty"`
	Required  *bool                `json:"required,omitempty"`
	Type      *string              `json:"type,omitempty"`
}

// JobVariable_Choices defines model for JobVariable.Choices.
type JobVariable_Choices struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// JobVariable_Default defines model for JobVariable.Default.
type JobVariable_Default struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// LengthUnitEnum defines model for LengthUnitEnum.
type LengthUnitEnum string

// LogLevelEnum defines model for LogLevelEnum.
type LogLevelEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Manufacturer struct {
	Created         *openapi_types.Date        `json:"created,omitempty"`
	CustomFields    *Manufacturer_CustomFields `json:"custom_fields,omitempty"`
	Description     *string                    `json:"description,omitempty"`
	DevicetypeCount *int                       `json:"devicetype_count,omitempty"`

	// Human friendly display value
	Display            *string             `json:"display,omitempty"`
	Id                 *openapi_types.UUID `json:"id,omitempty"`
	InventoryitemCount *int                `json:"inventoryitem_count,omitempty"`
	LastUpdated        *time.Time          `json:"last_updated,omitempty"`
	Name               string              `json:"name"`
	PlatformCount      *int                `json:"platform_count,omitempty"`
	Slug               *string             `json:"slug,omitempty"`
	Url                *string             `json:"url,omitempty"`
}

// Manufacturer_CustomFields defines model for Manufacturer.CustomFields.
type Manufacturer_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ModeEnum defines model for ModeEnum.
type ModeEnum string

// This base serializer implements common fields and logic for all ModelSerializers.
// Namely it defines the `display` field which exposes a human friendly value for the given object.
type NestedCable struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Label   *string             `json:"label,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedCircuit struct {
	Cid string `json:"cid"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedCircuitType struct {
	CircuitCount *int `json:"circuit_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedCluster struct {
	// Human friendly display value
	Display             *string             `json:"display,omitempty"`
	Id                  *openapi_types.UUID `json:"id,omitempty"`
	Name                string              `json:"name"`
	Url                 *string             `json:"url,omitempty"`
	VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedClusterGroup struct {
	ClusterCount *int `json:"cluster_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedClusterType struct {
	ClusterCount *int `json:"cluster_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedConfigContextSchema struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedCustomField struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// URL-friendly unique shorthand.
	Name string  `json:"name"`
	Url  *string `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedDevice struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    *string             `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedDeviceRole struct {
	DeviceCount *int `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string             `json:"display,omitempty"`
	Id                  *openapi_types.UUID `json:"id,omitempty"`
	Name                string              `json:"name"`
	Slug                *string             `json:"slug,omitempty"`
	Url                 *string             `json:"url,omitempty"`
	VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedDeviceType struct {
	DeviceCount *int `json:"device_count,omitempty"`

	// Human friendly display value
	Display      *string             `json:"display,omitempty"`
	Id           *openapi_types.UUID `json:"id,omitempty"`
	Manufacturer *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedManufacturer)
		NestedManufacturer `yaml:",inline"`
	} `json:"manufacturer,omitempty"`
	Model string  `json:"model"`
	Slug  string  `json:"slug"`
	Url   *string `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedIPAddress struct {
	Address string `json:"address"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Family  *int                `json:"family,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedInterface struct {
	Cable  *openapi_types.UUID `json:"cable"`
	Device *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// NestedJob defines model for NestedJob.
type NestedJob struct {
	// Human-readable grouping that this job belongs to
	Grouping string              `json:"grouping"`
	Id       *openapi_types.UUID `json:"id,omitempty"`

	// Name of the Python class providing this job
	JobClassName *string `json:"job_class_name,omitempty"`

	// Dotted name of the Python module providing this job
	ModuleName *string `json:"module_name,omitempty"`

	// Human-readable name of this job
	Name string  `json:"name"`
	Slug *string `json:"slug,omitempty"`

	// Source of the Python code for this job - local, Git repository, or plugins
	Source *string `json:"source,omitempty"`
	Url    *string `json:"url,omitempty"`
}

// NestedJobResult defines model for NestedJobResult.
type NestedJobResult struct {
	Completed *time.Time          `json:"completed"`
	Created   *time.Time          `json:"created,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      string              `json:"name"`
	Status    struct {
		Label *NestedJobResultStatusLabel `json:"label,omitempty"`
		Value *NestedJobResultStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Url  *string `json:"url,omitempty"`
	User *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedUser)
		NestedUser `yaml:",inline"`
	} `json:"user,omitempty"`
}

// NestedJobResultStatusLabel defines model for NestedJobResult.Status.Label.
type NestedJobResultStatusLabel string

// NestedJobResultStatusValue defines model for NestedJobResult.Status.Value.
type NestedJobResultStatusValue string

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedManufacturer struct {
	DevicetypeCount *int `json:"devicetype_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedPlatform struct {
	DeviceCount *int `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string             `json:"display,omitempty"`
	Id                  *openapi_types.UUID `json:"id,omitempty"`
	Name                string              `json:"name"`
	Slug                *string             `json:"slug,omitempty"`
	Url                 *string             `json:"url,omitempty"`
	VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedPowerPanel struct {
	// Human friendly display value
	Display        *string             `json:"display,omitempty"`
	Id             *openapi_types.UUID `json:"id,omitempty"`
	Name           string              `json:"name"`
	PowerfeedCount *int                `json:"powerfeed_count,omitempty"`
	Url            *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedPowerPort struct {
	Cable  *openapi_types.UUID `json:"cable"`
	Device *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedPowerPortTemplate struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedProvider struct {
	CircuitCount *int `json:"circuit_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedProviderNetwork struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRIR struct {
	AggregateCount *int `json:"aggregate_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRack struct {
	DeviceCount *int `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRackGroup struct {
	Depth *int `json:"_depth,omitempty"`

	// Human friendly display value
	Display   *string             `json:"display,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      string              `json:"name"`
	RackCount *int                `json:"rack_count,omitempty"`
	Slug      *string             `json:"slug,omitempty"`
	Url       *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRackRole struct {
	// Human friendly display value
	Display   *string             `json:"display,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      string              `json:"name"`
	RackCount *int                `json:"rack_count,omitempty"`
	Slug      *string             `json:"slug,omitempty"`
	Url       *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRearPortTemplate struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRegion struct {
	Depth *int `json:"_depth,omitempty"`

	// Human friendly display value
	Display   *string             `json:"display,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      string              `json:"name"`
	SiteCount *int                `json:"site_count,omitempty"`
	Slug      *string             `json:"slug,omitempty"`
	Url       *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRelationship struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Internal relationship name
	Name string  `json:"name"`
	Slug *string `json:"slug,omitempty"`
	Url  *string `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedRole struct {
	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	PrefixCount *int                `json:"prefix_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
	VlanCount   *int                `json:"vlan_count,omitempty"`
}

// NestedScheduledJob defines model for NestedScheduledJob.
type NestedScheduledJob struct {
	Interval  IntervalEnum `json:"interval"`
	Name      *string      `json:"name,omitempty"`
	StartTime *time.Time   `json:"start_time,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedSecret struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedSecretsGroup struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedSecretsGroupAssociation struct {
	AccessType AccessTypeEnum `json:"access_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Secret     NestedSecret   `json:"secret"`
	SecretType SecretTypeEnum `json:"secret_type"`
	Url        *string        `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedSite struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedTenant struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    *string             `json:"slug,omitempty"`
	Url     *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedTenantGroup struct {
	Depth *int `json:"_depth,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	Slug        *string             `json:"slug,omitempty"`
	TenantCount *int                `json:"tenant_count,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedUser struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Url     *string             `json:"url,omitempty"`

	// Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	Username string `json:"username"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedVLAN struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
	Vid     int                 `json:"vid"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedVLANGroup struct {
	// Human friendly display value
	Display   *string             `json:"display,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      string              `json:"name"`
	Slug      *string             `json:"slug,omitempty"`
	Url       *string             `json:"url,omitempty"`
	VlanCount *int                `json:"vlan_count,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedVRF struct {
	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	PrefixCount *int                `json:"prefix_count,omitempty"`

	// Unique route distinguisher (as defined in RFC 4364)
	Rd  *string `json:"rd"`
	Url *string `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedVirtualChassis struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Master      NestedDevice `json:"master"`
	MemberCount *int         `json:"member_count,omitempty"`
	Name        string       `json:"name"`
	Url         *string      `json:"url,omitempty"`
}

// Returns a nested representation of an object on read, but accepts either the nested representation or the
// primary key value on write operations.
type NestedVirtualMachine struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Url     *string             `json:"url,omitempty"`
}

// ObjectChange defines model for ObjectChange.
type ObjectChange struct {
	Action *struct {
		Label *ObjectChangeActionLabel `json:"label,omitempty"`
		Value *ObjectChangeActionValue `json:"value,omitempty"`
	} `json:"action,omitempty"`
	ChangedObject     *ObjectChange_ChangedObject `json:"changed_object"`
	ChangedObjectId   openapi_types.UUID          `json:"changed_object_id"`
	ChangedObjectType *string                     `json:"changed_object_type,omitempty"`
	Id                *openapi_types.UUID         `json:"id,omitempty"`
	ObjectData        *ObjectChange_ObjectData    `json:"object_data,omitempty"`
	RequestId         *openapi_types.UUID         `json:"request_id,omitempty"`
	Time              *time.Time                  `json:"time,omitempty"`
	Url               *string                     `json:"url,omitempty"`
	User              *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedUser)
		NestedUser `yaml:",inline"`
	} `json:"user,omitempty"`
	UserName *string `json:"user_name,omitempty"`
}

// ObjectChangeActionLabel defines model for ObjectChange.Action.Label.
type ObjectChangeActionLabel string

// ObjectChangeActionValue defines model for ObjectChange.Action.Value.
type ObjectChangeActionValue string

// ObjectChange_ChangedObject defines model for ObjectChange.ChangedObject.
type ObjectChange_ChangedObject struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ObjectChange_ObjectData defines model for ObjectChange.ObjectData.
type ObjectChange_ObjectData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ObjectPermission struct {
	// The list of actions granted by this permission
	Actions ObjectPermission_Actions `json:"actions"`

	// Queryset filter matching the applicable objects of the selected type(s)
	Constraints *ObjectPermission_Constraints `json:"constraints"`
	Description *string                       `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Enabled *bool   `json:"enabled,omitempty"`
	Groups  *[]struct {
		// Human friendly display value
		Display *string `json:"display,omitempty"`
		Id      *int    `json:"id,omitempty"`
		Name    string  `json:"name"`
		Url     *string `json:"url,omitempty"`
	} `json:"groups,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ObjectTypes []string            `json:"object_types"`
	Url         *string             `json:"url,omitempty"`
	Users       *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Url     *string             `json:"url,omitempty"`

		// Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
		Username string `json:"username"`
	} `json:"users,omitempty"`
}

// The list of actions granted by this permission
type ObjectPermission_Actions struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Queryset filter matching the applicable objects of the selected type(s)
type ObjectPermission_Constraints struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// OuterUnitEnum defines model for OuterUnitEnum.
type OuterUnitEnum string

// PaginatedAggregateList defines model for PaginatedAggregateList.
type PaginatedAggregateList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]Aggregate `json:"results,omitempty"`
}

// PaginatedAvailableIPList defines model for PaginatedAvailableIPList.
type PaginatedAvailableIPList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]AvailableIP `json:"results,omitempty"`
}

// PaginatedAvailablePrefixList defines model for PaginatedAvailablePrefixList.
type PaginatedAvailablePrefixList struct {
	Count    *int               `json:"count,omitempty"`
	Next     *string            `json:"next"`
	Previous *string            `json:"previous"`
	Results  *[]AvailablePrefix `json:"results,omitempty"`
}

// PaginatedCableList defines model for PaginatedCableList.
type PaginatedCableList struct {
	Count    *int     `json:"count,omitempty"`
	Next     *string  `json:"next"`
	Previous *string  `json:"previous"`
	Results  *[]Cable `json:"results,omitempty"`
}

// PaginatedCircuitList defines model for PaginatedCircuitList.
type PaginatedCircuitList struct {
	Count    *int       `json:"count,omitempty"`
	Next     *string    `json:"next"`
	Previous *string    `json:"previous"`
	Results  *[]Circuit `json:"results,omitempty"`
}

// PaginatedCircuitTerminationList defines model for PaginatedCircuitTerminationList.
type PaginatedCircuitTerminationList struct {
	Count    *int                  `json:"count,omitempty"`
	Next     *string               `json:"next"`
	Previous *string               `json:"previous"`
	Results  *[]CircuitTermination `json:"results,omitempty"`
}

// PaginatedCircuitTypeList defines model for PaginatedCircuitTypeList.
type PaginatedCircuitTypeList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]CircuitType `json:"results,omitempty"`
}

// PaginatedClusterGroupList defines model for PaginatedClusterGroupList.
type PaginatedClusterGroupList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]ClusterGroup `json:"results,omitempty"`
}

// PaginatedClusterList defines model for PaginatedClusterList.
type PaginatedClusterList struct {
	Count    *int       `json:"count,omitempty"`
	Next     *string    `json:"next"`
	Previous *string    `json:"previous"`
	Results  *[]Cluster `json:"results,omitempty"`
}

// PaginatedClusterTypeList defines model for PaginatedClusterTypeList.
type PaginatedClusterTypeList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]ClusterType `json:"results,omitempty"`
}

// PaginatedComputedFieldList defines model for PaginatedComputedFieldList.
type PaginatedComputedFieldList struct {
	Count    *int             `json:"count,omitempty"`
	Next     *string          `json:"next"`
	Previous *string          `json:"previous"`
	Results  *[]ComputedField `json:"results,omitempty"`
}

// PaginatedConfigContextList defines model for PaginatedConfigContextList.
type PaginatedConfigContextList struct {
	Count    *int             `json:"count,omitempty"`
	Next     *string          `json:"next"`
	Previous *string          `json:"previous"`
	Results  *[]ConfigContext `json:"results,omitempty"`
}

// PaginatedConfigContextSchemaList defines model for PaginatedConfigContextSchemaList.
type PaginatedConfigContextSchemaList struct {
	Count    *int                   `json:"count,omitempty"`
	Next     *string                `json:"next"`
	Previous *string                `json:"previous"`
	Results  *[]ConfigContextSchema `json:"results,omitempty"`
}

// PaginatedConsolePortList defines model for PaginatedConsolePortList.
type PaginatedConsolePortList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]ConsolePort `json:"results,omitempty"`
}

// PaginatedConsolePortTemplateList defines model for PaginatedConsolePortTemplateList.
type PaginatedConsolePortTemplateList struct {
	Count    *int                   `json:"count,omitempty"`
	Next     *string                `json:"next"`
	Previous *string                `json:"previous"`
	Results  *[]ConsolePortTemplate `json:"results,omitempty"`
}

// PaginatedConsoleServerPortList defines model for PaginatedConsoleServerPortList.
type PaginatedConsoleServerPortList struct {
	Count    *int                 `json:"count,omitempty"`
	Next     *string              `json:"next"`
	Previous *string              `json:"previous"`
	Results  *[]ConsoleServerPort `json:"results,omitempty"`
}

// PaginatedConsoleServerPortTemplateList defines model for PaginatedConsoleServerPortTemplateList.
type PaginatedConsoleServerPortTemplateList struct {
	Count    *int                         `json:"count,omitempty"`
	Next     *string                      `json:"next"`
	Previous *string                      `json:"previous"`
	Results  *[]ConsoleServerPortTemplate `json:"results,omitempty"`
}

// PaginatedContentTypeList defines model for PaginatedContentTypeList.
type PaginatedContentTypeList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]ContentType `json:"results,omitempty"`
}

// PaginatedCustomFieldChoiceList defines model for PaginatedCustomFieldChoiceList.
type PaginatedCustomFieldChoiceList struct {
	Count    *int                 `json:"count,omitempty"`
	Next     *string              `json:"next"`
	Previous *string              `json:"previous"`
	Results  *[]CustomFieldChoice `json:"results,omitempty"`
}

// PaginatedCustomFieldList defines model for PaginatedCustomFieldList.
type PaginatedCustomFieldList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]CustomField `json:"results,omitempty"`
}

// PaginatedCustomLinkList defines model for PaginatedCustomLinkList.
type PaginatedCustomLinkList struct {
	Count    *int          `json:"count,omitempty"`
	Next     *string       `json:"next"`
	Previous *string       `json:"previous"`
	Results  *[]CustomLink `json:"results,omitempty"`
}

// PaginatedDeviceBayList defines model for PaginatedDeviceBayList.
type PaginatedDeviceBayList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]DeviceBay `json:"results,omitempty"`
}

// PaginatedDeviceBayTemplateList defines model for PaginatedDeviceBayTemplateList.
type PaginatedDeviceBayTemplateList struct {
	Count    *int                 `json:"count,omitempty"`
	Next     *string              `json:"next"`
	Previous *string              `json:"previous"`
	Results  *[]DeviceBayTemplate `json:"results,omitempty"`
}

// PaginatedDeviceRoleList defines model for PaginatedDeviceRoleList.
type PaginatedDeviceRoleList struct {
	Count    *int          `json:"count,omitempty"`
	Next     *string       `json:"next"`
	Previous *string       `json:"previous"`
	Results  *[]DeviceRole `json:"results,omitempty"`
}

// PaginatedDeviceTypeList defines model for PaginatedDeviceTypeList.
type PaginatedDeviceTypeList struct {
	Count    *int          `json:"count,omitempty"`
	Next     *string       `json:"next"`
	Previous *string       `json:"previous"`
	Results  *[]DeviceType `json:"results,omitempty"`
}

// PaginatedDeviceWithConfigContextList defines model for PaginatedDeviceWithConfigContextList.
type PaginatedDeviceWithConfigContextList struct {
	Count    *int                       `json:"count,omitempty"`
	Next     *string                    `json:"next"`
	Previous *string                    `json:"previous"`
	Results  *[]DeviceWithConfigContext `json:"results,omitempty"`
}

// PaginatedDynamicGroupList defines model for PaginatedDynamicGroupList.
type PaginatedDynamicGroupList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]DynamicGroup `json:"results,omitempty"`
}

// PaginatedExportTemplateList defines model for PaginatedExportTemplateList.
type PaginatedExportTemplateList struct {
	Count    *int              `json:"count,omitempty"`
	Next     *string           `json:"next"`
	Previous *string           `json:"previous"`
	Results  *[]ExportTemplate `json:"results,omitempty"`
}

// PaginatedFrontPortList defines model for PaginatedFrontPortList.
type PaginatedFrontPortList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]FrontPort `json:"results,omitempty"`
}

// PaginatedFrontPortTemplateList defines model for PaginatedFrontPortTemplateList.
type PaginatedFrontPortTemplateList struct {
	Count    *int                 `json:"count,omitempty"`
	Next     *string              `json:"next"`
	Previous *string              `json:"previous"`
	Results  *[]FrontPortTemplate `json:"results,omitempty"`
}

// PaginatedGitRepositoryList defines model for PaginatedGitRepositoryList.
type PaginatedGitRepositoryList struct {
	Count    *int             `json:"count,omitempty"`
	Next     *string          `json:"next"`
	Previous *string          `json:"previous"`
	Results  *[]GitRepository `json:"results,omitempty"`
}

// PaginatedGraphQLQueryList defines model for PaginatedGraphQLQueryList.
type PaginatedGraphQLQueryList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]GraphQLQuery `json:"results,omitempty"`
}

// PaginatedGroupList defines model for PaginatedGroupList.
type PaginatedGroupList struct {
	Count    *int     `json:"count,omitempty"`
	Next     *string  `json:"next"`
	Previous *string  `json:"previous"`
	Results  *[]Group `json:"results,omitempty"`
}

// PaginatedIPAddressList defines model for PaginatedIPAddressList.
type PaginatedIPAddressList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]IPAddress `json:"results,omitempty"`
}

// PaginatedImageAttachmentList defines model for PaginatedImageAttachmentList.
type PaginatedImageAttachmentList struct {
	Count    *int               `json:"count,omitempty"`
	Next     *string            `json:"next"`
	Previous *string            `json:"previous"`
	Results  *[]ImageAttachment `json:"results,omitempty"`
}

// PaginatedInterfaceConnectionList defines model for PaginatedInterfaceConnectionList.
type PaginatedInterfaceConnectionList struct {
	Count    *int                   `json:"count,omitempty"`
	Next     *string                `json:"next"`
	Previous *string                `json:"previous"`
	Results  *[]InterfaceConnection `json:"results,omitempty"`
}

// PaginatedInterfaceList defines model for PaginatedInterfaceList.
type PaginatedInterfaceList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]Interface `json:"results,omitempty"`
}

// PaginatedInterfaceTemplateList defines model for PaginatedInterfaceTemplateList.
type PaginatedInterfaceTemplateList struct {
	Count    *int                 `json:"count,omitempty"`
	Next     *string              `json:"next"`
	Previous *string              `json:"previous"`
	Results  *[]InterfaceTemplate `json:"results,omitempty"`
}

// PaginatedInventoryItemList defines model for PaginatedInventoryItemList.
type PaginatedInventoryItemList struct {
	Count    *int             `json:"count,omitempty"`
	Next     *string          `json:"next"`
	Previous *string          `json:"previous"`
	Results  *[]InventoryItem `json:"results,omitempty"`
}

// PaginatedJobList defines model for PaginatedJobList.
type PaginatedJobList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]Job  `json:"results,omitempty"`
}

// PaginatedJobLogEntryList defines model for PaginatedJobLogEntryList.
type PaginatedJobLogEntryList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]JobLogEntry `json:"results,omitempty"`
}

// PaginatedJobResultList defines model for PaginatedJobResultList.
type PaginatedJobResultList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]JobResult `json:"results,omitempty"`
}

// PaginatedJobVariableList defines model for PaginatedJobVariableList.
type PaginatedJobVariableList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]JobVariable `json:"results,omitempty"`
}

// PaginatedManufacturerList defines model for PaginatedManufacturerList.
type PaginatedManufacturerList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]Manufacturer `json:"results,omitempty"`
}

// PaginatedObjectChangeList defines model for PaginatedObjectChangeList.
type PaginatedObjectChangeList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]ObjectChange `json:"results,omitempty"`
}

// PaginatedObjectPermissionList defines model for PaginatedObjectPermissionList.
type PaginatedObjectPermissionList struct {
	Count    *int                `json:"count,omitempty"`
	Next     *string             `json:"next"`
	Previous *string             `json:"previous"`
	Results  *[]ObjectPermission `json:"results,omitempty"`
}

// PaginatedPlatformList defines model for PaginatedPlatformList.
type PaginatedPlatformList struct {
	Count    *int        `json:"count,omitempty"`
	Next     *string     `json:"next"`
	Previous *string     `json:"previous"`
	Results  *[]Platform `json:"results,omitempty"`
}

// PaginatedPowerFeedList defines model for PaginatedPowerFeedList.
type PaginatedPowerFeedList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]PowerFeed `json:"results,omitempty"`
}

// PaginatedPowerOutletList defines model for PaginatedPowerOutletList.
type PaginatedPowerOutletList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]PowerOutlet `json:"results,omitempty"`
}

// PaginatedPowerOutletTemplateList defines model for PaginatedPowerOutletTemplateList.
type PaginatedPowerOutletTemplateList struct {
	Count    *int                   `json:"count,omitempty"`
	Next     *string                `json:"next"`
	Previous *string                `json:"previous"`
	Results  *[]PowerOutletTemplate `json:"results,omitempty"`
}

// PaginatedPowerPanelList defines model for PaginatedPowerPanelList.
type PaginatedPowerPanelList struct {
	Count    *int          `json:"count,omitempty"`
	Next     *string       `json:"next"`
	Previous *string       `json:"previous"`
	Results  *[]PowerPanel `json:"results,omitempty"`
}

// PaginatedPowerPortList defines model for PaginatedPowerPortList.
type PaginatedPowerPortList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]PowerPort `json:"results,omitempty"`
}

// PaginatedPowerPortTemplateList defines model for PaginatedPowerPortTemplateList.
type PaginatedPowerPortTemplateList struct {
	Count    *int                 `json:"count,omitempty"`
	Next     *string              `json:"next"`
	Previous *string              `json:"previous"`
	Results  *[]PowerPortTemplate `json:"results,omitempty"`
}

// PaginatedPrefixList defines model for PaginatedPrefixList.
type PaginatedPrefixList struct {
	Count    *int      `json:"count,omitempty"`
	Next     *string   `json:"next"`
	Previous *string   `json:"previous"`
	Results  *[]Prefix `json:"results,omitempty"`
}

// PaginatedProviderList defines model for PaginatedProviderList.
type PaginatedProviderList struct {
	Count    *int        `json:"count,omitempty"`
	Next     *string     `json:"next"`
	Previous *string     `json:"previous"`
	Results  *[]Provider `json:"results,omitempty"`
}

// PaginatedProviderNetworkList defines model for PaginatedProviderNetworkList.
type PaginatedProviderNetworkList struct {
	Count    *int               `json:"count,omitempty"`
	Next     *string            `json:"next"`
	Previous *string            `json:"previous"`
	Results  *[]ProviderNetwork `json:"results,omitempty"`
}

// PaginatedRIRList defines model for PaginatedRIRList.
type PaginatedRIRList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]RIR  `json:"results,omitempty"`
}

// PaginatedRackGroupList defines model for PaginatedRackGroupList.
type PaginatedRackGroupList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]RackGroup `json:"results,omitempty"`
}

// PaginatedRackList defines model for PaginatedRackList.
type PaginatedRackList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]Rack `json:"results,omitempty"`
}

// PaginatedRackReservationList defines model for PaginatedRackReservationList.
type PaginatedRackReservationList struct {
	Count    *int               `json:"count,omitempty"`
	Next     *string            `json:"next"`
	Previous *string            `json:"previous"`
	Results  *[]RackReservation `json:"results,omitempty"`
}

// PaginatedRackRoleList defines model for PaginatedRackRoleList.
type PaginatedRackRoleList struct {
	Count    *int        `json:"count,omitempty"`
	Next     *string     `json:"next"`
	Previous *string     `json:"previous"`
	Results  *[]RackRole `json:"results,omitempty"`
}

// PaginatedRackUnitList defines model for PaginatedRackUnitList.
type PaginatedRackUnitList struct {
	Count    *int        `json:"count,omitempty"`
	Next     *string     `json:"next"`
	Previous *string     `json:"previous"`
	Results  *[]RackUnit `json:"results,omitempty"`
}

// PaginatedRearPortList defines model for PaginatedRearPortList.
type PaginatedRearPortList struct {
	Count    *int        `json:"count,omitempty"`
	Next     *string     `json:"next"`
	Previous *string     `json:"previous"`
	Results  *[]RearPort `json:"results,omitempty"`
}

// PaginatedRearPortTemplateList defines model for PaginatedRearPortTemplateList.
type PaginatedRearPortTemplateList struct {
	Count    *int                `json:"count,omitempty"`
	Next     *string             `json:"next"`
	Previous *string             `json:"previous"`
	Results  *[]RearPortTemplate `json:"results,omitempty"`
}

// PaginatedRegionList defines model for PaginatedRegionList.
type PaginatedRegionList struct {
	Count    *int      `json:"count,omitempty"`
	Next     *string   `json:"next"`
	Previous *string   `json:"previous"`
	Results  *[]Region `json:"results,omitempty"`
}

// PaginatedRelationshipAssociationList defines model for PaginatedRelationshipAssociationList.
type PaginatedRelationshipAssociationList struct {
	Count    *int                       `json:"count,omitempty"`
	Next     *string                    `json:"next"`
	Previous *string                    `json:"previous"`
	Results  *[]RelationshipAssociation `json:"results,omitempty"`
}

// PaginatedRelationshipList defines model for PaginatedRelationshipList.
type PaginatedRelationshipList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]Relationship `json:"results,omitempty"`
}

// PaginatedRoleList defines model for PaginatedRoleList.
type PaginatedRoleList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]Role `json:"results,omitempty"`
}

// PaginatedRouteTargetList defines model for PaginatedRouteTargetList.
type PaginatedRouteTargetList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]RouteTarget `json:"results,omitempty"`
}

// PaginatedScheduledJobList defines model for PaginatedScheduledJobList.
type PaginatedScheduledJobList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]ScheduledJob `json:"results,omitempty"`
}

// PaginatedSecretList defines model for PaginatedSecretList.
type PaginatedSecretList struct {
	Count    *int      `json:"count,omitempty"`
	Next     *string   `json:"next"`
	Previous *string   `json:"previous"`
	Results  *[]Secret `json:"results,omitempty"`
}

// PaginatedSecretsGroupAssociationList defines model for PaginatedSecretsGroupAssociationList.
type PaginatedSecretsGroupAssociationList struct {
	Count    *int                       `json:"count,omitempty"`
	Next     *string                    `json:"next"`
	Previous *string                    `json:"previous"`
	Results  *[]SecretsGroupAssociation `json:"results,omitempty"`
}

// PaginatedSecretsGroupList defines model for PaginatedSecretsGroupList.
type PaginatedSecretsGroupList struct {
	Count    *int            `json:"count,omitempty"`
	Next     *string         `json:"next"`
	Previous *string         `json:"previous"`
	Results  *[]SecretsGroup `json:"results,omitempty"`
}

// PaginatedServiceList defines model for PaginatedServiceList.
type PaginatedServiceList struct {
	Count    *int       `json:"count,omitempty"`
	Next     *string    `json:"next"`
	Previous *string    `json:"previous"`
	Results  *[]Service `json:"results,omitempty"`
}

// PaginatedSiteList defines model for PaginatedSiteList.
type PaginatedSiteList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]Site `json:"results,omitempty"`
}

// PaginatedStatusList defines model for PaginatedStatusList.
type PaginatedStatusList struct {
	Count    *int      `json:"count,omitempty"`
	Next     *string   `json:"next"`
	Previous *string   `json:"previous"`
	Results  *[]Status `json:"results,omitempty"`
}

// PaginatedTagSerializerVersion13List defines model for PaginatedTagSerializerVersion13List.
type PaginatedTagSerializerVersion13List struct {
	Count    *int                      `json:"count,omitempty"`
	Next     *string                   `json:"next"`
	Previous *string                   `json:"previous"`
	Results  *[]TagSerializerVersion13 `json:"results,omitempty"`
}

// PaginatedTenantGroupList defines model for PaginatedTenantGroupList.
type PaginatedTenantGroupList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]TenantGroup `json:"results,omitempty"`
}

// PaginatedTenantList defines model for PaginatedTenantList.
type PaginatedTenantList struct {
	Count    *int      `json:"count,omitempty"`
	Next     *string   `json:"next"`
	Previous *string   `json:"previous"`
	Results  *[]Tenant `json:"results,omitempty"`
}

// PaginatedTokenList defines model for PaginatedTokenList.
type PaginatedTokenList struct {
	Count    *int     `json:"count,omitempty"`
	Next     *string  `json:"next"`
	Previous *string  `json:"previous"`
	Results  *[]Token `json:"results,omitempty"`
}

// PaginatedUserList defines model for PaginatedUserList.
type PaginatedUserList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]User `json:"results,omitempty"`
}

// PaginatedVLANGroupList defines model for PaginatedVLANGroupList.
type PaginatedVLANGroupList struct {
	Count    *int         `json:"count,omitempty"`
	Next     *string      `json:"next"`
	Previous *string      `json:"previous"`
	Results  *[]VLANGroup `json:"results,omitempty"`
}

// PaginatedVLANList defines model for PaginatedVLANList.
type PaginatedVLANList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]VLAN `json:"results,omitempty"`
}

// PaginatedVMInterfaceList defines model for PaginatedVMInterfaceList.
type PaginatedVMInterfaceList struct {
	Count    *int           `json:"count,omitempty"`
	Next     *string        `json:"next"`
	Previous *string        `json:"previous"`
	Results  *[]VMInterface `json:"results,omitempty"`
}

// PaginatedVRFList defines model for PaginatedVRFList.
type PaginatedVRFList struct {
	Count    *int    `json:"count,omitempty"`
	Next     *string `json:"next"`
	Previous *string `json:"previous"`
	Results  *[]VRF  `json:"results,omitempty"`
}

// PaginatedVirtualChassisList defines model for PaginatedVirtualChassisList.
type PaginatedVirtualChassisList struct {
	Count    *int              `json:"count,omitempty"`
	Next     *string           `json:"next"`
	Previous *string           `json:"previous"`
	Results  *[]VirtualChassis `json:"results,omitempty"`
}

// PaginatedVirtualMachineWithConfigContextList defines model for PaginatedVirtualMachineWithConfigContextList.
type PaginatedVirtualMachineWithConfigContextList struct {
	Count    *int                               `json:"count,omitempty"`
	Next     *string                            `json:"next"`
	Previous *string                            `json:"previous"`
	Results  *[]VirtualMachineWithConfigContext `json:"results,omitempty"`
}

// PaginatedWebhookList defines model for PaginatedWebhookList.
type PaginatedWebhookList struct {
	Count    *int       `json:"count,omitempty"`
	Next     *string    `json:"next"`
	Previous *string    `json:"previous"`
	Results  *[]Webhook `json:"results,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedCircuitType struct {
	CircuitCount *int                             `json:"circuit_count,omitempty"`
	Created      *openapi_types.Date              `json:"created,omitempty"`
	CustomFields *PatchedCircuitType_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                          `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedCircuitType_CustomFields defines model for PatchedCircuitType.CustomFields.
type PatchedCircuitType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedClusterGroup struct {
	ClusterCount *int                              `json:"cluster_count,omitempty"`
	Created      *openapi_types.Date               `json:"created,omitempty"`
	CustomFields *PatchedClusterGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                           `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedClusterGroup_CustomFields defines model for PatchedClusterGroup.CustomFields.
type PatchedClusterGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedClusterType struct {
	ClusterCount *int                             `json:"cluster_count,omitempty"`
	Created      *openapi_types.Date              `json:"created,omitempty"`
	CustomFields *PatchedClusterType_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                          `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedClusterType_CustomFields defines model for PatchedClusterType.CustomFields.
type PatchedClusterType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedComputedField struct {
	ContentType *string `json:"content_type,omitempty"`
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Fallback value (if any) to be output for the field in the case of a template rendering error.
	FallbackValue *string             `json:"fallback_value,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`

	// Name of the field as displayed to users
	Label *string `json:"label,omitempty"`

	// Internal field name
	Slug *string `json:"slug,omitempty"`

	// Jinja2 template code for field value
	Template *string `json:"template,omitempty"`
	Url      *string `json:"url,omitempty"`
	Weight   *int    `json:"weight,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedConfigContextSchema struct {
	Created *openapi_types.Date `json:"created,omitempty"`

	// A JSON Schema document which is used to validate a config context object.
	DataSchema  *PatchedConfigContextSchema_DataSchema `json:"data_schema,omitempty"`
	Description *string                                `json:"description,omitempty"`

	// Human friendly display value
	Display          *string                           `json:"display,omitempty"`
	Id               *openapi_types.UUID               `json:"id,omitempty"`
	LastUpdated      *time.Time                        `json:"last_updated,omitempty"`
	Name             *string                           `json:"name,omitempty"`
	Owner            *PatchedConfigContextSchema_Owner `json:"owner"`
	OwnerContentType *string                           `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID               `json:"owner_object_id"`
	Slug             *string                           `json:"slug,omitempty"`
	Url              *string                           `json:"url,omitempty"`
}

// A JSON Schema document which is used to validate a config context object.
type PatchedConfigContextSchema_DataSchema struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedConfigContextSchema_Owner defines model for PatchedConfigContextSchema.Owner.
type PatchedConfigContextSchema_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedCustomLink struct {
	// The class of the first link in a group will be used for the dropdown button
	ButtonClass *struct {
		// Embedded struct due to allOf(#/components/schemas/ButtonClassEnum)
		ButtonClassEnum `yaml:",inline"`
	} `json:"button_class,omitempty"`
	ContentType *string `json:"content_type,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Links with the same group will appear as a dropdown menu
	GroupName *string             `json:"group_name,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Name      *string             `json:"name,omitempty"`

	// Force link to open in a new window
	NewWindow *bool `json:"new_window,omitempty"`

	// Jinja2 template code for link URL. Reference the object as <code>{{ obj }}</code> such as <code>{{ obj.platform.slug }}</code>.
	TargetUrl *string `json:"target_url,omitempty"`

	// Jinja2 template code for link text. Reference the object as <code>{{ obj }}</code> such as <code>{{ obj.platform.slug }}</code>. Links which render as empty text will not be displayed.
	Text   *string `json:"text,omitempty"`
	Url    *string `json:"url,omitempty"`
	Weight *int    `json:"weight,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedDeviceRole struct {
	Color        *string                         `json:"color,omitempty"`
	Created      *openapi_types.Date             `json:"created,omitempty"`
	CustomFields *PatchedDeviceRole_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                         `json:"description,omitempty"`
	DeviceCount  *int                            `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string             `json:"display,omitempty"`
	Id                  *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated         *time.Time          `json:"last_updated,omitempty"`
	Name                *string             `json:"name,omitempty"`
	Slug                *string             `json:"slug,omitempty"`
	Url                 *string             `json:"url,omitempty"`
	VirtualmachineCount *int                `json:"virtualmachine_count,omitempty"`

	// Virtual machines may be assigned to this role
	VmRole *bool `json:"vm_role,omitempty"`
}

// PatchedDeviceRole_CustomFields defines model for PatchedDeviceRole.CustomFields.
type PatchedDeviceRole_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedDynamicGroup struct {
	ContentType *string `json:"content_type,omitempty"`
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// A JSON-encoded dictionary of filter parameters for group membership
	Filter *PatchedDynamicGroup_Filter `json:"filter,omitempty"`
	Id     *openapi_types.UUID         `json:"id,omitempty"`

	// Dynamic Group name
	Name *string `json:"name,omitempty"`

	// Unique slug
	Slug *string `json:"slug,omitempty"`
	Url  *string `json:"url,omitempty"`
}

// A JSON-encoded dictionary of filter parameters for group membership
type PatchedDynamicGroup_Filter struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedExportTemplate struct {
	ContentType *string `json:"content_type,omitempty"`
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Extension to append to the rendered filename
	FileExtension *string             `json:"file_extension,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`

	// Defaults to <code>text/plain</code>
	MimeType         *string                      `json:"mime_type,omitempty"`
	Name             *string                      `json:"name,omitempty"`
	Owner            *PatchedExportTemplate_Owner `json:"owner"`
	OwnerContentType *string                      `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID          `json:"owner_object_id"`

	// The list of objects being exported is passed as a context variable named <code>queryset</code>.
	TemplateCode *string `json:"template_code,omitempty"`
	Url          *string `json:"url,omitempty"`
}

// PatchedExportTemplate_Owner defines model for PatchedExportTemplate.Owner.
type PatchedExportTemplate_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedGraphQLQuery struct {
	// Human friendly display value
	Display   *string                        `json:"display,omitempty"`
	Id        *openapi_types.UUID            `json:"id,omitempty"`
	Name      *string                        `json:"name,omitempty"`
	Query     *string                        `json:"query,omitempty"`
	Slug      *string                        `json:"slug,omitempty"`
	Url       *string                        `json:"url,omitempty"`
	Variables *PatchedGraphQLQuery_Variables `json:"variables"`
}

// PatchedGraphQLQuery_Variables defines model for PatchedGraphQLQuery.Variables.
type PatchedGraphQLQuery_Variables struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedGroup struct {
	// Human friendly display value
	Display   *string `json:"display,omitempty"`
	Id        *int    `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	Url       *string `json:"url,omitempty"`
	UserCount *int    `json:"user_count,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedImageAttachment struct {
	ContentType *string    `json:"content_type,omitempty"`
	Created     *time.Time `json:"created,omitempty"`

	// Human friendly display value
	Display     *string                        `json:"display,omitempty"`
	Id          *openapi_types.UUID            `json:"id,omitempty"`
	Image       *string                        `json:"image,omitempty"`
	ImageHeight *int                           `json:"image_height,omitempty"`
	ImageWidth  *int                           `json:"image_width,omitempty"`
	Name        *string                        `json:"name,omitempty"`
	ObjectId    *openapi_types.UUID            `json:"object_id,omitempty"`
	Parent      *PatchedImageAttachment_Parent `json:"parent,omitempty"`
	Url         *string                        `json:"url,omitempty"`
}

// PatchedImageAttachment_Parent defines model for PatchedImageAttachment.Parent.
type PatchedImageAttachment_Parent struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedJob struct {
	// Whether the job requires approval from another user before running
	ApprovalRequired *bool `json:"approval_required,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	ApprovalRequiredOverride *bool `json:"approval_required_override,omitempty"`

	// Whether the job defaults to committing changes when run, or defaults to a dry-run
	CommitDefault *bool `json:"commit_default,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	CommitDefaultOverride *bool                    `json:"commit_default_override,omitempty"`
	Created               *openapi_types.Date      `json:"created,omitempty"`
	CustomFields          *PatchedJob_CustomFields `json:"custom_fields,omitempty"`

	// Markdown formatting is supported
	Description *string `json:"description,omitempty"`

	// If set, the configured description will remain even if the underlying Job source code changes
	DescriptionOverride *bool `json:"description_override,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Whether this job can be executed by users
	Enabled *bool `json:"enabled,omitempty"`

	// Human-readable grouping that this job belongs to
	Grouping *string `json:"grouping,omitempty"`

	// If set, the configured grouping will remain even if the underlying Job source code changes
	GroupingOverride *bool `json:"grouping_override,omitempty"`

	// Whether the job defaults to not being shown in the UI
	Hidden *bool `json:"hidden,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	HiddenOverride *bool               `json:"hidden_override,omitempty"`
	Id             *openapi_types.UUID `json:"id,omitempty"`

	// Whether the Python module and class providing this job are presently installed and loadable
	Installed *bool `json:"installed,omitempty"`

	// Name of the Python class providing this job
	JobClassName *string    `json:"job_class_name,omitempty"`
	LastUpdated  *time.Time `json:"last_updated,omitempty"`

	// Dotted name of the Python module providing this job
	ModuleName *string `json:"module_name,omitempty"`

	// Human-readable name of this job
	Name *string `json:"name,omitempty"`

	// If set, the configured name will remain even if the underlying Job source code changes
	NameOverride *bool `json:"name_override,omitempty"`

	// Whether the job is prevented from making lasting changes to the database
	ReadOnly *bool `json:"read_only,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	ReadOnlyOverride *bool   `json:"read_only_override,omitempty"`
	Slug             *string `json:"slug,omitempty"`

	// Maximum runtime in seconds before the job will receive a <code>SoftTimeLimitExceeded</code> exception.<br>Set to 0 to use Nautobot system default
	SoftTimeLimit *float64 `json:"soft_time_limit,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	SoftTimeLimitOverride *bool `json:"soft_time_limit_override,omitempty"`

	// Source of the Python code for this job - local, Git repository, or plugins
	Source *string               `json:"source,omitempty"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`

	// Maximum runtime in seconds before the job will be forcibly terminated.<br>Set to 0 to use Nautobot system default
	TimeLimit *float64 `json:"time_limit,omitempty"`

	// If set, the configured value will remain even if the underlying Job source code changes
	TimeLimitOverride *bool   `json:"time_limit_override,omitempty"`
	Url               *string `json:"url,omitempty"`
}

// PatchedJob_CustomFields defines model for PatchedJob.CustomFields.
type PatchedJob_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedJobResult defines model for PatchedJobResult.
type PatchedJobResult struct {
	Completed *time.Time             `json:"completed"`
	Created   *time.Time             `json:"created,omitempty"`
	Data      *PatchedJobResult_Data `json:"data"`
	Id        *openapi_types.UUID    `json:"id,omitempty"`
	JobId     *openapi_types.UUID    `json:"job_id,omitempty"`
	JobModel  *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedJob)
		NestedJob `yaml:",inline"`
	} `json:"job_model,omitempty"`
	Name     *string `json:"name,omitempty"`
	ObjType  *string `json:"obj_type,omitempty"`
	Schedule *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedScheduledJob)
		NestedScheduledJob `yaml:",inline"`
	} `json:"schedule,omitempty"`
	Status *struct {
		// Embedded struct due to allOf(#/components/schemas/JobResultStatusEnum)
		JobResultStatusEnum `yaml:",inline"`
	} `json:"status,omitempty"`
	Url  *string `json:"url,omitempty"`
	User *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedUser)
		NestedUser `yaml:",inline"`
	} `json:"user,omitempty"`
}

// PatchedJobResult_Data defines model for PatchedJobResult.Data.
type PatchedJobResult_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedManufacturer struct {
	Created         *openapi_types.Date               `json:"created,omitempty"`
	CustomFields    *PatchedManufacturer_CustomFields `json:"custom_fields,omitempty"`
	Description     *string                           `json:"description,omitempty"`
	DevicetypeCount *int                              `json:"devicetype_count,omitempty"`

	// Human friendly display value
	Display            *string             `json:"display,omitempty"`
	Id                 *openapi_types.UUID `json:"id,omitempty"`
	InventoryitemCount *int                `json:"inventoryitem_count,omitempty"`
	LastUpdated        *time.Time          `json:"last_updated,omitempty"`
	Name               *string             `json:"name,omitempty"`
	PlatformCount      *int                `json:"platform_count,omitempty"`
	Slug               *string             `json:"slug,omitempty"`
	Url                *string             `json:"url,omitempty"`
}

// PatchedManufacturer_CustomFields defines model for PatchedManufacturer.CustomFields.
type PatchedManufacturer_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedProvider struct {
	Account      *string `json:"account,omitempty"`
	AdminContact *string `json:"admin_contact,omitempty"`

	// 32-bit autonomous system number
	Asn          *int64                        `json:"asn"`
	CircuitCount *int                          `json:"circuit_count,omitempty"`
	Comments     *string                       `json:"comments,omitempty"`
	Created      *openapi_types.Date           `json:"created,omitempty"`
	CustomFields *PatchedProvider_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Name        *string               `json:"name,omitempty"`
	NocContact  *string               `json:"noc_contact,omitempty"`
	PortalUrl   *string               `json:"portal_url,omitempty"`
	Slug        *string               `json:"slug,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// PatchedProvider_CustomFields defines model for PatchedProvider.CustomFields.
type PatchedProvider_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedRIR struct {
	AggregateCount *int                     `json:"aggregate_count,omitempty"`
	Created        *openapi_types.Date      `json:"created,omitempty"`
	CustomFields   *PatchedRIR_CustomFields `json:"custom_fields,omitempty"`
	Description    *string                  `json:"description,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// IP space managed by this RIR is considered private
	IsPrivate   *bool      `json:"is_private,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Slug        *string    `json:"slug,omitempty"`
	Url         *string    `json:"url,omitempty"`
}

// PatchedRIR_CustomFields defines model for PatchedRIR.CustomFields.
type PatchedRIR_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedRackRole struct {
	Color        *string                       `json:"color,omitempty"`
	Created      *openapi_types.Date           `json:"created,omitempty"`
	CustomFields *PatchedRackRole_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                       `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	RackCount   *int                `json:"rack_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedRackRole_CustomFields defines model for PatchedRackRole.CustomFields.
type PatchedRackRole_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedRelationship defines model for PatchedRelationship.
type PatchedRelationship struct {
	Description *string `json:"description,omitempty"`

	// Queryset filter matching the applicable destination objects of the selected type
	DestinationFilter *PatchedRelationship_DestinationFilter `json:"destination_filter"`

	// Hide this relationship on the destination object.
	DestinationHidden *bool `json:"destination_hidden,omitempty"`

	// Label for related source objects, as displayed on the destination object.
	DestinationLabel *string             `json:"destination_label,omitempty"`
	DestinationType  *string             `json:"destination_type,omitempty"`
	Id               *openapi_types.UUID `json:"id,omitempty"`

	// Internal relationship name
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`

	// Queryset filter matching the applicable source objects of the selected type
	SourceFilter *PatchedRelationship_SourceFilter `json:"source_filter"`

	// Hide this relationship on the source object.
	SourceHidden *bool `json:"source_hidden,omitempty"`

	// Label for related destination objects, as displayed on the source object.
	SourceLabel *string `json:"source_label,omitempty"`
	SourceType  *string `json:"source_type,omitempty"`

	// Cardinality of this relationship
	Type *struct {
		// Embedded struct due to allOf(#/components/schemas/RelationshipTypeChoices)
		RelationshipTypeChoices `yaml:",inline"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// Queryset filter matching the applicable destination objects of the selected type
type PatchedRelationship_DestinationFilter struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Queryset filter matching the applicable source objects of the selected type
type PatchedRelationship_SourceFilter struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedRole struct {
	Created      *openapi_types.Date       `json:"created,omitempty"`
	CustomFields *PatchedRole_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                   `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	PrefixCount *int                `json:"prefix_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
	VlanCount   *int                `json:"vlan_count,omitempty"`
	Weight      *int                `json:"weight,omitempty"`
}

// PatchedRole_CustomFields defines model for PatchedRole.CustomFields.
type PatchedRole_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Serializer for `Secret` objects.
type PatchedSecret struct {
	Created      *openapi_types.Date         `json:"created,omitempty"`
	CustomFields *PatchedSecret_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                     `json:"description,omitempty"`

	// Human friendly display value
	Display     *string                   `json:"display,omitempty"`
	Id          *openapi_types.UUID       `json:"id,omitempty"`
	LastUpdated *time.Time                `json:"last_updated,omitempty"`
	Name        *string                   `json:"name,omitempty"`
	Parameters  *PatchedSecret_Parameters `json:"parameters,omitempty"`
	Provider    *string                   `json:"provider,omitempty"`
	Slug        *string                   `json:"slug,omitempty"`
	Tags        *[]TagSerializerField     `json:"tags,omitempty"`
	Url         *string                   `json:"url,omitempty"`
}

// PatchedSecret_CustomFields defines model for PatchedSecret.CustomFields.
type PatchedSecret_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedSecret_Parameters defines model for PatchedSecret.Parameters.
type PatchedSecret_Parameters struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Serializer for `SecretsGroup` objects.
type PatchedSecretsGroup struct {
	Created      *openapi_types.Date               `json:"created,omitempty"`
	CustomFields *PatchedSecretsGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                           `json:"description,omitempty"`

	// Human friendly display value
	Display     *string                          `json:"display,omitempty"`
	Id          *openapi_types.UUID              `json:"id,omitempty"`
	LastUpdated *time.Time                       `json:"last_updated,omitempty"`
	Name        *string                          `json:"name,omitempty"`
	Secrets     *[]NestedSecretsGroupAssociation `json:"secrets,omitempty"`
	Slug        *string                          `json:"slug,omitempty"`
	Url         *string                          `json:"url,omitempty"`
}

// PatchedSecretsGroup_CustomFields defines model for PatchedSecretsGroup.CustomFields.
type PatchedSecretsGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Serializer for `Status` objects.
type PatchedStatus struct {
	Color        *string                     `json:"color,omitempty"`
	ContentTypes *[]string                   `json:"content_types,omitempty"`
	Created      *openapi_types.Date         `json:"created,omitempty"`
	CustomFields *PatchedStatus_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedStatus_CustomFields defines model for PatchedStatus.CustomFields.
type PatchedStatus_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedTagSerializerVersion13 struct {
	Color        *string                                     `json:"color,omitempty"`
	ContentTypes *[]string                                   `json:"content_types,omitempty"`
	Created      *openapi_types.Date                         `json:"created,omitempty"`
	CustomFields *PatchedTagSerializerVersion13_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                                     `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	TaggedItems *int                `json:"tagged_items,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedTagSerializerVersion13_CustomFields defines model for PatchedTagSerializerVersion13.CustomFields.
type PatchedTagSerializerVersion13_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedToken struct {
	Created     *time.Time `json:"created,omitempty"`
	Description *string    `json:"description,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Expires *time.Time          `json:"expires"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Key     *string             `json:"key,omitempty"`
	Url     *string             `json:"url,omitempty"`

	// Permit create/update/delete operations using this key
	WriteEnabled *bool `json:"write_enabled,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWebhook struct {
	// User-supplied HTTP headers to be sent with the request in addition to the HTTP content type. Headers should be defined in the format <code>Name: Value</code>. Jinja2 template processing is support with the same context as the request body (below).
	AdditionalHeaders *string `json:"additional_headers,omitempty"`

	// Jinja2 template for a custom request body. If blank, a JSON object representing the change will be included. Available context data includes: <code>event</code>, <code>model</code>, <code>timestamp</code>, <code>username</code>, <code>request_id</code>, and <code>data</code>.
	BodyTemplate *string `json:"body_template,omitempty"`

	// The specific CA certificate file to use for SSL verification. Leave blank to use the system defaults.
	CaFilePath   *string   `json:"ca_file_path"`
	ContentTypes *[]string `json:"content_types,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// The complete list of official content types is available <a href="https://www.iana.org/assignments/media-types/media-types.xhtml">here</a>.
	HttpContentType *string             `json:"http_content_type,omitempty"`
	HttpMethod      *HttpMethodEnum     `json:"http_method,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	Name            *string             `json:"name,omitempty"`

	// A POST will be sent to this URL when the webhook is called.
	PayloadUrl *string `json:"payload_url,omitempty"`

	// When provided, the request will include a 'X-Hook-Signature' header containing a HMAC hex digest of the payload body using the secret as the key. The secret is not transmitted in the request.
	Secret *string `json:"secret,omitempty"`

	// Enable SSL certificate verification. Disable with caution!
	SslVerification *bool `json:"ssl_verification,omitempty"`

	// Call this webhook when a matching object is created.
	TypeCreate *bool `json:"type_create,omitempty"`

	// Call this webhook when a matching object is deleted.
	TypeDelete *bool `json:"type_delete,omitempty"`

	// Call this webhook when a matching object is updated.
	TypeUpdate *bool   `json:"type_update,omitempty"`
	Url        *string `json:"url,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableAggregate struct {
	ComputedFields *PatchedWritableAggregate_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                      `json:"created,omitempty"`
	CustomFields   *PatchedWritableAggregate_CustomFields   `json:"custom_fields,omitempty"`
	DateAdded      *openapi_types.Date                      `json:"date_added"`
	Description    *string                                  `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Family  *struct {
		// Embedded struct due to allOf(#/components/schemas/FamilyEnum)
		FamilyEnum `yaml:",inline"`
	} `json:"family,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Prefix      *string               `json:"prefix,omitempty"`
	Rir         *openapi_types.UUID   `json:"rir,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Tenant      *openapi_types.UUID   `json:"tenant"`
	Url         *string               `json:"url,omitempty"`
}

// PatchedWritableAggregate_ComputedFields defines model for PatchedWritableAggregate.ComputedFields.
type PatchedWritableAggregate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableAggregate_CustomFields defines model for PatchedWritableAggregate.CustomFields.
type PatchedWritableAggregate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableCable struct {
	Color          *string                              `json:"color,omitempty"`
	ComputedFields *PatchedWritableCable_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableCable_CustomFields   `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display          *string                            `json:"display,omitempty"`
	Id               *openapi_types.UUID                `json:"id,omitempty"`
	Label            *string                            `json:"label,omitempty"`
	Length           *int                               `json:"length"`
	LengthUnit       *interface{}                       `json:"length_unit,omitempty"`
	Status           *WritableCableStatusEnum           `json:"status,omitempty"`
	Tags             *[]TagSerializerField              `json:"tags,omitempty"`
	TerminationA     *PatchedWritableCable_TerminationA `json:"termination_a"`
	TerminationAId   *openapi_types.UUID                `json:"termination_a_id,omitempty"`
	TerminationAType *string                            `json:"termination_a_type,omitempty"`
	TerminationB     *PatchedWritableCable_TerminationB `json:"termination_b"`
	TerminationBId   *openapi_types.UUID                `json:"termination_b_id,omitempty"`
	TerminationBType *string                            `json:"termination_b_type,omitempty"`
	Type             *interface{}                       `json:"type,omitempty"`
	Url              *string                            `json:"url,omitempty"`
}

// PatchedWritableCable_ComputedFields defines model for PatchedWritableCable.ComputedFields.
type PatchedWritableCable_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableCable_CustomFields defines model for PatchedWritableCable.CustomFields.
type PatchedWritableCable_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableCable_TerminationA defines model for PatchedWritableCable.TerminationA.
type PatchedWritableCable_TerminationA struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableCable_TerminationB defines model for PatchedWritableCable.TerminationB.
type PatchedWritableCable_TerminationB struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableCircuit struct {
	Cid            *string                                `json:"cid,omitempty"`
	Comments       *string                                `json:"comments,omitempty"`
	CommitRate     *int                                   `json:"commit_rate"`
	ComputedFields *PatchedWritableCircuit_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                    `json:"created,omitempty"`
	CustomFields   *PatchedWritableCircuit_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                `json:"description,omitempty"`

	// Human friendly display value
	Display      *string                    `json:"display,omitempty"`
	Id           *openapi_types.UUID        `json:"id,omitempty"`
	InstallDate  *openapi_types.Date        `json:"install_date"`
	LastUpdated  *time.Time                 `json:"last_updated,omitempty"`
	Provider     *openapi_types.UUID        `json:"provider,omitempty"`
	Status       *WritableCircuitStatusEnum `json:"status,omitempty"`
	Tags         *[]TagSerializerField      `json:"tags,omitempty"`
	Tenant       *openapi_types.UUID        `json:"tenant"`
	TerminationA *struct {
		// Embedded struct due to allOf(#/components/schemas/CircuitCircuitTermination)
		CircuitCircuitTermination `yaml:",inline"`
	} `json:"termination_a,omitempty"`
	TerminationZ *struct {
		// Embedded struct due to allOf(#/components/schemas/CircuitCircuitTermination)
		CircuitCircuitTermination `yaml:",inline"`
	} `json:"termination_z,omitempty"`
	Type *openapi_types.UUID `json:"type,omitempty"`
	Url  *string             `json:"url,omitempty"`
}

// PatchedWritableCircuit_ComputedFields defines model for PatchedWritableCircuit.ComputedFields.
type PatchedWritableCircuit_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableCircuit_CustomFields defines model for PatchedWritableCircuit.CustomFields.
type PatchedWritableCircuit_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableCircuitTermination struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritableCircuitTermination_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                              `json:"cable_peer_type"`
	Circuit                    *openapi_types.UUID                                  `json:"circuit,omitempty"`
	ConnectedEndpoint          *PatchedWritableCircuitTermination_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                                `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                              `json:"connected_endpoint_type"`
	Description                *string                                              `json:"description,omitempty"`

	// Human friendly display value
	Display         *string             `json:"display,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	PortSpeed       *int                `json:"port_speed"`
	PpInfo          *string             `json:"pp_info,omitempty"`
	ProviderNetwork *openapi_types.UUID `json:"provider_network"`
	Site            *openapi_types.UUID `json:"site"`
	TermSide        *struct {
		// Embedded struct due to allOf(#/components/schemas/TermSideEnum)
		TermSideEnum `yaml:",inline"`
	} `json:"term_side,omitempty"`

	// Upstream speed, if different from port speed
	UpstreamSpeed *int    `json:"upstream_speed"`
	Url           *string `json:"url,omitempty"`
	XconnectId    *string `json:"xconnect_id,omitempty"`
}

// PatchedWritableCircuitTermination_CablePeer defines model for PatchedWritableCircuitTermination.CablePeer.
type PatchedWritableCircuitTermination_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableCircuitTermination_ConnectedEndpoint defines model for PatchedWritableCircuitTermination.ConnectedEndpoint.
type PatchedWritableCircuitTermination_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableCluster struct {
	Comments       *string                                `json:"comments,omitempty"`
	ComputedFields *PatchedWritableCluster_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                    `json:"created,omitempty"`
	CustomFields   *PatchedWritableCluster_CustomFields   `json:"custom_fields,omitempty"`
	DeviceCount    *int                                   `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string               `json:"display,omitempty"`
	Group               *openapi_types.UUID   `json:"group"`
	Id                  *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated         *time.Time            `json:"last_updated,omitempty"`
	Name                *string               `json:"name,omitempty"`
	Site                *openapi_types.UUID   `json:"site"`
	Tags                *[]TagSerializerField `json:"tags,omitempty"`
	Tenant              *openapi_types.UUID   `json:"tenant"`
	Type                *openapi_types.UUID   `json:"type,omitempty"`
	Url                 *string               `json:"url,omitempty"`
	VirtualmachineCount *int                  `json:"virtualmachine_count,omitempty"`
}

// PatchedWritableCluster_ComputedFields defines model for PatchedWritableCluster.ComputedFields.
type PatchedWritableCluster_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableCluster_CustomFields defines model for PatchedWritableCluster.CustomFields.
type PatchedWritableCluster_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableConfigContext struct {
	ClusterGroups *[]openapi_types.UUID              `json:"cluster_groups,omitempty"`
	Clusters      *[]openapi_types.UUID              `json:"clusters,omitempty"`
	Created       *openapi_types.Date                `json:"created,omitempty"`
	Data          *PatchedWritableConfigContext_Data `json:"data,omitempty"`
	Description   *string                            `json:"description,omitempty"`
	DeviceTypes   *[]openapi_types.UUID              `json:"device_types,omitempty"`

	// Human friendly display value
	Display          *string                             `json:"display,omitempty"`
	Id               *openapi_types.UUID                 `json:"id,omitempty"`
	IsActive         *bool                               `json:"is_active,omitempty"`
	LastUpdated      *time.Time                          `json:"last_updated,omitempty"`
	Name             *string                             `json:"name,omitempty"`
	Owner            *PatchedWritableConfigContext_Owner `json:"owner"`
	OwnerContentType *string                             `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID                 `json:"owner_object_id"`
	Platforms        *[]openapi_types.UUID               `json:"platforms,omitempty"`
	Regions          *[]openapi_types.UUID               `json:"regions,omitempty"`
	Roles            *[]openapi_types.UUID               `json:"roles,omitempty"`

	// Optional schema to validate the structure of the data
	Schema       *openapi_types.UUID   `json:"schema"`
	Sites        *[]openapi_types.UUID `json:"sites,omitempty"`
	Tags         *[]string             `json:"tags,omitempty"`
	TenantGroups *[]openapi_types.UUID `json:"tenant_groups,omitempty"`
	Tenants      *[]openapi_types.UUID `json:"tenants,omitempty"`
	Url          *string               `json:"url,omitempty"`
	Weight       *int                  `json:"weight,omitempty"`
}

// PatchedWritableConfigContext_Data defines model for PatchedWritableConfigContext.Data.
type PatchedWritableConfigContext_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConfigContext_Owner defines model for PatchedWritableConfigContext.Owner.
type PatchedWritableConfigContext_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableConsolePort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritableConsolePort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                       `json:"cable_peer_type"`
	ComputedFields             *PatchedWritableConsolePort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PatchedWritableConsolePort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                         `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                       `json:"connected_endpoint_type"`
	CustomFields               *PatchedWritableConsolePort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                       `json:"description,omitempty"`
	Device                     *openapi_types.UUID                           `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  *string               `json:"name,omitempty"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// PatchedWritableConsolePort_CablePeer defines model for PatchedWritableConsolePort.CablePeer.
type PatchedWritableConsolePort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsolePort_ComputedFields defines model for PatchedWritableConsolePort.ComputedFields.
type PatchedWritableConsolePort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsolePort_ConnectedEndpoint defines model for PatchedWritableConsolePort.ConnectedEndpoint.
type PatchedWritableConsolePort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsolePort_CustomFields defines model for PatchedWritableConsolePort.CustomFields.
type PatchedWritableConsolePort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableConsolePortTemplate struct {
	ComputedFields *PatchedWritableConsolePortTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableConsolePortTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                            `json:"description,omitempty"`
	DeviceType     *openapi_types.UUID                                `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string      `json:"label,omitempty"`
	Name  *string      `json:"name,omitempty"`
	Type  *interface{} `json:"type,omitempty"`
	Url   *string      `json:"url,omitempty"`
}

// PatchedWritableConsolePortTemplate_ComputedFields defines model for PatchedWritableConsolePortTemplate.ComputedFields.
type PatchedWritableConsolePortTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsolePortTemplate_CustomFields defines model for PatchedWritableConsolePortTemplate.CustomFields.
type PatchedWritableConsolePortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableConsoleServerPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritableConsoleServerPort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                             `json:"cable_peer_type"`
	ComputedFields             *PatchedWritableConsoleServerPort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PatchedWritableConsoleServerPort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                               `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                             `json:"connected_endpoint_type"`
	CustomFields               *PatchedWritableConsoleServerPort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                             `json:"description,omitempty"`
	Device                     *openapi_types.UUID                                 `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  *string               `json:"name,omitempty"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// PatchedWritableConsoleServerPort_CablePeer defines model for PatchedWritableConsoleServerPort.CablePeer.
type PatchedWritableConsoleServerPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsoleServerPort_ComputedFields defines model for PatchedWritableConsoleServerPort.ComputedFields.
type PatchedWritableConsoleServerPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsoleServerPort_ConnectedEndpoint defines model for PatchedWritableConsoleServerPort.ConnectedEndpoint.
type PatchedWritableConsoleServerPort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableConsoleServerPort_CustomFields defines model for PatchedWritableConsoleServerPort.CustomFields.
type PatchedWritableConsoleServerPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableConsoleServerPortTemplate struct {
	CustomFields *PatchedWritableConsoleServerPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                                                `json:"description,omitempty"`
	DeviceType   *openapi_types.UUID                                    `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string      `json:"label,omitempty"`
	Name  *string      `json:"name,omitempty"`
	Type  *interface{} `json:"type,omitempty"`
	Url   *string      `json:"url,omitempty"`
}

// PatchedWritableConsoleServerPortTemplate_CustomFields defines model for PatchedWritableConsoleServerPortTemplate.CustomFields.
type PatchedWritableConsoleServerPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableCustomField struct {
	ContentTypes *[]string `json:"content_types,omitempty"`

	// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. "Foo").
	Default *PatchedWritableCustomField_Default `json:"default"`

	// A helpful description for this field.
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Loose matches any instance of a given string; Exact matches the entire field.
	FilterLogic *struct {
		// Embedded struct due to allOf(#/components/schemas/FilterLogicEnum)
		FilterLogicEnum `yaml:",inline"`
	} `json:"filter_logic,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Name of the field as displayed to users (if not provided, the field's slug will be used.)
	Label *string `json:"label,omitempty"`

	// URL-friendly unique shorthand.
	Name *string `json:"name,omitempty"`

	// If true, this field is required when creating new objects or editing an existing object.
	Required *bool `json:"required,omitempty"`

	// The type of value(s) allowed for this field.
	Type *struct {
		// Embedded struct due to allOf(#/components/schemas/CustomFieldTypeChoices)
		CustomFieldTypeChoices `yaml:",inline"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`

	// Maximum allowed value (for numeric fields).
	ValidationMaximum *int64 `json:"validation_maximum"`

	// Minimum allowed value (for numeric fields).
	ValidationMinimum *int64 `json:"validation_minimum"`

	// Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters. Regular expression on select and multi-select will be applied at <code>Custom Field Choices</code> definition.
	ValidationRegex *string `json:"validation_regex,omitempty"`

	// Fields with higher weights appear lower in a form.
	Weight *int `json:"weight,omitempty"`
}

// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. "Foo").
type PatchedWritableCustomField_Default struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableCustomFieldChoice struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Field   *openapi_types.UUID `json:"field,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Url     *string             `json:"url,omitempty"`
	Value   *string             `json:"value,omitempty"`

	// Higher weights appear later in the list
	Weight *int `json:"weight,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableDeviceBay struct {
	ComputedFields *PatchedWritableDeviceBay_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableDeviceBay_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                  `json:"description,omitempty"`
	Device         *openapi_types.UUID                      `json:"device,omitempty"`

	// Human friendly display value
	Display         *string             `json:"display,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	InstalledDevice *openapi_types.UUID `json:"installed_device"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  *string               `json:"name,omitempty"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`
	Url   *string               `json:"url,omitempty"`
}

// PatchedWritableDeviceBay_ComputedFields defines model for PatchedWritableDeviceBay.ComputedFields.
type PatchedWritableDeviceBay_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableDeviceBay_CustomFields defines model for PatchedWritableDeviceBay.CustomFields.
type PatchedWritableDeviceBay_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableDeviceBayTemplate struct {
	ComputedFields *PatchedWritableDeviceBayTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableDeviceBayTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                          `json:"description,omitempty"`
	DeviceType     *openapi_types.UUID                              `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  *string `json:"name,omitempty"`
	Url   *string `json:"url,omitempty"`
}

// PatchedWritableDeviceBayTemplate_ComputedFields defines model for PatchedWritableDeviceBayTemplate.ComputedFields.
type PatchedWritableDeviceBayTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableDeviceBayTemplate_CustomFields defines model for PatchedWritableDeviceBayTemplate.CustomFields.
type PatchedWritableDeviceBayTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableDeviceType struct {
	Comments       *string                                   `json:"comments,omitempty"`
	ComputedFields *PatchedWritableDeviceType_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                       `json:"created,omitempty"`
	CustomFields   *PatchedWritableDeviceType_CustomFields   `json:"custom_fields,omitempty"`
	DeviceCount    *int                                      `json:"device_count,omitempty"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	FrontImage *string             `json:"front_image,omitempty"`
	Id         *openapi_types.UUID `json:"id,omitempty"`

	// Device consumes both front and rear rack faces
	IsFullDepth  *bool               `json:"is_full_depth,omitempty"`
	LastUpdated  *time.Time          `json:"last_updated,omitempty"`
	Manufacturer *openapi_types.UUID `json:"manufacturer,omitempty"`
	Model        *string             `json:"model,omitempty"`

	// Discrete part number (optional)
	PartNumber *string `json:"part_number,omitempty"`
	RearImage  *string `json:"rear_image,omitempty"`
	Slug       *string `json:"slug,omitempty"`

	// Parent devices house child devices in device bays. Leave blank if this device type is neither a parent nor a child.
	SubdeviceRole *interface{}          `json:"subdevice_role,omitempty"`
	Tags          *[]TagSerializerField `json:"tags,omitempty"`
	UHeight       *int                  `json:"u_height,omitempty"`
	Url           *string               `json:"url,omitempty"`
}

// PatchedWritableDeviceType_ComputedFields defines model for PatchedWritableDeviceType.ComputedFields.
type PatchedWritableDeviceType_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableDeviceType_CustomFields defines model for PatchedWritableDeviceType.CustomFields.
type PatchedWritableDeviceType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableDeviceWithConfigContext struct {
	// A unique tag used to identify this device
	AssetTag       *string                                                `json:"asset_tag"`
	Cluster        *openapi_types.UUID                                    `json:"cluster"`
	Comments       *string                                                `json:"comments,omitempty"`
	ComputedFields *PatchedWritableDeviceWithConfigContext_ComputedFields `json:"computed_fields,omitempty"`
	ConfigContext  *PatchedWritableDeviceWithConfigContext_ConfigContext  `json:"config_context,omitempty"`
	Created        *openapi_types.Date                                    `json:"created,omitempty"`
	CustomFields   *PatchedWritableDeviceWithConfigContext_CustomFields   `json:"custom_fields,omitempty"`
	DeviceRole     *openapi_types.UUID                                    `json:"device_role,omitempty"`
	DeviceType     *openapi_types.UUID                                    `json:"device_type,omitempty"`

	// Human friendly display value
	Display          *string                                                  `json:"display,omitempty"`
	Face             *interface{}                                             `json:"face,omitempty"`
	Id               *openapi_types.UUID                                      `json:"id,omitempty"`
	LastUpdated      *time.Time                                               `json:"last_updated,omitempty"`
	LocalContextData *PatchedWritableDeviceWithConfigContext_LocalContextData `json:"local_context_data"`

	// Optional schema to validate the structure of the data
	LocalContextSchema *openapi_types.UUID `json:"local_context_schema"`
	Name               *string             `json:"name"`
	ParentDevice       *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"parent_device,omitempty"`
	Platform *openapi_types.UUID `json:"platform"`

	// The lowest-numbered unit occupied by the device
	Position  *int `json:"position"`
	PrimaryIp *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4     *openapi_types.UUID                        `json:"primary_ip4"`
	PrimaryIp6     *openapi_types.UUID                        `json:"primary_ip6"`
	Rack           *openapi_types.UUID                        `json:"rack"`
	SecretsGroup   *openapi_types.UUID                        `json:"secrets_group"`
	Serial         *string                                    `json:"serial,omitempty"`
	Site           *openapi_types.UUID                        `json:"site,omitempty"`
	Status         *WritableDeviceWithConfigContextStatusEnum `json:"status,omitempty"`
	Tags           *[]TagSerializerField                      `json:"tags,omitempty"`
	Tenant         *openapi_types.UUID                        `json:"tenant"`
	Url            *string                                    `json:"url,omitempty"`
	VcPosition     *int                                       `json:"vc_position"`
	VcPriority     *int                                       `json:"vc_priority"`
	VirtualChassis *openapi_types.UUID                        `json:"virtual_chassis"`
}

// PatchedWritableDeviceWithConfigContext_ComputedFields defines model for PatchedWritableDeviceWithConfigContext.ComputedFields.
type PatchedWritableDeviceWithConfigContext_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableDeviceWithConfigContext_ConfigContext defines model for PatchedWritableDeviceWithConfigContext.ConfigContext.
type PatchedWritableDeviceWithConfigContext_ConfigContext struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableDeviceWithConfigContext_CustomFields defines model for PatchedWritableDeviceWithConfigContext.CustomFields.
type PatchedWritableDeviceWithConfigContext_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableDeviceWithConfigContext_LocalContextData defines model for PatchedWritableDeviceWithConfigContext.LocalContextData.
type PatchedWritableDeviceWithConfigContext_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableFrontPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer      *PatchedWritableFrontPort_CablePeer      `json:"cable_peer"`
	CablePeerType  *string                                  `json:"cable_peer_type"`
	ComputedFields *PatchedWritableFrontPort_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableFrontPort_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                  `json:"description,omitempty"`
	Device         *openapi_types.UUID                      `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label            *string               `json:"label,omitempty"`
	Name             *string               `json:"name,omitempty"`
	RearPort         *openapi_types.UUID   `json:"rear_port,omitempty"`
	RearPortPosition *int                  `json:"rear_port_position,omitempty"`
	Tags             *[]TagSerializerField `json:"tags,omitempty"`
	Type             *PortTypeChoices      `json:"type,omitempty"`
	Url              *string               `json:"url,omitempty"`
}

// PatchedWritableFrontPort_CablePeer defines model for PatchedWritableFrontPort.CablePeer.
type PatchedWritableFrontPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableFrontPort_ComputedFields defines model for PatchedWritableFrontPort.ComputedFields.
type PatchedWritableFrontPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableFrontPort_CustomFields defines model for PatchedWritableFrontPort.CustomFields.
type PatchedWritableFrontPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableFrontPortTemplate struct {
	ComputedFields *PatchedWritableFrontPortTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableFrontPortTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                          `json:"description,omitempty"`
	DeviceType     *openapi_types.UUID                              `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label            *string             `json:"label,omitempty"`
	Name             *string             `json:"name,omitempty"`
	RearPort         *openapi_types.UUID `json:"rear_port,omitempty"`
	RearPortPosition *int                `json:"rear_port_position,omitempty"`
	Type             *PortTypeChoices    `json:"type,omitempty"`
	Url              *string             `json:"url,omitempty"`
}

// PatchedWritableFrontPortTemplate_ComputedFields defines model for PatchedWritableFrontPortTemplate.ComputedFields.
type PatchedWritableFrontPortTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableFrontPortTemplate_CustomFields defines model for PatchedWritableFrontPortTemplate.CustomFields.
type PatchedWritableFrontPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Git repositories defined as a data source.
type PatchedWritableGitRepository struct {
	Branch         *string                                      `json:"branch,omitempty"`
	ComputedFields *PatchedWritableGitRepository_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                          `json:"created,omitempty"`

	// Commit hash of the most recent fetch from the selected branch. Used for syncing between workers.
	CurrentHead  *string                                    `json:"current_head,omitempty"`
	CustomFields *PatchedWritableGitRepository_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display          *string             `json:"display,omitempty"`
	Id               *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated      *time.Time          `json:"last_updated,omitempty"`
	Name             *string             `json:"name,omitempty"`
	ProvidedContents *[]interface{}      `json:"provided_contents,omitempty"`

	// Only HTTP and HTTPS URLs are presently supported
	RemoteUrl    *string             `json:"remote_url,omitempty"`
	SecretsGroup *openapi_types.UUID `json:"secrets_group"`
	Slug         *string             `json:"slug,omitempty"`
	Token        *string             `json:"token,omitempty"`
	Url          *string             `json:"url,omitempty"`
	Username     *string             `json:"username,omitempty"`
}

// PatchedWritableGitRepository_ComputedFields defines model for PatchedWritableGitRepository.ComputedFields.
type PatchedWritableGitRepository_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableGitRepository_CustomFields defines model for PatchedWritableGitRepository.CustomFields.
type PatchedWritableGitRepository_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableIPAddress struct {
	Address            *string                                  `json:"address,omitempty"`
	AssignedObject     *PatchedWritableIPAddress_AssignedObject `json:"assigned_object"`
	AssignedObjectId   *openapi_types.UUID                      `json:"assigned_object_id"`
	AssignedObjectType *string                                  `json:"assigned_object_type"`
	ComputedFields     *PatchedWritableIPAddress_ComputedFields `json:"computed_fields,omitempty"`
	Created            *openapi_types.Date                      `json:"created,omitempty"`
	CustomFields       *PatchedWritableIPAddress_CustomFields   `json:"custom_fields,omitempty"`
	Description        *string                                  `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Hostname or FQDN (not case-sensitive)
	DnsName *string `json:"dns_name,omitempty"`
	Family  *struct {
		// Embedded struct due to allOf(#/components/schemas/FamilyEnum)
		FamilyEnum `yaml:",inline"`
	} `json:"family,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// The IP Addresses for which this address is the "outside" IP
	NatInside  *openapi_types.UUID `json:"nat_inside"`
	NatOutside *[]NestedIPAddress  `json:"nat_outside,omitempty"`

	// The functional role of this IP
	Role   *interface{}                 `json:"role,omitempty"`
	Status *WritableIPAddressStatusEnum `json:"status,omitempty"`
	Tags   *[]TagSerializerField        `json:"tags,omitempty"`
	Tenant *openapi_types.UUID          `json:"tenant"`
	Url    *string                      `json:"url,omitempty"`
	Vrf    *openapi_types.UUID          `json:"vrf"`
}

// PatchedWritableIPAddress_AssignedObject defines model for PatchedWritableIPAddress.AssignedObject.
type PatchedWritableIPAddress_AssignedObject struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableIPAddress_ComputedFields defines model for PatchedWritableIPAddress.ComputedFields.
type PatchedWritableIPAddress_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableIPAddress_CustomFields defines model for PatchedWritableIPAddress.CustomFields.
type PatchedWritableIPAddress_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableInterface struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritableInterface_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                     `json:"cable_peer_type"`
	ComputedFields             *PatchedWritableInterface_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PatchedWritableInterface_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                       `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                     `json:"connected_endpoint_type"`
	CountIpaddresses           *int                                        `json:"count_ipaddresses,omitempty"`
	CustomFields               *PatchedWritableInterface_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                     `json:"description,omitempty"`
	Device                     *openapi_types.UUID                         `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Enabled *bool               `json:"enabled,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label      *string             `json:"label,omitempty"`
	Lag        *openapi_types.UUID `json:"lag"`
	MacAddress *string             `json:"mac_address"`

	// This interface is used only for out-of-band management
	MgmtOnly     *bool                 `json:"mgmt_only,omitempty"`
	Mode         *interface{}          `json:"mode,omitempty"`
	Mtu          *int                  `json:"mtu"`
	Name         *string               `json:"name,omitempty"`
	TaggedVlans  *[]openapi_types.UUID `json:"tagged_vlans,omitempty"`
	Tags         *[]TagSerializerField `json:"tags,omitempty"`
	Type         *InterfaceTypeChoices `json:"type,omitempty"`
	UntaggedVlan *openapi_types.UUID   `json:"untagged_vlan"`
	Url          *string               `json:"url,omitempty"`
}

// PatchedWritableInterface_CablePeer defines model for PatchedWritableInterface.CablePeer.
type PatchedWritableInterface_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableInterface_ComputedFields defines model for PatchedWritableInterface.ComputedFields.
type PatchedWritableInterface_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableInterface_ConnectedEndpoint defines model for PatchedWritableInterface.ConnectedEndpoint.
type PatchedWritableInterface_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableInterface_CustomFields defines model for PatchedWritableInterface.CustomFields.
type PatchedWritableInterface_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableInterfaceTemplate struct {
	ComputedFields *PatchedWritableInterfaceTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableInterfaceTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                          `json:"description,omitempty"`
	DeviceType     *openapi_types.UUID                              `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label    *string               `json:"label,omitempty"`
	MgmtOnly *bool                 `json:"mgmt_only,omitempty"`
	Name     *string               `json:"name,omitempty"`
	Type     *InterfaceTypeChoices `json:"type,omitempty"`
	Url      *string               `json:"url,omitempty"`
}

// PatchedWritableInterfaceTemplate_ComputedFields defines model for PatchedWritableInterfaceTemplate.ComputedFields.
type PatchedWritableInterfaceTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableInterfaceTemplate_CustomFields defines model for PatchedWritableInterfaceTemplate.CustomFields.
type PatchedWritableInterfaceTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableInventoryItem struct {
	Depth *int `json:"_depth,omitempty"`

	// A unique tag used to identify this item
	AssetTag       *string                                      `json:"asset_tag"`
	ComputedFields *PatchedWritableInventoryItem_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableInventoryItem_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                      `json:"description,omitempty"`
	Device         *openapi_types.UUID                          `json:"device,omitempty"`

	// This item was automatically discovered
	Discovered *bool `json:"discovered,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label        *string             `json:"label,omitempty"`
	Manufacturer *openapi_types.UUID `json:"manufacturer"`
	Name         *string             `json:"name,omitempty"`
	Parent       *openapi_types.UUID `json:"parent"`

	// Manufacturer-assigned part identifier
	PartId *string               `json:"part_id,omitempty"`
	Serial *string               `json:"serial,omitempty"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Url    *string               `json:"url,omitempty"`
}

// PatchedWritableInventoryItem_ComputedFields defines model for PatchedWritableInventoryItem.ComputedFields.
type PatchedWritableInventoryItem_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableInventoryItem_CustomFields defines model for PatchedWritableInventoryItem.CustomFields.
type PatchedWritableInventoryItem_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableObjectPermission struct {
	// The list of actions granted by this permission
	Actions *PatchedWritableObjectPermission_Actions `json:"actions,omitempty"`

	// Queryset filter matching the applicable objects of the selected type(s)
	Constraints *PatchedWritableObjectPermission_Constraints `json:"constraints"`
	Description *string                                      `json:"description,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Enabled     *bool                 `json:"enabled,omitempty"`
	Groups      *[]int                `json:"groups,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	Name        *string               `json:"name,omitempty"`
	ObjectTypes *[]string             `json:"object_types,omitempty"`
	Url         *string               `json:"url,omitempty"`
	Users       *[]openapi_types.UUID `json:"users,omitempty"`
}

// The list of actions granted by this permission
type PatchedWritableObjectPermission_Actions struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Queryset filter matching the applicable objects of the selected type(s)
type PatchedWritableObjectPermission_Constraints struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritablePlatform struct {
	ComputedFields *PatchedWritablePlatform_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                     `json:"created,omitempty"`
	CustomFields   *PatchedWritablePlatform_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                 `json:"description,omitempty"`
	DeviceCount    *int                                    `json:"device_count,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Optionally limit this platform to devices of a certain manufacturer
	Manufacturer *openapi_types.UUID `json:"manufacturer"`
	Name         *string             `json:"name,omitempty"`

	// Additional arguments to pass when initiating the NAPALM driver (JSON format)
	NapalmArgs *PatchedWritablePlatform_NapalmArgs `json:"napalm_args"`

	// The name of the NAPALM driver to use when interacting with devices
	NapalmDriver        *string `json:"napalm_driver,omitempty"`
	Slug                *string `json:"slug,omitempty"`
	Url                 *string `json:"url,omitempty"`
	VirtualmachineCount *int    `json:"virtualmachine_count,omitempty"`
}

// PatchedWritablePlatform_ComputedFields defines model for PatchedWritablePlatform.ComputedFields.
type PatchedWritablePlatform_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePlatform_CustomFields defines model for PatchedWritablePlatform.CustomFields.
type PatchedWritablePlatform_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Additional arguments to pass when initiating the NAPALM driver (JSON format)
type PatchedWritablePlatform_NapalmArgs struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritablePowerFeed struct {
	Amperage *int `json:"amperage,omitempty"`
	Cable    *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritablePowerFeed_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                     `json:"cable_peer_type"`
	Comments                   *string                                     `json:"comments,omitempty"`
	ComputedFields             *PatchedWritablePowerFeed_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PatchedWritablePowerFeed_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                       `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                     `json:"connected_endpoint_type"`
	Created                    *openapi_types.Date                         `json:"created,omitempty"`
	CustomFields               *PatchedWritablePowerFeed_CustomFields      `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Maximum permissible draw (percentage)
	MaxUtilization *int                         `json:"max_utilization,omitempty"`
	Name           *string                      `json:"name,omitempty"`
	Phase          *PhaseEnum                   `json:"phase,omitempty"`
	PowerPanel     *openapi_types.UUID          `json:"power_panel,omitempty"`
	Rack           *openapi_types.UUID          `json:"rack"`
	Status         *WritablePowerFeedStatusEnum `json:"status,omitempty"`
	Supply         *SupplyEnum                  `json:"supply,omitempty"`
	Tags           *[]TagSerializerField        `json:"tags,omitempty"`
	Type           *PowerFeedTypeChoices        `json:"type,omitempty"`
	Url            *string                      `json:"url,omitempty"`
	Voltage        *int                         `json:"voltage,omitempty"`
}

// PatchedWritablePowerFeed_CablePeer defines model for PatchedWritablePowerFeed.CablePeer.
type PatchedWritablePowerFeed_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerFeed_ComputedFields defines model for PatchedWritablePowerFeed.ComputedFields.
type PatchedWritablePowerFeed_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerFeed_ConnectedEndpoint defines model for PatchedWritablePowerFeed.ConnectedEndpoint.
type PatchedWritablePowerFeed_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerFeed_CustomFields defines model for PatchedWritablePowerFeed.CustomFields.
type PatchedWritablePowerFeed_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritablePowerOutlet struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritablePowerOutlet_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                       `json:"cable_peer_type"`
	ComputedFields             *PatchedWritablePowerOutlet_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PatchedWritablePowerOutlet_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                         `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                       `json:"connected_endpoint_type"`
	CustomFields               *PatchedWritablePowerOutlet_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                       `json:"description,omitempty"`
	Device                     *openapi_types.UUID                           `json:"device,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Phase (for three-phase feeds)
	FeedLeg *interface{}        `json:"feed_leg,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string               `json:"label,omitempty"`
	Name      *string               `json:"name,omitempty"`
	PowerPort *openapi_types.UUID   `json:"power_port"`
	Tags      *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// PatchedWritablePowerOutlet_CablePeer defines model for PatchedWritablePowerOutlet.CablePeer.
type PatchedWritablePowerOutlet_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerOutlet_ComputedFields defines model for PatchedWritablePowerOutlet.ComputedFields.
type PatchedWritablePowerOutlet_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerOutlet_ConnectedEndpoint defines model for PatchedWritablePowerOutlet.ConnectedEndpoint.
type PatchedWritablePowerOutlet_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerOutlet_CustomFields defines model for PatchedWritablePowerOutlet.CustomFields.
type PatchedWritablePowerOutlet_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritablePowerOutletTemplate struct {
	ComputedFields *PatchedWritablePowerOutletTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritablePowerOutletTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                            `json:"description,omitempty"`
	DeviceType     *openapi_types.UUID                                `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Phase (for three-phase feeds)
	FeedLeg *interface{}        `json:"feed_leg,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string             `json:"label,omitempty"`
	Name      *string             `json:"name,omitempty"`
	PowerPort *openapi_types.UUID `json:"power_port"`
	Type      *interface{}        `json:"type,omitempty"`
	Url       *string             `json:"url,omitempty"`
}

// PatchedWritablePowerOutletTemplate_ComputedFields defines model for PatchedWritablePowerOutletTemplate.ComputedFields.
type PatchedWritablePowerOutletTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerOutletTemplate_CustomFields defines model for PatchedWritablePowerOutletTemplate.CustomFields.
type PatchedWritablePowerOutletTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritablePowerPanel struct {
	ComputedFields *PatchedWritablePowerPanel_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritablePowerPanel_CustomFields   `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display        *string               `json:"display,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	Name           *string               `json:"name,omitempty"`
	PowerfeedCount *int                  `json:"powerfeed_count,omitempty"`
	RackGroup      *openapi_types.UUID   `json:"rack_group"`
	Site           *openapi_types.UUID   `json:"site,omitempty"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	Url            *string               `json:"url,omitempty"`
}

// PatchedWritablePowerPanel_ComputedFields defines model for PatchedWritablePowerPanel.ComputedFields.
type PatchedWritablePowerPanel_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerPanel_CustomFields defines model for PatchedWritablePowerPanel.CustomFields.
type PatchedWritablePowerPanel_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritablePowerPort struct {
	// Allocated power draw (watts)
	AllocatedDraw *int `json:"allocated_draw"`
	Cable         *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PatchedWritablePowerPort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                     `json:"cable_peer_type"`
	ComputedFields             *PatchedWritablePowerPort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PatchedWritablePowerPort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                       `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                     `json:"connected_endpoint_type"`
	CustomFields               *PatchedWritablePowerPort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                     `json:"description,omitempty"`
	Device                     *openapi_types.UUID                         `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`

	// Maximum power draw (watts)
	MaximumDraw *int                  `json:"maximum_draw"`
	Name        *string               `json:"name,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// PatchedWritablePowerPort_CablePeer defines model for PatchedWritablePowerPort.CablePeer.
type PatchedWritablePowerPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerPort_ComputedFields defines model for PatchedWritablePowerPort.ComputedFields.
type PatchedWritablePowerPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerPort_ConnectedEndpoint defines model for PatchedWritablePowerPort.ConnectedEndpoint.
type PatchedWritablePowerPort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerPort_CustomFields defines model for PatchedWritablePowerPort.CustomFields.
type PatchedWritablePowerPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritablePowerPortTemplate struct {
	// Allocated power draw (watts)
	AllocatedDraw  *int                                             `json:"allocated_draw"`
	ComputedFields *PatchedWritablePowerPortTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritablePowerPortTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                          `json:"description,omitempty"`
	DeviceType     *openapi_types.UUID                              `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`

	// Maximum power draw (watts)
	MaximumDraw *int         `json:"maximum_draw"`
	Name        *string      `json:"name,omitempty"`
	Type        *interface{} `json:"type,omitempty"`
	Url         *string      `json:"url,omitempty"`
}

// PatchedWritablePowerPortTemplate_ComputedFields defines model for PatchedWritablePowerPortTemplate.ComputedFields.
type PatchedWritablePowerPortTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePowerPortTemplate_CustomFields defines model for PatchedWritablePowerPortTemplate.CustomFields.
type PatchedWritablePowerPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritablePrefix struct {
	ComputedFields *PatchedWritablePrefix_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                   `json:"created,omitempty"`
	CustomFields   *PatchedWritablePrefix_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                               `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Family  *struct {
		// Embedded struct due to allOf(#/components/schemas/FamilyEnum)
		FamilyEnum `yaml:",inline"`
	} `json:"family,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// All IP addresses within this prefix are considered usable
	IsPool      *bool      `json:"is_pool,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	Prefix      *string    `json:"prefix,omitempty"`

	// The primary function of this prefix
	Role   *openapi_types.UUID       `json:"role"`
	Site   *openapi_types.UUID       `json:"site"`
	Status *WritablePrefixStatusEnum `json:"status,omitempty"`
	Tags   *[]TagSerializerField     `json:"tags,omitempty"`
	Tenant *openapi_types.UUID       `json:"tenant"`
	Url    *string                   `json:"url,omitempty"`
	Vlan   *openapi_types.UUID       `json:"vlan"`
	Vrf    *openapi_types.UUID       `json:"vrf"`
}

// PatchedWritablePrefix_ComputedFields defines model for PatchedWritablePrefix.ComputedFields.
type PatchedWritablePrefix_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritablePrefix_CustomFields defines model for PatchedWritablePrefix.CustomFields.
type PatchedWritablePrefix_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableProviderNetwork struct {
	Comments       *string                                        `json:"comments,omitempty"`
	ComputedFields *PatchedWritableProviderNetwork_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                            `json:"created,omitempty"`
	CustomFields   *PatchedWritableProviderNetwork_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                        `json:"description,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Name        *string               `json:"name,omitempty"`
	Provider    *openapi_types.UUID   `json:"provider,omitempty"`
	Slug        *string               `json:"slug,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// PatchedWritableProviderNetwork_ComputedFields defines model for PatchedWritableProviderNetwork.ComputedFields.
type PatchedWritableProviderNetwork_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableProviderNetwork_CustomFields defines model for PatchedWritableProviderNetwork.CustomFields.
type PatchedWritableProviderNetwork_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableRack struct {
	// A unique tag used to identify this rack
	AssetTag       *string                             `json:"asset_tag"`
	Comments       *string                             `json:"comments,omitempty"`
	ComputedFields *PatchedWritableRack_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                 `json:"created,omitempty"`
	CustomFields   *PatchedWritableRack_CustomFields   `json:"custom_fields,omitempty"`

	// Units are numbered top-to-bottom
	DescUnits   *bool `json:"desc_units,omitempty"`
	DeviceCount *int  `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Locally-assigned identifier
	FacilityId *string `json:"facility_id"`

	// Assigned group
	Group       *openapi_types.UUID `json:"group"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`

	// Outer dimension of rack (depth)
	OuterDepth *int         `json:"outer_depth"`
	OuterUnit  *interface{} `json:"outer_unit,omitempty"`

	// Outer dimension of rack (width)
	OuterWidth     *int `json:"outer_width"`
	PowerfeedCount *int `json:"powerfeed_count,omitempty"`

	// Functional role
	Role   *openapi_types.UUID     `json:"role"`
	Serial *string                 `json:"serial,omitempty"`
	Site   *openapi_types.UUID     `json:"site,omitempty"`
	Status *WritableRackStatusEnum `json:"status,omitempty"`
	Tags   *[]TagSerializerField   `json:"tags,omitempty"`
	Tenant *openapi_types.UUID     `json:"tenant"`
	Type   *interface{}            `json:"type,omitempty"`

	// Height in rack units
	UHeight *int    `json:"u_height,omitempty"`
	Url     *string `json:"url,omitempty"`

	// Rail-to-rail width
	Width *struct {
		// Embedded struct due to allOf(#/components/schemas/WidthEnum)
		WidthEnum `yaml:",inline"`
	} `json:"width,omitempty"`
}

// PatchedWritableRack_ComputedFields defines model for PatchedWritableRack.ComputedFields.
type PatchedWritableRack_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRack_CustomFields defines model for PatchedWritableRack.CustomFields.
type PatchedWritableRack_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableRackGroup struct {
	Depth          *int                                     `json:"_depth,omitempty"`
	ComputedFields *PatchedWritableRackGroup_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                      `json:"created,omitempty"`
	CustomFields   *PatchedWritableRackGroup_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                  `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Parent      *openapi_types.UUID `json:"parent"`
	RackCount   *int                `json:"rack_count,omitempty"`
	Site        *openapi_types.UUID `json:"site,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedWritableRackGroup_ComputedFields defines model for PatchedWritableRackGroup.ComputedFields.
type PatchedWritableRackGroup_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRackGroup_CustomFields defines model for PatchedWritableRackGroup.CustomFields.
type PatchedWritableRackGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableRackReservation struct {
	ComputedFields *PatchedWritableRackReservation_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                            `json:"created,omitempty"`
	CustomFields   *PatchedWritableRackReservation_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                        `json:"description,omitempty"`

	// Human friendly display value
	Display *string                               `json:"display,omitempty"`
	Id      *openapi_types.UUID                   `json:"id,omitempty"`
	Rack    *openapi_types.UUID                   `json:"rack,omitempty"`
	Tags    *[]TagSerializerField                 `json:"tags,omitempty"`
	Tenant  *openapi_types.UUID                   `json:"tenant"`
	Units   *PatchedWritableRackReservation_Units `json:"units,omitempty"`
	Url     *string                               `json:"url,omitempty"`
	User    *openapi_types.UUID                   `json:"user,omitempty"`
}

// PatchedWritableRackReservation_ComputedFields defines model for PatchedWritableRackReservation.ComputedFields.
type PatchedWritableRackReservation_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRackReservation_CustomFields defines model for PatchedWritableRackReservation.CustomFields.
type PatchedWritableRackReservation_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRackReservation_Units defines model for PatchedWritableRackReservation.Units.
type PatchedWritableRackReservation_Units struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableRearPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer      *PatchedWritableRearPort_CablePeer      `json:"cable_peer"`
	CablePeerType  *string                                 `json:"cable_peer_type"`
	ComputedFields *PatchedWritableRearPort_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableRearPort_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                 `json:"description,omitempty"`
	Device         *openapi_types.UUID                     `json:"device,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string               `json:"label,omitempty"`
	Name      *string               `json:"name,omitempty"`
	Positions *int                  `json:"positions,omitempty"`
	Tags      *[]TagSerializerField `json:"tags,omitempty"`
	Type      *PortTypeChoices      `json:"type,omitempty"`
	Url       *string               `json:"url,omitempty"`
}

// PatchedWritableRearPort_CablePeer defines model for PatchedWritableRearPort.CablePeer.
type PatchedWritableRearPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRearPort_ComputedFields defines model for PatchedWritableRearPort.ComputedFields.
type PatchedWritableRearPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRearPort_CustomFields defines model for PatchedWritableRearPort.CustomFields.
type PatchedWritableRearPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableRearPortTemplate struct {
	CustomFields *PatchedWritableRearPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                                       `json:"description,omitempty"`
	DeviceType   *openapi_types.UUID                           `json:"device_type,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string          `json:"label,omitempty"`
	Name      *string          `json:"name,omitempty"`
	Positions *int             `json:"positions,omitempty"`
	Type      *PortTypeChoices `json:"type,omitempty"`
	Url       *string          `json:"url,omitempty"`
}

// PatchedWritableRearPortTemplate_CustomFields defines model for PatchedWritableRearPortTemplate.CustomFields.
type PatchedWritableRearPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableRegion struct {
	Depth          *int                                  `json:"_depth,omitempty"`
	ComputedFields *PatchedWritableRegion_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                   `json:"created,omitempty"`
	CustomFields   *PatchedWritableRegion_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                               `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Parent      *openapi_types.UUID `json:"parent"`
	SiteCount   *int                `json:"site_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedWritableRegion_ComputedFields defines model for PatchedWritableRegion.ComputedFields.
type PatchedWritableRegion_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRegion_CustomFields defines model for PatchedWritableRegion.CustomFields.
type PatchedWritableRegion_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRelationshipAssociation defines model for PatchedWritableRelationshipAssociation.
type PatchedWritableRelationshipAssociation struct {
	DestinationId   *openapi_types.UUID `json:"destination_id,omitempty"`
	DestinationType *string             `json:"destination_type,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	Relationship    *openapi_types.UUID `json:"relationship,omitempty"`
	SourceId        *openapi_types.UUID `json:"source_id,omitempty"`
	SourceType      *string             `json:"source_type,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableRouteTarget struct {
	ComputedFields *PatchedWritableRouteTarget_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                        `json:"created,omitempty"`
	CustomFields   *PatchedWritableRouteTarget_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                    `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Route target value (formatted in accordance with RFC 4360)
	Name   *string               `json:"name,omitempty"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *openapi_types.UUID   `json:"tenant"`
	Url    *string               `json:"url,omitempty"`
}

// PatchedWritableRouteTarget_ComputedFields defines model for PatchedWritableRouteTarget.ComputedFields.
type PatchedWritableRouteTarget_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableRouteTarget_CustomFields defines model for PatchedWritableRouteTarget.CustomFields.
type PatchedWritableRouteTarget_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Serializer for `SecretsGroupAssociation` objects.
type PatchedWritableSecretsGroupAssociation struct {
	AccessType *AccessTypeEnum `json:"access_type,omitempty"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	Group      *openapi_types.UUID `json:"group,omitempty"`
	Id         *openapi_types.UUID `json:"id,omitempty"`
	Secret     *openapi_types.UUID `json:"secret,omitempty"`
	SecretType *SecretTypeEnum     `json:"secret_type,omitempty"`
	Url        *string             `json:"url,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableService struct {
	ComputedFields *PatchedWritableService_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                    `json:"created,omitempty"`
	CustomFields   *PatchedWritableService_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                `json:"description,omitempty"`
	Device         *openapi_types.UUID                    `json:"device"`

	// Human friendly display value
	Display        *string               `json:"display,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	Ipaddresses    *[]openapi_types.UUID `json:"ipaddresses,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	Name           *string               `json:"name,omitempty"`
	Ports          *[]int                `json:"ports,omitempty"`
	Protocol       *ProtocolEnum         `json:"protocol,omitempty"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	Url            *string               `json:"url,omitempty"`
	VirtualMachine *openapi_types.UUID   `json:"virtual_machine"`
}

// PatchedWritableService_ComputedFields defines model for PatchedWritableService.ComputedFields.
type PatchedWritableService_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableService_CustomFields defines model for PatchedWritableService.CustomFields.
type PatchedWritableService_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableSite struct {
	// 32-bit autonomous system number
	Asn            *int64                              `json:"asn"`
	CircuitCount   *int                                `json:"circuit_count,omitempty"`
	Comments       *string                             `json:"comments,omitempty"`
	ComputedFields *PatchedWritableSite_ComputedFields `json:"computed_fields,omitempty"`
	ContactEmail   *openapi_types.Email                `json:"contact_email,omitempty"`
	ContactName    *string                             `json:"contact_name,omitempty"`
	ContactPhone   *string                             `json:"contact_phone,omitempty"`
	Created        *openapi_types.Date                 `json:"created,omitempty"`
	CustomFields   *PatchedWritableSite_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                             `json:"description,omitempty"`
	DeviceCount    *int                                `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Local facility ID or description
	Facility    *string             `json:"facility,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// GPS coordinate (latitude)
	Latitude *string `json:"latitude"`

	// GPS coordinate (longitude)
	Longitude           *string                 `json:"longitude"`
	Name                *string                 `json:"name,omitempty"`
	PhysicalAddress     *string                 `json:"physical_address,omitempty"`
	PrefixCount         *int                    `json:"prefix_count,omitempty"`
	RackCount           *int                    `json:"rack_count,omitempty"`
	Region              *openapi_types.UUID     `json:"region"`
	ShippingAddress     *string                 `json:"shipping_address,omitempty"`
	Slug                *string                 `json:"slug,omitempty"`
	Status              *WritableSiteStatusEnum `json:"status,omitempty"`
	Tags                *[]TagSerializerField   `json:"tags,omitempty"`
	Tenant              *openapi_types.UUID     `json:"tenant"`
	TimeZone            *string                 `json:"time_zone"`
	Url                 *string                 `json:"url,omitempty"`
	VirtualmachineCount *int                    `json:"virtualmachine_count,omitempty"`
	VlanCount           *int                    `json:"vlan_count,omitempty"`
}

// PatchedWritableSite_ComputedFields defines model for PatchedWritableSite.ComputedFields.
type PatchedWritableSite_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableSite_CustomFields defines model for PatchedWritableSite.CustomFields.
type PatchedWritableSite_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableTenant struct {
	CircuitCount   *int                                  `json:"circuit_count,omitempty"`
	ClusterCount   *int                                  `json:"cluster_count,omitempty"`
	Comments       *string                               `json:"comments,omitempty"`
	ComputedFields *PatchedWritableTenant_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                   `json:"created,omitempty"`
	CustomFields   *PatchedWritableTenant_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                               `json:"description,omitempty"`
	DeviceCount    *int                                  `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string               `json:"display,omitempty"`
	Group               *openapi_types.UUID   `json:"group"`
	Id                  *openapi_types.UUID   `json:"id,omitempty"`
	IpaddressCount      *int                  `json:"ipaddress_count,omitempty"`
	LastUpdated         *time.Time            `json:"last_updated,omitempty"`
	Name                *string               `json:"name,omitempty"`
	PrefixCount         *int                  `json:"prefix_count,omitempty"`
	RackCount           *int                  `json:"rack_count,omitempty"`
	SiteCount           *int                  `json:"site_count,omitempty"`
	Slug                *string               `json:"slug,omitempty"`
	Tags                *[]TagSerializerField `json:"tags,omitempty"`
	Url                 *string               `json:"url,omitempty"`
	VirtualmachineCount *int                  `json:"virtualmachine_count,omitempty"`
	VlanCount           *int                  `json:"vlan_count,omitempty"`
	VrfCount            *int                  `json:"vrf_count,omitempty"`
}

// PatchedWritableTenant_ComputedFields defines model for PatchedWritableTenant.ComputedFields.
type PatchedWritableTenant_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableTenant_CustomFields defines model for PatchedWritableTenant.CustomFields.
type PatchedWritableTenant_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableTenantGroup struct {
	Depth          *int                                       `json:"_depth,omitempty"`
	ComputedFields *PatchedWritableTenantGroup_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                        `json:"created,omitempty"`
	CustomFields   *PatchedWritableTenantGroup_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                    `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Parent      *openapi_types.UUID `json:"parent"`
	Slug        *string             `json:"slug,omitempty"`
	TenantCount *int                `json:"tenant_count,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// PatchedWritableTenantGroup_ComputedFields defines model for PatchedWritableTenantGroup.ComputedFields.
type PatchedWritableTenantGroup_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableTenantGroup_CustomFields defines model for PatchedWritableTenantGroup.CustomFields.
type PatchedWritableTenantGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableUser struct {
	DateJoined *time.Time `json:"date_joined,omitempty"`

	// Human friendly display value
	Display   *string              `json:"display,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	FirstName *string              `json:"first_name,omitempty"`

	// The groups this user belongs to. A user will get all permissions granted to each of their groups.
	Groups *[]int              `json:"groups,omitempty"`
	Id     *openapi_types.UUID `json:"id,omitempty"`

	// Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
	IsActive *bool `json:"is_active,omitempty"`

	// Designates whether the user can log into this admin site.
	IsStaff  *bool   `json:"is_staff,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	Password *string `json:"password,omitempty"`
	Url      *string `json:"url,omitempty"`

	// Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	Username *string `json:"username,omitempty"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableVLAN struct {
	ComputedFields *PatchedWritableVLAN_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                 `json:"created,omitempty"`
	CustomFields   *PatchedWritableVLAN_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                             `json:"description,omitempty"`

	// Human friendly display value
	Display     *string                 `json:"display,omitempty"`
	Group       *openapi_types.UUID     `json:"group"`
	Id          *openapi_types.UUID     `json:"id,omitempty"`
	LastUpdated *time.Time              `json:"last_updated,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	PrefixCount *int                    `json:"prefix_count,omitempty"`
	Role        *openapi_types.UUID     `json:"role"`
	Site        *openapi_types.UUID     `json:"site"`
	Status      *WritableVLANStatusEnum `json:"status,omitempty"`
	Tags        *[]TagSerializerField   `json:"tags,omitempty"`
	Tenant      *openapi_types.UUID     `json:"tenant"`
	Url         *string                 `json:"url,omitempty"`
	Vid         *int                    `json:"vid,omitempty"`
}

// PatchedWritableVLAN_ComputedFields defines model for PatchedWritableVLAN.ComputedFields.
type PatchedWritableVLAN_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableVLAN_CustomFields defines model for PatchedWritableVLAN.CustomFields.
type PatchedWritableVLAN_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableVLANGroup struct {
	ComputedFields *PatchedWritableVLANGroup_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                      `json:"created,omitempty"`
	CustomFields   *PatchedWritableVLANGroup_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                  `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        *string             `json:"name,omitempty"`
	Site        *openapi_types.UUID `json:"site"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
	VlanCount   *int                `json:"vlan_count,omitempty"`
}

// PatchedWritableVLANGroup_ComputedFields defines model for PatchedWritableVLANGroup.ComputedFields.
type PatchedWritableVLANGroup_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableVLANGroup_CustomFields defines model for PatchedWritableVLANGroup.CustomFields.
type PatchedWritableVLANGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableVMInterface struct {
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display        *string               `json:"display,omitempty"`
	Enabled        *bool                 `json:"enabled,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	MacAddress     *string               `json:"mac_address"`
	Mode           *interface{}          `json:"mode,omitempty"`
	Mtu            *int                  `json:"mtu"`
	Name           *string               `json:"name,omitempty"`
	TaggedVlans    *[]openapi_types.UUID `json:"tagged_vlans,omitempty"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	UntaggedVlan   *openapi_types.UUID   `json:"untagged_vlan"`
	Url            *string               `json:"url,omitempty"`
	VirtualMachine *openapi_types.UUID   `json:"virtual_machine,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableVRF struct {
	ComputedFields *PatchedWritableVRF_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                `json:"created,omitempty"`
	CustomFields   *PatchedWritableVRF_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                            `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Prevent duplicate prefixes/IP addresses within this VRF
	EnforceUnique  *bool                 `json:"enforce_unique,omitempty"`
	ExportTargets  *[]openapi_types.UUID `json:"export_targets,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	ImportTargets  *[]openapi_types.UUID `json:"import_targets,omitempty"`
	IpaddressCount *int                  `json:"ipaddress_count,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	Name           *string               `json:"name,omitempty"`
	PrefixCount    *int                  `json:"prefix_count,omitempty"`

	// Unique route distinguisher (as defined in RFC 4364)
	Rd     *string               `json:"rd"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *openapi_types.UUID   `json:"tenant"`
	Url    *string               `json:"url,omitempty"`
}

// PatchedWritableVRF_ComputedFields defines model for PatchedWritableVRF.ComputedFields.
type PatchedWritableVRF_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableVRF_CustomFields defines model for PatchedWritableVRF.CustomFields.
type PatchedWritableVRF_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PatchedWritableVirtualChassis struct {
	ComputedFields *PatchedWritableVirtualChassis_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *PatchedWritableVirtualChassis_CustomFields   `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Domain      *string               `json:"domain,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	Master      *openapi_types.UUID   `json:"master"`
	MemberCount *int                  `json:"member_count,omitempty"`
	Name        *string               `json:"name,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// PatchedWritableVirtualChassis_ComputedFields defines model for PatchedWritableVirtualChassis.ComputedFields.
type PatchedWritableVirtualChassis_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableVirtualChassis_CustomFields defines model for PatchedWritableVirtualChassis.CustomFields.
type PatchedWritableVirtualChassis_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type PatchedWritableVirtualMachineWithConfigContext struct {
	Cluster       *openapi_types.UUID                                           `json:"cluster,omitempty"`
	Comments      *string                                                       `json:"comments,omitempty"`
	ConfigContext *PatchedWritableVirtualMachineWithConfigContext_ConfigContext `json:"config_context,omitempty"`
	Created       *openapi_types.Date                                           `json:"created,omitempty"`
	CustomFields  *PatchedWritableVirtualMachineWithConfigContext_CustomFields  `json:"custom_fields,omitempty"`
	Disk          *int                                                          `json:"disk"`

	// Human friendly display value
	Display          *string                                                          `json:"display,omitempty"`
	Id               *openapi_types.UUID                                              `json:"id,omitempty"`
	LastUpdated      *time.Time                                                       `json:"last_updated,omitempty"`
	LocalContextData *PatchedWritableVirtualMachineWithConfigContext_LocalContextData `json:"local_context_data"`

	// Optional schema to validate the structure of the data
	LocalContextSchema *openapi_types.UUID `json:"local_context_schema"`
	Memory             *int                `json:"memory"`
	Name               *string             `json:"name,omitempty"`
	Platform           *openapi_types.UUID `json:"platform"`
	PrimaryIp          *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4 *openapi_types.UUID `json:"primary_ip4"`
	PrimaryIp6 *openapi_types.UUID `json:"primary_ip6"`
	Role       *openapi_types.UUID `json:"role"`
	Site       *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site,omitempty"`
	Status *WritableVirtualMachineWithConfigContextStatusEnum `json:"status,omitempty"`
	Tags   *[]TagSerializerField                              `json:"tags,omitempty"`
	Tenant *openapi_types.UUID                                `json:"tenant"`
	Url    *string                                            `json:"url,omitempty"`
	Vcpus  *int                                               `json:"vcpus"`
}

// PatchedWritableVirtualMachineWithConfigContext_ConfigContext defines model for PatchedWritableVirtualMachineWithConfigContext.ConfigContext.
type PatchedWritableVirtualMachineWithConfigContext_ConfigContext struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableVirtualMachineWithConfigContext_CustomFields defines model for PatchedWritableVirtualMachineWithConfigContext.CustomFields.
type PatchedWritableVirtualMachineWithConfigContext_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PatchedWritableVirtualMachineWithConfigContext_LocalContextData defines model for PatchedWritableVirtualMachineWithConfigContext.LocalContextData.
type PatchedWritableVirtualMachineWithConfigContext_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PhaseEnum defines model for PhaseEnum.
type PhaseEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Platform struct {
	Created      *openapi_types.Date    `json:"created,omitempty"`
	CustomFields *Platform_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                `json:"description,omitempty"`
	DeviceCount  *int                   `json:"device_count,omitempty"`

	// Human friendly display value
	Display      *string             `json:"display,omitempty"`
	Id           *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated  *time.Time          `json:"last_updated,omitempty"`
	Manufacturer *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedManufacturer)
		NestedManufacturer `yaml:",inline"`
	} `json:"manufacturer"`
	Name string `json:"name"`

	// Additional arguments to pass when initiating the NAPALM driver (JSON format)
	NapalmArgs *Platform_NapalmArgs `json:"napalm_args"`

	// The name of the NAPALM driver to use when interacting with devices
	NapalmDriver        *string `json:"napalm_driver,omitempty"`
	Slug                *string `json:"slug,omitempty"`
	Url                 *string `json:"url,omitempty"`
	VirtualmachineCount *int    `json:"virtualmachine_count,omitempty"`
}

// Platform_CustomFields defines model for Platform.CustomFields.
type Platform_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Additional arguments to pass when initiating the NAPALM driver (JSON format)
type Platform_NapalmArgs struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PortTypeChoices defines model for PortTypeChoices.
type PortTypeChoices string

// Mixin to add `status` choice field to model serializers.
type PowerFeed struct {
	Amperage *int `json:"amperage,omitempty"`
	Cable    *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PowerFeed_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                      `json:"cable_peer_type"`
	Comments                   *string                      `json:"comments,omitempty"`
	ConnectedEndpoint          *PowerFeed_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                        `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                      `json:"connected_endpoint_type"`
	Created                    *openapi_types.Date          `json:"created,omitempty"`
	CustomFields               *PowerFeed_CustomFields      `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Maximum permissible draw (percentage)
	MaxUtilization *int   `json:"max_utilization,omitempty"`
	Name           string `json:"name"`
	Phase          *struct {
		Label *PowerFeedPhaseLabel `json:"label,omitempty"`
		Value *PowerFeedPhaseValue `json:"value,omitempty"`
	} `json:"phase,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	PowerPanel NestedPowerPanel `json:"power_panel"`
	Rack       *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRack)
		NestedRack `yaml:",inline"`
	} `json:"rack"`
	Status struct {
		Label *PowerFeedStatusLabel `json:"label,omitempty"`
		Value *PowerFeedStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Supply *struct {
		Label *PowerFeedSupplyLabel `json:"label,omitempty"`
		Value *PowerFeedSupplyValue `json:"value,omitempty"`
	} `json:"supply,omitempty"`
	Tags *[]TagSerializerField `json:"tags,omitempty"`
	Type *struct {
		Label *PowerFeedTypeLabel `json:"label,omitempty"`
		Value *PowerFeedTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url     *string `json:"url,omitempty"`
	Voltage *int    `json:"voltage,omitempty"`
}

// PowerFeed_CablePeer defines model for PowerFeed.CablePeer.
type PowerFeed_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerFeed_ConnectedEndpoint defines model for PowerFeed.ConnectedEndpoint.
type PowerFeed_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerFeed_CustomFields defines model for PowerFeed.CustomFields.
type PowerFeed_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerFeedPhaseLabel defines model for PowerFeed.Phase.Label.
type PowerFeedPhaseLabel string

// PowerFeedPhaseValue defines model for PowerFeed.Phase.Value.
type PowerFeedPhaseValue string

// PowerFeedStatusLabel defines model for PowerFeed.Status.Label.
type PowerFeedStatusLabel string

// PowerFeedStatusValue defines model for PowerFeed.Status.Value.
type PowerFeedStatusValue string

// PowerFeedSupplyLabel defines model for PowerFeed.Supply.Label.
type PowerFeedSupplyLabel string

// PowerFeedSupplyValue defines model for PowerFeed.Supply.Value.
type PowerFeedSupplyValue string

// PowerFeedTypeLabel defines model for PowerFeed.Type.Label.
type PowerFeedTypeLabel string

// PowerFeedTypeValue defines model for PowerFeed.Type.Value.
type PowerFeedTypeValue string

// PowerFeedTypeChoices defines model for PowerFeedTypeChoices.
type PowerFeedTypeChoices string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PowerOutlet struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PowerOutlet_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                        `json:"cable_peer_type"`
	ConnectedEndpoint          *PowerOutlet_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                          `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                        `json:"connected_endpoint_type"`
	CustomFields               *PowerOutlet_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                        `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	FeedLeg *struct {
		Label *PowerOutletFeedLegLabel `json:"label,omitempty"`
		Value *PowerOutletFeedLegValue `json:"value,omitempty"`
	} `json:"feed_leg,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	PowerPort *NestedPowerPort      `json:"power_port,omitempty"`
	Tags      *[]TagSerializerField `json:"tags,omitempty"`
	Type      *struct {
		Label *PowerOutletTypeLabel `json:"label,omitempty"`
		Value *PowerOutletTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// PowerOutlet_CablePeer defines model for PowerOutlet.CablePeer.
type PowerOutlet_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerOutlet_ConnectedEndpoint defines model for PowerOutlet.ConnectedEndpoint.
type PowerOutlet_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerOutlet_CustomFields defines model for PowerOutlet.CustomFields.
type PowerOutlet_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerOutletFeedLegLabel defines model for PowerOutlet.FeedLeg.Label.
type PowerOutletFeedLegLabel string

// PowerOutletFeedLegValue defines model for PowerOutlet.FeedLeg.Value.
type PowerOutletFeedLegValue string

// PowerOutletTypeLabel defines model for PowerOutlet.Type.Label.
type PowerOutletTypeLabel string

// PowerOutletTypeValue defines model for PowerOutlet.Type.Value.
type PowerOutletTypeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PowerOutletTemplate struct {
	CustomFields *PowerOutletTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                           `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	FeedLeg *struct {
		Label *PowerOutletTemplateFeedLegLabel `json:"label,omitempty"`
		Value *PowerOutletTemplateFeedLegValue `json:"value,omitempty"`
	} `json:"feed_leg,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	PowerPort *NestedPowerPortTemplate `json:"power_port,omitempty"`
	Type      *struct {
		Label *PowerOutletTemplateTypeLabel `json:"label,omitempty"`
		Value *PowerOutletTemplateTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// PowerOutletTemplate_CustomFields defines model for PowerOutletTemplate.CustomFields.
type PowerOutletTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerOutletTemplateFeedLegLabel defines model for PowerOutletTemplate.FeedLeg.Label.
type PowerOutletTemplateFeedLegLabel string

// PowerOutletTemplateFeedLegValue defines model for PowerOutletTemplate.FeedLeg.Value.
type PowerOutletTemplateFeedLegValue string

// PowerOutletTemplateTypeLabel defines model for PowerOutletTemplate.Type.Label.
type PowerOutletTemplateTypeLabel string

// PowerOutletTemplateTypeValue defines model for PowerOutletTemplate.Type.Value.
type PowerOutletTemplateTypeValue string

// PowerOutletTypeChoices defines model for PowerOutletTypeChoices.
type PowerOutletTypeChoices string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PowerPanel struct {
	CustomFields *PowerPanel_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display        *string             `json:"display,omitempty"`
	Id             *openapi_types.UUID `json:"id,omitempty"`
	Name           string              `json:"name"`
	PowerfeedCount *int                `json:"powerfeed_count,omitempty"`
	RackGroup      *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRackGroup)
		NestedRackGroup `yaml:",inline"`
	} `json:"rack_group"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Site NestedSite            `json:"site"`
	Tags *[]TagSerializerField `json:"tags,omitempty"`
	Url  *string               `json:"url,omitempty"`
}

// PowerPanel_CustomFields defines model for PowerPanel.CustomFields.
type PowerPanel_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PowerPort struct {
	// Allocated power draw (watts)
	AllocatedDraw *int `json:"allocated_draw"`
	Cable         *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *PowerPort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                      `json:"cable_peer_type"`
	ComputedFields             *PowerPort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *PowerPort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                        `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                      `json:"connected_endpoint_type"`
	CustomFields               *PowerPort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                      `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`

	// Maximum power draw (watts)
	MaximumDraw *int                  `json:"maximum_draw"`
	Name        string                `json:"name"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Type        *struct {
		Label *PowerPortTypeLabel `json:"label,omitempty"`
		Value *PowerPortTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// PowerPort_CablePeer defines model for PowerPort.CablePeer.
type PowerPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerPort_ComputedFields defines model for PowerPort.ComputedFields.
type PowerPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerPort_ConnectedEndpoint defines model for PowerPort.ConnectedEndpoint.
type PowerPort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerPort_CustomFields defines model for PowerPort.CustomFields.
type PowerPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerPortTypeLabel defines model for PowerPort.Type.Label.
type PowerPortTypeLabel string

// PowerPortTypeValue defines model for PowerPort.Type.Value.
type PowerPortTypeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type PowerPortTemplate struct {
	// Allocated power draw (watts)
	AllocatedDraw *int                            `json:"allocated_draw"`
	CustomFields  *PowerPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description   *string                         `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`

	// Maximum power draw (watts)
	MaximumDraw *int   `json:"maximum_draw"`
	Name        string `json:"name"`
	Type        *struct {
		Label *PowerPortTemplateTypeLabel `json:"label,omitempty"`
		Value *PowerPortTemplateTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// PowerPortTemplate_CustomFields defines model for PowerPortTemplate.CustomFields.
type PowerPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PowerPortTemplateTypeLabel defines model for PowerPortTemplate.Type.Label.
type PowerPortTemplateTypeLabel string

// PowerPortTemplateTypeValue defines model for PowerPortTemplate.Type.Value.
type PowerPortTemplateTypeValue string

// PowerPortTypeChoices defines model for PowerPortTypeChoices.
type PowerPortTypeChoices string

// Mixin to add `status` choice field to model serializers.
type Prefix struct {
	Created      *openapi_types.Date  `json:"created,omitempty"`
	CustomFields *Prefix_CustomFields `json:"custom_fields,omitempty"`
	Description  *string              `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Family  *struct {
		Label *PrefixFamilyLabel `json:"label,omitempty"`
		Value *PrefixFamilyValue `json:"value,omitempty"`
	} `json:"family,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// All IP addresses within this prefix are considered usable
	IsPool      *bool      `json:"is_pool,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	Prefix      string     `json:"prefix"`
	Role        *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRole)
		NestedRole `yaml:",inline"`
	} `json:"role"`
	Site *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site"`
	Status struct {
		Label *PrefixStatusLabel `json:"label,omitempty"`
		Value *PrefixStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url  *string `json:"url,omitempty"`
	Vlan *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVLAN)
		NestedVLAN `yaml:",inline"`
	} `json:"vlan"`
	Vrf *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVRF)
		NestedVRF `yaml:",inline"`
	} `json:"vrf"`
}

// Prefix_CustomFields defines model for Prefix.CustomFields.
type Prefix_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PrefixFamilyLabel defines model for Prefix.Family.Label.
type PrefixFamilyLabel string

// PrefixFamilyValue defines model for Prefix.Family.Value.
type PrefixFamilyValue int

// PrefixStatusLabel defines model for Prefix.Status.Label.
type PrefixStatusLabel string

// PrefixStatusValue defines model for Prefix.Status.Value.
type PrefixStatusValue string

// PrefixLength defines model for PrefixLength.
type PrefixLength struct {
	PrefixLength int `json:"prefix_length"`
}

// ProtocolEnum defines model for ProtocolEnum.
type ProtocolEnum string

// ProvidedContentsEnum defines model for ProvidedContentsEnum.
type ProvidedContentsEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Provider struct {
	Account      *string `json:"account,omitempty"`
	AdminContact *string `json:"admin_contact,omitempty"`

	// 32-bit autonomous system number
	Asn          *int64                 `json:"asn"`
	CircuitCount *int                   `json:"circuit_count,omitempty"`
	Comments     *string                `json:"comments,omitempty"`
	Created      *openapi_types.Date    `json:"created,omitempty"`
	CustomFields *Provider_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Name        string                `json:"name"`
	NocContact  *string               `json:"noc_contact,omitempty"`
	PortalUrl   *string               `json:"portal_url,omitempty"`
	Slug        *string               `json:"slug,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// Provider_CustomFields defines model for Provider.CustomFields.
type Provider_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type ProviderNetwork struct {
	Comments     *string                       `json:"comments,omitempty"`
	Created      *openapi_types.Date           `json:"created,omitempty"`
	CustomFields *ProviderNetwork_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                       `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Provider NestedProvider        `json:"provider"`
	Slug     *string               `json:"slug,omitempty"`
	Tags     *[]TagSerializerField `json:"tags,omitempty"`
	Url      *string               `json:"url,omitempty"`
}

// ProviderNetwork_CustomFields defines model for ProviderNetwork.CustomFields.
type ProviderNetwork_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RIR struct {
	AggregateCount *int                `json:"aggregate_count,omitempty"`
	Created        *openapi_types.Date `json:"created,omitempty"`
	CustomFields   *RIR_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string             `json:"description,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// IP space managed by this RIR is considered private
	IsPrivate   *bool      `json:"is_private,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	Name        string     `json:"name"`
	Slug        *string    `json:"slug,omitempty"`
	Url         *string    `json:"url,omitempty"`
}

// RIR_CustomFields defines model for RIR.CustomFields.
type RIR_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type Rack struct {
	// A unique tag used to identify this rack
	AssetTag     *string             `json:"asset_tag"`
	Comments     *string             `json:"comments,omitempty"`
	Created      *openapi_types.Date `json:"created,omitempty"`
	CustomFields *Rack_CustomFields  `json:"custom_fields,omitempty"`

	// Units are numbered top-to-bottom
	DescUnits   *bool `json:"desc_units,omitempty"`
	DeviceCount *int  `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Locally-assigned identifier
	FacilityId *string `json:"facility_id"`
	Group      *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRackGroup)
		NestedRackGroup `yaml:",inline"`
	} `json:"group"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`

	// Outer dimension of rack (depth)
	OuterDepth *int `json:"outer_depth"`
	OuterUnit  *struct {
		Label *RackOuterUnitLabel `json:"label,omitempty"`
		Value *RackOuterUnitValue `json:"value,omitempty"`
	} `json:"outer_unit,omitempty"`

	// Outer dimension of rack (width)
	OuterWidth     *int `json:"outer_width"`
	PowerfeedCount *int `json:"powerfeed_count,omitempty"`
	Role           *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRackRole)
		NestedRackRole `yaml:",inline"`
	} `json:"role"`
	Serial *string `json:"serial,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Site   NestedSite `json:"site"`
	Status struct {
		Label *RackStatusLabel `json:"label,omitempty"`
		Value *RackStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Type *struct {
		Label *RackTypeLabel `json:"label,omitempty"`
		Value *RackTypeValue `json:"value,omitempty"`
	} `json:"type,omitempty"`

	// Height in rack units
	UHeight *int    `json:"u_height,omitempty"`
	Url     *string `json:"url,omitempty"`
	Width   *struct {
		Label *RackWidthLabel `json:"label,omitempty"`
		Value *RackWidthValue `json:"value,omitempty"`
	} `json:"width,omitempty"`
}

// Rack_CustomFields defines model for Rack.CustomFields.
type Rack_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RackOuterUnitLabel defines model for Rack.OuterUnit.Label.
type RackOuterUnitLabel string

// RackOuterUnitValue defines model for Rack.OuterUnit.Value.
type RackOuterUnitValue string

// RackStatusLabel defines model for Rack.Status.Label.
type RackStatusLabel string

// RackStatusValue defines model for Rack.Status.Value.
type RackStatusValue string

// RackTypeLabel defines model for Rack.Type.Label.
type RackTypeLabel string

// RackTypeValue defines model for Rack.Type.Value.
type RackTypeValue string

// RackWidthLabel defines model for Rack.Width.Label.
type RackWidthLabel string

// RackWidthValue defines model for Rack.Width.Value.
type RackWidthValue int

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RackGroup struct {
	Depth        *int                    `json:"_depth,omitempty"`
	Created      *openapi_types.Date     `json:"created,omitempty"`
	CustomFields *RackGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                 `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Parent      *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRackGroup)
		NestedRackGroup `yaml:",inline"`
	} `json:"parent"`
	RackCount *int `json:"rack_count,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Site NestedSite `json:"site"`
	Slug *string    `json:"slug,omitempty"`
	Url  *string    `json:"url,omitempty"`
}

// RackGroup_CustomFields defines model for RackGroup.CustomFields.
type RackGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RackReservation struct {
	Created      *openapi_types.Date           `json:"created,omitempty"`
	CustomFields *RackReservation_CustomFields `json:"custom_fields,omitempty"`
	Description  string                        `json:"description"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Rack   NestedRack            `json:"rack"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Units RackReservation_Units `json:"units"`
	Url   *string               `json:"url,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	User NestedUser `json:"user"`
}

// RackReservation_CustomFields defines model for RackReservation.CustomFields.
type RackReservation_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RackReservation_Units defines model for RackReservation.Units.
type RackReservation_Units struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RackRole struct {
	Color        *string                `json:"color,omitempty"`
	Created      *openapi_types.Date    `json:"created,omitempty"`
	CustomFields *RackRole_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	RackCount   *int                `json:"rack_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// RackRole_CustomFields defines model for RackRole.CustomFields.
type RackRole_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RackTypeChoices defines model for RackTypeChoices.
type RackTypeChoices string

// A rack unit is an abstraction formed by the set (rack, position, face); it does not exist as a row in the database.
type RackUnit struct {
	Device *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"device,omitempty"`
	Face *struct {
		Label *RackUnitFaceLabel `json:"label,omitempty"`
		Value *RackUnitFaceValue `json:"value,omitempty"`
	} `json:"face,omitempty"`
	Id       *int    `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
	Occupied *bool   `json:"occupied,omitempty"`
}

// RackUnitFaceLabel defines model for RackUnit.Face.Label.
type RackUnitFaceLabel string

// RackUnitFaceValue defines model for RackUnit.Face.Value.
type RackUnitFaceValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RearPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer     *RearPort_CablePeer    `json:"cable_peer"`
	CablePeerType *string                `json:"cable_peer_type"`
	CustomFields  *RearPort_CustomFields `json:"custom_fields,omitempty"`
	Description   *string                `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Device NestedDevice `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string               `json:"label,omitempty"`
	Name      string                `json:"name"`
	Positions *int                  `json:"positions,omitempty"`
	Tags      *[]TagSerializerField `json:"tags,omitempty"`
	Type      struct {
		Label *RearPortTypeLabel `json:"label,omitempty"`
		Value *RearPortTypeValue `json:"value,omitempty"`
	} `json:"type"`
	Url *string `json:"url,omitempty"`
}

// RearPort_CablePeer defines model for RearPort.CablePeer.
type RearPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RearPort_CustomFields defines model for RearPort.CustomFields.
type RearPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RearPortTypeLabel defines model for RearPort.Type.Label.
type RearPortTypeLabel string

// RearPortTypeValue defines model for RearPort.Type.Value.
type RearPortTypeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RearPortTemplate struct {
	CustomFields *RearPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                        `json:"description,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	DeviceType NestedDeviceType `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string `json:"label,omitempty"`
	Name      string  `json:"name"`
	Positions *int    `json:"positions,omitempty"`
	Type      struct {
		Label *RearPortTemplateTypeLabel `json:"label,omitempty"`
		Value *RearPortTemplateTypeValue `json:"value,omitempty"`
	} `json:"type"`
	Url *string `json:"url,omitempty"`
}

// RearPortTemplate_CustomFields defines model for RearPortTemplate.CustomFields.
type RearPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RearPortTemplateTypeLabel defines model for RearPortTemplate.Type.Label.
type RearPortTemplateTypeLabel string

// RearPortTemplateTypeValue defines model for RearPortTemplate.Type.Value.
type RearPortTemplateTypeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Region struct {
	Depth        *int                 `json:"_depth,omitempty"`
	Created      *openapi_types.Date  `json:"created,omitempty"`
	CustomFields *Region_CustomFields `json:"custom_fields,omitempty"`
	Description  *string              `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Parent      *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRegion)
		NestedRegion `yaml:",inline"`
	} `json:"parent"`
	SiteCount *int    `json:"site_count,omitempty"`
	Slug      *string `json:"slug,omitempty"`
	Url       *string `json:"url,omitempty"`
}

// Region_CustomFields defines model for Region.CustomFields.
type Region_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Relationship defines model for Relationship.
type Relationship struct {
	Description *string `json:"description,omitempty"`

	// Queryset filter matching the applicable destination objects of the selected type
	DestinationFilter *Relationship_DestinationFilter `json:"destination_filter"`

	// Hide this relationship on the destination object.
	DestinationHidden *bool `json:"destination_hidden,omitempty"`

	// Label for related source objects, as displayed on the destination object.
	DestinationLabel *string             `json:"destination_label,omitempty"`
	DestinationType  string              `json:"destination_type"`
	Id               *openapi_types.UUID `json:"id,omitempty"`

	// Internal relationship name
	Name string  `json:"name"`
	Slug *string `json:"slug,omitempty"`

	// Queryset filter matching the applicable source objects of the selected type
	SourceFilter *Relationship_SourceFilter `json:"source_filter"`

	// Hide this relationship on the source object.
	SourceHidden *bool `json:"source_hidden,omitempty"`

	// Label for related destination objects, as displayed on the source object.
	SourceLabel *string `json:"source_label,omitempty"`
	SourceType  string  `json:"source_type"`

	// Cardinality of this relationship
	Type *struct {
		// Embedded struct due to allOf(#/components/schemas/RelationshipTypeChoices)
		RelationshipTypeChoices `yaml:",inline"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// Queryset filter matching the applicable destination objects of the selected type
type Relationship_DestinationFilter struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Queryset filter matching the applicable source objects of the selected type
type Relationship_SourceFilter struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RelationshipAssociation defines model for RelationshipAssociation.
type RelationshipAssociation struct {
	DestinationId   openapi_types.UUID  `json:"destination_id"`
	DestinationType string              `json:"destination_type"`
	Id              *openapi_types.UUID `json:"id,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Relationship NestedRelationship `json:"relationship"`
	SourceId     openapi_types.UUID `json:"source_id"`
	SourceType   string             `json:"source_type"`
}

// RelationshipTypeChoices defines model for RelationshipTypeChoices.
type RelationshipTypeChoices string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Role struct {
	Created      *openapi_types.Date `json:"created,omitempty"`
	CustomFields *Role_CustomFields  `json:"custom_fields,omitempty"`
	Description  *string             `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	PrefixCount *int                `json:"prefix_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
	VlanCount   *int                `json:"vlan_count,omitempty"`
	Weight      *int                `json:"weight,omitempty"`
}

// Role_CustomFields defines model for Role.CustomFields.
type Role_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RoleEnum defines model for RoleEnum.
type RoleEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type RouteTarget struct {
	Created      *openapi_types.Date       `json:"created,omitempty"`
	CustomFields *RouteTarget_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                   `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Route target value (formatted in accordance with RFC 4360)
	Name   string                `json:"name"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url *string `json:"url,omitempty"`
}

// RouteTarget_CustomFields defines model for RouteTarget.CustomFields.
type RouteTarget_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ScheduledJob defines model for ScheduledJob.
type ScheduledJob struct {
	ApprovalRequired *bool `json:"approval_required,omitempty"`

	// Datetime that the schedule was approved
	ApprovedAt     *time.Time `json:"approved_at,omitempty"`
	ApprovedByUser *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedUser)
		NestedUser `yaml:",inline"`
	} `json:"approved_by_user,omitempty"`

	// Datetime that this scheduled job was last modified
	DateChanged *time.Time `json:"date_changed,omitempty"`

	// Detailed description about the details of this scheduled job
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Interval    IntervalEnum        `json:"interval"`

	// Name of the fully qualified Nautobot Job class path
	JobClass string `json:"job_class"`
	JobModel *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedJob)
		NestedJob `yaml:",inline"`
	} `json:"job_model,omitempty"`

	// Datetime that the schedule last triggered the task to run. Reset to None if enabled is set to False.
	LastRunAt *time.Time `json:"last_run_at,omitempty"`

	// Short Description For This Task
	Name string `json:"name"`

	// Queue defined in CELERY_TASK_QUEUES. Leave None for default queuing.
	Queue *string `json:"queue"`

	// The name of the Celery task that should be run. (Example: "proj.tasks.import_contacts")
	Task string `json:"task"`

	// Running count of how many times the schedule has triggered the task
	TotalRunCount *int    `json:"total_run_count,omitempty"`
	Url           *string `json:"url,omitempty"`
	User          *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedUser)
		NestedUser `yaml:",inline"`
	} `json:"user,omitempty"`
}

// Serializer for `Secret` objects.
type Secret struct {
	Created      *openapi_types.Date  `json:"created,omitempty"`
	CustomFields *Secret_CustomFields `json:"custom_fields,omitempty"`
	Description  *string              `json:"description,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Name        string                `json:"name"`
	Parameters  *Secret_Parameters    `json:"parameters,omitempty"`
	Provider    string                `json:"provider"`
	Slug        *string               `json:"slug,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// Secret_CustomFields defines model for Secret.CustomFields.
type Secret_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Secret_Parameters defines model for Secret.Parameters.
type Secret_Parameters struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// SecretTypeEnum defines model for SecretTypeEnum.
type SecretTypeEnum string

// Serializer for `SecretsGroup` objects.
type SecretsGroup struct {
	Created      *openapi_types.Date        `json:"created,omitempty"`
	CustomFields *SecretsGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                    `json:"description,omitempty"`

	// Human friendly display value
	Display     *string                          `json:"display,omitempty"`
	Id          *openapi_types.UUID              `json:"id,omitempty"`
	LastUpdated *time.Time                       `json:"last_updated,omitempty"`
	Name        string                           `json:"name"`
	Secrets     *[]NestedSecretsGroupAssociation `json:"secrets,omitempty"`
	Slug        *string                          `json:"slug,omitempty"`
	Url         *string                          `json:"url,omitempty"`
}

// SecretsGroup_CustomFields defines model for SecretsGroup.CustomFields.
type SecretsGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Serializer for `SecretsGroupAssociation` objects.
type SecretsGroupAssociation struct {
	AccessType AccessTypeEnum `json:"access_type"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Group NestedSecretsGroup  `json:"group"`
	Id    *openapi_types.UUID `json:"id,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Secret     NestedSecret   `json:"secret"`
	SecretType SecretTypeEnum `json:"secret_type"`
	Url        *string        `json:"url,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Service struct {
	Created      *openapi_types.Date   `json:"created,omitempty"`
	CustomFields *Service_CustomFields `json:"custom_fields,omitempty"`
	Description  *string               `json:"description,omitempty"`
	Device       *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"device"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Ipaddresses *[]struct {
		Address string `json:"address"`

		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Family  *int                `json:"family,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Url     *string             `json:"url,omitempty"`
	} `json:"ipaddresses,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	Name        string     `json:"name"`
	Ports       []int      `json:"ports"`
	Protocol    *struct {
		Label *ServiceProtocolLabel `json:"label,omitempty"`
		Value *ServiceProtocolValue `json:"value,omitempty"`
	} `json:"protocol,omitempty"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	Url            *string               `json:"url,omitempty"`
	VirtualMachine *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVirtualMachine)
		NestedVirtualMachine `yaml:",inline"`
	} `json:"virtual_machine"`
}

// Service_CustomFields defines model for Service.CustomFields.
type Service_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// ServiceProtocolLabel defines model for Service.Protocol.Label.
type ServiceProtocolLabel string

// ServiceProtocolValue defines model for Service.Protocol.Value.
type ServiceProtocolValue string

// Mixin to add `status` choice field to model serializers.
type Site struct {
	// 32-bit autonomous system number
	Asn          *int64               `json:"asn"`
	CircuitCount *int                 `json:"circuit_count,omitempty"`
	Comments     *string              `json:"comments,omitempty"`
	ContactEmail *openapi_types.Email `json:"contact_email,omitempty"`
	ContactName  *string              `json:"contact_name,omitempty"`
	ContactPhone *string              `json:"contact_phone,omitempty"`
	Created      *openapi_types.Date  `json:"created,omitempty"`
	CustomFields *Site_CustomFields   `json:"custom_fields,omitempty"`
	Description  *string              `json:"description,omitempty"`
	DeviceCount  *int                 `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Local facility ID or description
	Facility    *string             `json:"facility,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// GPS coordinate (latitude)
	Latitude *string `json:"latitude"`

	// GPS coordinate (longitude)
	Longitude       *string `json:"longitude"`
	Name            string  `json:"name"`
	PhysicalAddress *string `json:"physical_address,omitempty"`
	PrefixCount     *int    `json:"prefix_count,omitempty"`
	RackCount       *int    `json:"rack_count,omitempty"`
	Region          *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRegion)
		NestedRegion `yaml:",inline"`
	} `json:"region"`
	ShippingAddress *string `json:"shipping_address,omitempty"`
	Slug            *string `json:"slug,omitempty"`
	Status          struct {
		Label *SiteStatusLabel `json:"label,omitempty"`
		Value *SiteStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	TimeZone            *string `json:"time_zone"`
	Url                 *string `json:"url,omitempty"`
	VirtualmachineCount *int    `json:"virtualmachine_count,omitempty"`
	VlanCount           *int    `json:"vlan_count,omitempty"`
}

// Site_CustomFields defines model for Site.CustomFields.
type Site_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// SiteStatusLabel defines model for Site.Status.Label.
type SiteStatusLabel string

// SiteStatusValue defines model for Site.Status.Value.
type SiteStatusValue string

// Serializer for `Status` objects.
type Status struct {
	Color        *string              `json:"color,omitempty"`
	ContentTypes []string             `json:"content_types"`
	Created      *openapi_types.Date  `json:"created,omitempty"`
	CustomFields *Status_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// Status_CustomFields defines model for Status.CustomFields.
type Status_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// SubdeviceRoleEnum defines model for SubdeviceRoleEnum.
type SubdeviceRoleEnum string

// SupplyEnum defines model for SupplyEnum.
type SupplyEnum string

// NestedSerializer field for `Tag` object fields.
type TagSerializerField struct {
	Color *string `json:"color,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    string              `json:"name"`
	Slug    string              `json:"slug"`
	Url     *string             `json:"url,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type TagSerializerVersion13 struct {
	Color        *string                              `json:"color,omitempty"`
	ContentTypes []string                             `json:"content_types"`
	Created      *openapi_types.Date                  `json:"created,omitempty"`
	CustomFields *TagSerializerVersion13_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                              `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Slug        string              `json:"slug"`
	TaggedItems *int                `json:"tagged_items,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// TagSerializerVersion13_CustomFields defines model for TagSerializerVersion13.CustomFields.
type TagSerializerVersion13_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type Tenant struct {
	CircuitCount *int                 `json:"circuit_count,omitempty"`
	ClusterCount *int                 `json:"cluster_count,omitempty"`
	Comments     *string              `json:"comments,omitempty"`
	Created      *openapi_types.Date  `json:"created,omitempty"`
	CustomFields *Tenant_CustomFields `json:"custom_fields,omitempty"`
	Description  *string              `json:"description,omitempty"`
	DeviceCount  *int                 `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Group               *NestedTenantGroup    `json:"group,omitempty"`
	Id                  *openapi_types.UUID   `json:"id,omitempty"`
	IpaddressCount      *int                  `json:"ipaddress_count,omitempty"`
	LastUpdated         *time.Time            `json:"last_updated,omitempty"`
	Name                string                `json:"name"`
	PrefixCount         *int                  `json:"prefix_count,omitempty"`
	RackCount           *int                  `json:"rack_count,omitempty"`
	SiteCount           *int                  `json:"site_count,omitempty"`
	Slug                *string               `json:"slug,omitempty"`
	Tags                *[]TagSerializerField `json:"tags,omitempty"`
	Url                 *string               `json:"url,omitempty"`
	VirtualmachineCount *int                  `json:"virtualmachine_count,omitempty"`
	VlanCount           *int                  `json:"vlan_count,omitempty"`
	VrfCount            *int                  `json:"vrf_count,omitempty"`
}

// Tenant_CustomFields defines model for Tenant.CustomFields.
type Tenant_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type TenantGroup struct {
	Depth        *int                      `json:"_depth,omitempty"`
	Created      *openapi_types.Date       `json:"created,omitempty"`
	CustomFields *TenantGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                   `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Parent      *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenantGroup)
		NestedTenantGroup `yaml:",inline"`
	} `json:"parent"`
	Slug        *string `json:"slug,omitempty"`
	TenantCount *int    `json:"tenant_count,omitempty"`
	Url         *string `json:"url,omitempty"`
}

// TenantGroup_CustomFields defines model for TenantGroup.CustomFields.
type TenantGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// TermSideEnum defines model for TermSideEnum.
type TermSideEnum string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type Token struct {
	Created     *time.Time `json:"created,omitempty"`
	Description *string    `json:"description,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Expires *time.Time          `json:"expires"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Key     *string             `json:"key,omitempty"`
	Url     *string             `json:"url,omitempty"`

	// Permit create/update/delete operations using this key
	WriteEnabled *bool `json:"write_enabled,omitempty"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type User struct {
	DateJoined *time.Time `json:"date_joined,omitempty"`

	// Human friendly display value
	Display   *string              `json:"display,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	FirstName *string              `json:"first_name,omitempty"`
	Groups    *[]struct {
		// Human friendly display value
		Display *string `json:"display,omitempty"`
		Id      *int    `json:"id,omitempty"`
		Name    string  `json:"name"`
		Url     *string `json:"url,omitempty"`
	} `json:"groups,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
	IsActive *bool `json:"is_active,omitempty"`

	// Designates whether the user can log into this admin site.
	IsStaff  *bool   `json:"is_staff,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	Password *string `json:"password,omitempty"`
	Url      *string `json:"url,omitempty"`

	// Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	Username string `json:"username"`
}

// Mixin to add `status` choice field to model serializers.
type VLAN struct {
	Created      *openapi_types.Date `json:"created,omitempty"`
	CustomFields *VLAN_CustomFields  `json:"custom_fields,omitempty"`
	Description  *string             `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Group   *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVLANGroup)
		NestedVLANGroup `yaml:",inline"`
	} `json:"group"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	PrefixCount *int                `json:"prefix_count,omitempty"`
	Role        *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedRole)
		NestedRole `yaml:",inline"`
	} `json:"role"`
	Site *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site"`
	Status struct {
		Label *VLANStatusLabel `json:"label,omitempty"`
		Value *VLANStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url *string `json:"url,omitempty"`
	Vid int     `json:"vid"`
}

// VLAN_CustomFields defines model for VLAN.CustomFields.
type VLAN_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// VLANStatusLabel defines model for VLAN.Status.Label.
type VLANStatusLabel string

// VLANStatusValue defines model for VLAN.Status.Value.
type VLANStatusValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type VLANGroup struct {
	Created      *openapi_types.Date     `json:"created,omitempty"`
	CustomFields *VLANGroup_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                 `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Site        *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site"`
	Slug      *string `json:"slug,omitempty"`
	Url       *string `json:"url,omitempty"`
	VlanCount *int    `json:"vlan_count,omitempty"`
}

// VLANGroup_CustomFields defines model for VLANGroup.CustomFields.
type VLANGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type VMInterface struct {
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	Enabled    *bool               `json:"enabled,omitempty"`
	Id         *openapi_types.UUID `json:"id,omitempty"`
	MacAddress *string             `json:"mac_address"`
	Mode       *struct {
		Label *VMInterfaceModeLabel `json:"label,omitempty"`
		Value *VMInterfaceModeValue `json:"value,omitempty"`
	} `json:"mode,omitempty"`
	Mtu         *int   `json:"mtu"`
	Name        string `json:"name"`
	TaggedVlans *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`
		Name    string              `json:"name"`
		Url     *string             `json:"url,omitempty"`
		Vid     int                 `json:"vid"`
	} `json:"tagged_vlans,omitempty"`
	Tags         *[]TagSerializerField `json:"tags,omitempty"`
	UntaggedVlan *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedVLAN)
		NestedVLAN `yaml:",inline"`
	} `json:"untagged_vlan"`
	Url *string `json:"url,omitempty"`

	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	VirtualMachine NestedVirtualMachine `json:"virtual_machine"`
}

// VMInterfaceModeLabel defines model for VMInterface.Mode.Label.
type VMInterfaceModeLabel string

// VMInterfaceModeValue defines model for VMInterface.Mode.Value.
type VMInterfaceModeValue string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type VRF struct {
	Created      *openapi_types.Date `json:"created,omitempty"`
	CustomFields *VRF_CustomFields   `json:"custom_fields,omitempty"`
	Description  *string             `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Prevent duplicate prefixes/IP addresses within this VRF
	EnforceUnique *bool `json:"enforce_unique,omitempty"`
	ExportTargets *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`

		// Route target value (formatted in accordance with RFC 4360)
		Name string  `json:"name"`
		Url  *string `json:"url,omitempty"`
	} `json:"export_targets,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	ImportTargets *[]struct {
		// Human friendly display value
		Display *string             `json:"display,omitempty"`
		Id      *openapi_types.UUID `json:"id,omitempty"`

		// Route target value (formatted in accordance with RFC 4360)
		Name string  `json:"name"`
		Url  *string `json:"url,omitempty"`
	} `json:"import_targets,omitempty"`
	IpaddressCount *int       `json:"ipaddress_count,omitempty"`
	LastUpdated    *time.Time `json:"last_updated,omitempty"`
	Name           string     `json:"name"`
	PrefixCount    *int       `json:"prefix_count,omitempty"`

	// Unique route distinguisher (as defined in RFC 4364)
	Rd     *string               `json:"rd"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url *string `json:"url,omitempty"`
}

// VRF_CustomFields defines model for VRF.CustomFields.
type VRF_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type VirtualChassis struct {
	CustomFields *VirtualChassis_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Domain  *string             `json:"domain,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Master  *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"master"`
	MemberCount *int                  `json:"member_count,omitempty"`
	Name        string                `json:"name"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// VirtualChassis_CustomFields defines model for VirtualChassis.CustomFields.
type VirtualChassis_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type VirtualMachineWithConfigContext struct {
	// Returns a nested representation of an object on read, but accepts either the nested representation or the
	// primary key value on write operations.
	Cluster       NestedCluster                                  `json:"cluster"`
	Comments      *string                                        `json:"comments,omitempty"`
	ConfigContext *VirtualMachineWithConfigContext_ConfigContext `json:"config_context,omitempty"`
	Created       *openapi_types.Date                            `json:"created,omitempty"`
	CustomFields  *VirtualMachineWithConfigContext_CustomFields  `json:"custom_fields,omitempty"`
	Disk          *int                                           `json:"disk"`

	// Human friendly display value
	Display            *string                                           `json:"display,omitempty"`
	Id                 *openapi_types.UUID                               `json:"id,omitempty"`
	LastUpdated        *time.Time                                        `json:"last_updated,omitempty"`
	LocalContextData   *VirtualMachineWithConfigContext_LocalContextData `json:"local_context_data"`
	LocalContextSchema *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedConfigContextSchema)
		NestedConfigContextSchema `yaml:",inline"`
	} `json:"local_context_schema"`
	Memory   *int   `json:"memory"`
	Name     string `json:"name"`
	Platform *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedPlatform)
		NestedPlatform `yaml:",inline"`
	} `json:"platform"`
	PrimaryIp *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4 *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip4"`
	PrimaryIp6 *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip6"`
	Role *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDeviceRole)
		NestedDeviceRole `yaml:",inline"`
	} `json:"role"`
	Site *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site,omitempty"`
	Status struct {
		Label *VirtualMachineWithConfigContextStatusLabel `json:"label,omitempty"`
		Value *VirtualMachineWithConfigContextStatusValue `json:"value,omitempty"`
	} `json:"status"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedTenant)
		NestedTenant `yaml:",inline"`
	} `json:"tenant"`
	Url   *string `json:"url,omitempty"`
	Vcpus *int    `json:"vcpus"`
}

// VirtualMachineWithConfigContext_ConfigContext defines model for VirtualMachineWithConfigContext.ConfigContext.
type VirtualMachineWithConfigContext_ConfigContext struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// VirtualMachineWithConfigContext_CustomFields defines model for VirtualMachineWithConfigContext.CustomFields.
type VirtualMachineWithConfigContext_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// VirtualMachineWithConfigContext_LocalContextData defines model for VirtualMachineWithConfigContext.LocalContextData.
type VirtualMachineWithConfigContext_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// VirtualMachineWithConfigContextStatusLabel defines model for VirtualMachineWithConfigContext.Status.Label.
type VirtualMachineWithConfigContextStatusLabel string

// VirtualMachineWithConfigContextStatusValue defines model for VirtualMachineWithConfigContext.Status.Value.
type VirtualMachineWithConfigContextStatusValue string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type Webhook struct {
	// User-supplied HTTP headers to be sent with the request in addition to the HTTP content type. Headers should be defined in the format <code>Name: Value</code>. Jinja2 template processing is support with the same context as the request body (below).
	AdditionalHeaders *string `json:"additional_headers,omitempty"`

	// Jinja2 template for a custom request body. If blank, a JSON object representing the change will be included. Available context data includes: <code>event</code>, <code>model</code>, <code>timestamp</code>, <code>username</code>, <code>request_id</code>, and <code>data</code>.
	BodyTemplate *string `json:"body_template,omitempty"`

	// The specific CA certificate file to use for SSL verification. Leave blank to use the system defaults.
	CaFilePath   *string  `json:"ca_file_path"`
	ContentTypes []string `json:"content_types"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// The complete list of official content types is available <a href="https://www.iana.org/assignments/media-types/media-types.xhtml">here</a>.
	HttpContentType *string             `json:"http_content_type,omitempty"`
	HttpMethod      *HttpMethodEnum     `json:"http_method,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	Name            string              `json:"name"`

	// A POST will be sent to this URL when the webhook is called.
	PayloadUrl string `json:"payload_url"`

	// When provided, the request will include a 'X-Hook-Signature' header containing a HMAC hex digest of the payload body using the secret as the key. The secret is not transmitted in the request.
	Secret *string `json:"secret,omitempty"`

	// Enable SSL certificate verification. Disable with caution!
	SslVerification *bool `json:"ssl_verification,omitempty"`

	// Call this webhook when a matching object is created.
	TypeCreate *bool `json:"type_create,omitempty"`

	// Call this webhook when a matching object is deleted.
	TypeDelete *bool `json:"type_delete,omitempty"`

	// Call this webhook when a matching object is updated.
	TypeUpdate *bool   `json:"type_update,omitempty"`
	Url        *string `json:"url,omitempty"`
}

// WidthEnum defines model for WidthEnum.
type WidthEnum int

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableAggregate struct {
	ComputedFields *WritableAggregate_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date               `json:"created,omitempty"`
	CustomFields   *WritableAggregate_CustomFields   `json:"custom_fields,omitempty"`
	DateAdded      *openapi_types.Date               `json:"date_added"`
	Description    *string                           `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Family  *struct {
		// Embedded struct due to allOf(#/components/schemas/FamilyEnum)
		FamilyEnum `yaml:",inline"`
	} `json:"family,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Prefix      string                `json:"prefix"`
	Rir         openapi_types.UUID    `json:"rir"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Tenant      *openapi_types.UUID   `json:"tenant"`
	Url         *string               `json:"url,omitempty"`
}

// WritableAggregate_ComputedFields defines model for WritableAggregate.ComputedFields.
type WritableAggregate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableAggregate_CustomFields defines model for WritableAggregate.CustomFields.
type WritableAggregate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritableCable struct {
	Color          *string                       `json:"color,omitempty"`
	ComputedFields *WritableCable_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableCable_CustomFields   `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display          *string                     `json:"display,omitempty"`
	Id               *openapi_types.UUID         `json:"id,omitempty"`
	Label            *string                     `json:"label,omitempty"`
	Length           *int                        `json:"length"`
	LengthUnit       *interface{}                `json:"length_unit,omitempty"`
	Status           WritableCableStatusEnum     `json:"status"`
	Tags             *[]TagSerializerField       `json:"tags,omitempty"`
	TerminationA     *WritableCable_TerminationA `json:"termination_a"`
	TerminationAId   openapi_types.UUID          `json:"termination_a_id"`
	TerminationAType string                      `json:"termination_a_type"`
	TerminationB     *WritableCable_TerminationB `json:"termination_b"`
	TerminationBId   openapi_types.UUID          `json:"termination_b_id"`
	TerminationBType string                      `json:"termination_b_type"`
	Type             *interface{}                `json:"type,omitempty"`
	Url              *string                     `json:"url,omitempty"`
}

// WritableCable_ComputedFields defines model for WritableCable.ComputedFields.
type WritableCable_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCable_CustomFields defines model for WritableCable.CustomFields.
type WritableCable_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCable_TerminationA defines model for WritableCable.TerminationA.
type WritableCable_TerminationA struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCable_TerminationB defines model for WritableCable.TerminationB.
type WritableCable_TerminationB struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCableStatusEnum defines model for WritableCableStatusEnum.
type WritableCableStatusEnum string

// Mixin to add `status` choice field to model serializers.
type WritableCircuit struct {
	Cid            string                          `json:"cid"`
	Comments       *string                         `json:"comments,omitempty"`
	CommitRate     *int                            `json:"commit_rate"`
	ComputedFields *WritableCircuit_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date             `json:"created,omitempty"`
	CustomFields   *WritableCircuit_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                         `json:"description,omitempty"`

	// Human friendly display value
	Display      *string                   `json:"display,omitempty"`
	Id           *openapi_types.UUID       `json:"id,omitempty"`
	InstallDate  *openapi_types.Date       `json:"install_date"`
	LastUpdated  *time.Time                `json:"last_updated,omitempty"`
	Provider     openapi_types.UUID        `json:"provider"`
	Status       WritableCircuitStatusEnum `json:"status"`
	Tags         *[]TagSerializerField     `json:"tags,omitempty"`
	Tenant       *openapi_types.UUID       `json:"tenant"`
	TerminationA *struct {
		// Embedded struct due to allOf(#/components/schemas/CircuitCircuitTermination)
		CircuitCircuitTermination `yaml:",inline"`
	} `json:"termination_a,omitempty"`
	TerminationZ *struct {
		// Embedded struct due to allOf(#/components/schemas/CircuitCircuitTermination)
		CircuitCircuitTermination `yaml:",inline"`
	} `json:"termination_z,omitempty"`
	Type openapi_types.UUID `json:"type"`
	Url  *string            `json:"url,omitempty"`
}

// WritableCircuit_ComputedFields defines model for WritableCircuit.ComputedFields.
type WritableCircuit_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCircuit_CustomFields defines model for WritableCircuit.CustomFields.
type WritableCircuit_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCircuitStatusEnum defines model for WritableCircuitStatusEnum.
type WritableCircuitStatusEnum string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableCircuitTermination struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritableCircuitTermination_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                       `json:"cable_peer_type"`
	Circuit                    openapi_types.UUID                            `json:"circuit"`
	ConnectedEndpoint          *WritableCircuitTermination_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                         `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                       `json:"connected_endpoint_type"`
	Description                *string                                       `json:"description,omitempty"`

	// Human friendly display value
	Display         *string             `json:"display,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	PortSpeed       *int                `json:"port_speed"`
	PpInfo          *string             `json:"pp_info,omitempty"`
	ProviderNetwork *openapi_types.UUID `json:"provider_network"`
	Site            *openapi_types.UUID `json:"site"`
	TermSide        struct {
		// Embedded struct due to allOf(#/components/schemas/TermSideEnum)
		TermSideEnum `yaml:",inline"`
	} `json:"term_side"`

	// Upstream speed, if different from port speed
	UpstreamSpeed *int    `json:"upstream_speed"`
	Url           *string `json:"url,omitempty"`
	XconnectId    *string `json:"xconnect_id,omitempty"`
}

// WritableCircuitTermination_CablePeer defines model for WritableCircuitTermination.CablePeer.
type WritableCircuitTermination_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCircuitTermination_ConnectedEndpoint defines model for WritableCircuitTermination.ConnectedEndpoint.
type WritableCircuitTermination_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableCluster struct {
	Comments       *string                         `json:"comments,omitempty"`
	ComputedFields *WritableCluster_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date             `json:"created,omitempty"`
	CustomFields   *WritableCluster_CustomFields   `json:"custom_fields,omitempty"`
	DeviceCount    *int                            `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string               `json:"display,omitempty"`
	Group               *openapi_types.UUID   `json:"group"`
	Id                  *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated         *time.Time            `json:"last_updated,omitempty"`
	Name                string                `json:"name"`
	Site                *openapi_types.UUID   `json:"site"`
	Tags                *[]TagSerializerField `json:"tags,omitempty"`
	Tenant              *openapi_types.UUID   `json:"tenant"`
	Type                openapi_types.UUID    `json:"type"`
	Url                 *string               `json:"url,omitempty"`
	VirtualmachineCount *int                  `json:"virtualmachine_count,omitempty"`
}

// WritableCluster_ComputedFields defines model for WritableCluster.ComputedFields.
type WritableCluster_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableCluster_CustomFields defines model for WritableCluster.CustomFields.
type WritableCluster_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableConfigContext struct {
	ClusterGroups *[]openapi_types.UUID      `json:"cluster_groups,omitempty"`
	Clusters      *[]openapi_types.UUID      `json:"clusters,omitempty"`
	Created       *openapi_types.Date        `json:"created,omitempty"`
	Data          WritableConfigContext_Data `json:"data"`
	Description   *string                    `json:"description,omitempty"`
	DeviceTypes   *[]openapi_types.UUID      `json:"device_types,omitempty"`

	// Human friendly display value
	Display          *string                      `json:"display,omitempty"`
	Id               *openapi_types.UUID          `json:"id,omitempty"`
	IsActive         *bool                        `json:"is_active,omitempty"`
	LastUpdated      *time.Time                   `json:"last_updated,omitempty"`
	Name             string                       `json:"name"`
	Owner            *WritableConfigContext_Owner `json:"owner"`
	OwnerContentType *string                      `json:"owner_content_type"`
	OwnerObjectId    *openapi_types.UUID          `json:"owner_object_id"`
	Platforms        *[]openapi_types.UUID        `json:"platforms,omitempty"`
	Regions          *[]openapi_types.UUID        `json:"regions,omitempty"`
	Roles            *[]openapi_types.UUID        `json:"roles,omitempty"`

	// Optional schema to validate the structure of the data
	Schema       *openapi_types.UUID   `json:"schema"`
	Sites        *[]openapi_types.UUID `json:"sites,omitempty"`
	Tags         *[]string             `json:"tags,omitempty"`
	TenantGroups *[]openapi_types.UUID `json:"tenant_groups,omitempty"`
	Tenants      *[]openapi_types.UUID `json:"tenants,omitempty"`
	Url          *string               `json:"url,omitempty"`
	Weight       *int                  `json:"weight,omitempty"`
}

// WritableConfigContext_Data defines model for WritableConfigContext.Data.
type WritableConfigContext_Data struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConfigContext_Owner defines model for WritableConfigContext.Owner.
type WritableConfigContext_Owner struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableConsolePort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritableConsolePort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                `json:"cable_peer_type"`
	ComputedFields             *WritableConsolePort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *WritableConsolePort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                  `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                `json:"connected_endpoint_type"`
	CustomFields               *WritableConsolePort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                `json:"description,omitempty"`
	Device                     openapi_types.UUID                     `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  string                `json:"name"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// WritableConsolePort_CablePeer defines model for WritableConsolePort.CablePeer.
type WritableConsolePort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsolePort_ComputedFields defines model for WritableConsolePort.ComputedFields.
type WritableConsolePort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsolePort_ConnectedEndpoint defines model for WritableConsolePort.ConnectedEndpoint.
type WritableConsolePort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsolePort_CustomFields defines model for WritableConsolePort.CustomFields.
type WritableConsolePort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableConsolePortTemplate struct {
	ComputedFields *WritableConsolePortTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableConsolePortTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                     `json:"description,omitempty"`
	DeviceType     openapi_types.UUID                          `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string      `json:"label,omitempty"`
	Name  string       `json:"name"`
	Type  *interface{} `json:"type,omitempty"`
	Url   *string      `json:"url,omitempty"`
}

// WritableConsolePortTemplate_ComputedFields defines model for WritableConsolePortTemplate.ComputedFields.
type WritableConsolePortTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsolePortTemplate_CustomFields defines model for WritableConsolePortTemplate.CustomFields.
type WritableConsolePortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableConsoleServerPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritableConsoleServerPort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                      `json:"cable_peer_type"`
	ComputedFields             *WritableConsoleServerPort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *WritableConsoleServerPort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                        `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                      `json:"connected_endpoint_type"`
	CustomFields               *WritableConsoleServerPort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                      `json:"description,omitempty"`
	Device                     openapi_types.UUID                           `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  string                `json:"name"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// WritableConsoleServerPort_CablePeer defines model for WritableConsoleServerPort.CablePeer.
type WritableConsoleServerPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsoleServerPort_ComputedFields defines model for WritableConsoleServerPort.ComputedFields.
type WritableConsoleServerPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsoleServerPort_ConnectedEndpoint defines model for WritableConsoleServerPort.ConnectedEndpoint.
type WritableConsoleServerPort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableConsoleServerPort_CustomFields defines model for WritableConsoleServerPort.CustomFields.
type WritableConsoleServerPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableConsoleServerPortTemplate struct {
	CustomFields *WritableConsoleServerPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                                         `json:"description,omitempty"`
	DeviceType   openapi_types.UUID                              `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string      `json:"label,omitempty"`
	Name  string       `json:"name"`
	Type  *interface{} `json:"type,omitempty"`
	Url   *string      `json:"url,omitempty"`
}

// WritableConsoleServerPortTemplate_CustomFields defines model for WritableConsoleServerPortTemplate.CustomFields.
type WritableConsoleServerPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableCustomField struct {
	ContentTypes []string `json:"content_types"`

	// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. "Foo").
	Default *WritableCustomField_Default `json:"default"`

	// A helpful description for this field.
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Loose matches any instance of a given string; Exact matches the entire field.
	FilterLogic *struct {
		// Embedded struct due to allOf(#/components/schemas/FilterLogicEnum)
		FilterLogicEnum `yaml:",inline"`
	} `json:"filter_logic,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Name of the field as displayed to users (if not provided, the field's slug will be used.)
	Label *string `json:"label,omitempty"`

	// URL-friendly unique shorthand.
	Name string `json:"name"`

	// If true, this field is required when creating new objects or editing an existing object.
	Required *bool `json:"required,omitempty"`

	// The type of value(s) allowed for this field.
	Type *struct {
		// Embedded struct due to allOf(#/components/schemas/CustomFieldTypeChoices)
		CustomFieldTypeChoices `yaml:",inline"`
	} `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`

	// Maximum allowed value (for numeric fields).
	ValidationMaximum *int64 `json:"validation_maximum"`

	// Minimum allowed value (for numeric fields).
	ValidationMinimum *int64 `json:"validation_minimum"`

	// Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters. Regular expression on select and multi-select will be applied at <code>Custom Field Choices</code> definition.
	ValidationRegex *string `json:"validation_regex,omitempty"`

	// Fields with higher weights appear lower in a form.
	Weight *int `json:"weight,omitempty"`
}

// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. "Foo").
type WritableCustomField_Default struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableCustomFieldChoice struct {
	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Field   openapi_types.UUID  `json:"field"`
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Url     *string             `json:"url,omitempty"`
	Value   string              `json:"value"`

	// Higher weights appear later in the list
	Weight *int `json:"weight,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableDeviceBay struct {
	ComputedFields *WritableDeviceBay_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableDeviceBay_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                           `json:"description,omitempty"`
	Device         openapi_types.UUID                `json:"device"`

	// Human friendly display value
	Display         *string             `json:"display,omitempty"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	InstalledDevice *openapi_types.UUID `json:"installed_device"`

	// Physical label
	Label *string               `json:"label,omitempty"`
	Name  string                `json:"name"`
	Tags  *[]TagSerializerField `json:"tags,omitempty"`
	Url   *string               `json:"url,omitempty"`
}

// WritableDeviceBay_ComputedFields defines model for WritableDeviceBay.ComputedFields.
type WritableDeviceBay_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceBay_CustomFields defines model for WritableDeviceBay.CustomFields.
type WritableDeviceBay_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableDeviceBayTemplate struct {
	ComputedFields *WritableDeviceBayTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableDeviceBayTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                   `json:"description,omitempty"`
	DeviceType     openapi_types.UUID                        `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`
	Name  string  `json:"name"`
	Url   *string `json:"url,omitempty"`
}

// WritableDeviceBayTemplate_ComputedFields defines model for WritableDeviceBayTemplate.ComputedFields.
type WritableDeviceBayTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceBayTemplate_CustomFields defines model for WritableDeviceBayTemplate.CustomFields.
type WritableDeviceBayTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableDeviceType struct {
	Comments       *string                            `json:"comments,omitempty"`
	ComputedFields *WritableDeviceType_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                `json:"created,omitempty"`
	CustomFields   *WritableDeviceType_CustomFields   `json:"custom_fields,omitempty"`
	DeviceCount    *int                               `json:"device_count,omitempty"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	FrontImage *string             `json:"front_image,omitempty"`
	Id         *openapi_types.UUID `json:"id,omitempty"`

	// Device consumes both front and rear rack faces
	IsFullDepth  *bool              `json:"is_full_depth,omitempty"`
	LastUpdated  *time.Time         `json:"last_updated,omitempty"`
	Manufacturer openapi_types.UUID `json:"manufacturer"`
	Model        string             `json:"model"`

	// Discrete part number (optional)
	PartNumber *string `json:"part_number,omitempty"`
	RearImage  *string `json:"rear_image,omitempty"`
	Slug       *string `json:"slug,omitempty"`

	// Parent devices house child devices in device bays. Leave blank if this device type is neither a parent nor a child.
	SubdeviceRole *interface{}          `json:"subdevice_role,omitempty"`
	Tags          *[]TagSerializerField `json:"tags,omitempty"`
	UHeight       *int                  `json:"u_height,omitempty"`
	Url           *string               `json:"url,omitempty"`
}

// WritableDeviceType_ComputedFields defines model for WritableDeviceType.ComputedFields.
type WritableDeviceType_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceType_CustomFields defines model for WritableDeviceType.CustomFields.
type WritableDeviceType_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritableDeviceWithConfigContext struct {
	// A unique tag used to identify this device
	AssetTag       *string                                         `json:"asset_tag"`
	Cluster        *openapi_types.UUID                             `json:"cluster"`
	Comments       *string                                         `json:"comments,omitempty"`
	ComputedFields *WritableDeviceWithConfigContext_ComputedFields `json:"computed_fields,omitempty"`
	ConfigContext  *WritableDeviceWithConfigContext_ConfigContext  `json:"config_context,omitempty"`
	Created        *openapi_types.Date                             `json:"created,omitempty"`
	CustomFields   *WritableDeviceWithConfigContext_CustomFields   `json:"custom_fields,omitempty"`
	DeviceRole     openapi_types.UUID                              `json:"device_role"`
	DeviceType     openapi_types.UUID                              `json:"device_type"`

	// Human friendly display value
	Display          *string                                           `json:"display,omitempty"`
	Face             *interface{}                                      `json:"face,omitempty"`
	Id               *openapi_types.UUID                               `json:"id,omitempty"`
	LastUpdated      *time.Time                                        `json:"last_updated,omitempty"`
	LocalContextData *WritableDeviceWithConfigContext_LocalContextData `json:"local_context_data"`

	// Optional schema to validate the structure of the data
	LocalContextSchema *openapi_types.UUID `json:"local_context_schema"`
	Name               *string             `json:"name"`
	ParentDevice       *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedDevice)
		NestedDevice `yaml:",inline"`
	} `json:"parent_device,omitempty"`
	Platform *openapi_types.UUID `json:"platform"`

	// The lowest-numbered unit occupied by the device
	Position  *int `json:"position"`
	PrimaryIp *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4     *openapi_types.UUID                       `json:"primary_ip4"`
	PrimaryIp6     *openapi_types.UUID                       `json:"primary_ip6"`
	Rack           *openapi_types.UUID                       `json:"rack"`
	SecretsGroup   *openapi_types.UUID                       `json:"secrets_group"`
	Serial         *string                                   `json:"serial,omitempty"`
	Site           openapi_types.UUID                        `json:"site"`
	Status         WritableDeviceWithConfigContextStatusEnum `json:"status"`
	Tags           *[]TagSerializerField                     `json:"tags,omitempty"`
	Tenant         *openapi_types.UUID                       `json:"tenant"`
	Url            *string                                   `json:"url,omitempty"`
	VcPosition     *int                                      `json:"vc_position"`
	VcPriority     *int                                      `json:"vc_priority"`
	VirtualChassis *openapi_types.UUID                       `json:"virtual_chassis"`
}

// WritableDeviceWithConfigContext_ComputedFields defines model for WritableDeviceWithConfigContext.ComputedFields.
type WritableDeviceWithConfigContext_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceWithConfigContext_ConfigContext defines model for WritableDeviceWithConfigContext.ConfigContext.
type WritableDeviceWithConfigContext_ConfigContext struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceWithConfigContext_CustomFields defines model for WritableDeviceWithConfigContext.CustomFields.
type WritableDeviceWithConfigContext_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceWithConfigContext_LocalContextData defines model for WritableDeviceWithConfigContext.LocalContextData.
type WritableDeviceWithConfigContext_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableDeviceWithConfigContextStatusEnum defines model for WritableDeviceWithConfigContextStatusEnum.
type WritableDeviceWithConfigContextStatusEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableFrontPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer      *WritableFrontPort_CablePeer      `json:"cable_peer"`
	CablePeerType  *string                           `json:"cable_peer_type"`
	ComputedFields *WritableFrontPort_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableFrontPort_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                           `json:"description,omitempty"`
	Device         openapi_types.UUID                `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label            *string               `json:"label,omitempty"`
	Name             string                `json:"name"`
	RearPort         openapi_types.UUID    `json:"rear_port"`
	RearPortPosition *int                  `json:"rear_port_position,omitempty"`
	Tags             *[]TagSerializerField `json:"tags,omitempty"`
	Type             PortTypeChoices       `json:"type"`
	Url              *string               `json:"url,omitempty"`
}

// WritableFrontPort_CablePeer defines model for WritableFrontPort.CablePeer.
type WritableFrontPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableFrontPort_ComputedFields defines model for WritableFrontPort.ComputedFields.
type WritableFrontPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableFrontPort_CustomFields defines model for WritableFrontPort.CustomFields.
type WritableFrontPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableFrontPortTemplate struct {
	ComputedFields *WritableFrontPortTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableFrontPortTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                   `json:"description,omitempty"`
	DeviceType     openapi_types.UUID                        `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label            *string            `json:"label,omitempty"`
	Name             string             `json:"name"`
	RearPort         openapi_types.UUID `json:"rear_port"`
	RearPortPosition *int               `json:"rear_port_position,omitempty"`
	Type             PortTypeChoices    `json:"type"`
	Url              *string            `json:"url,omitempty"`
}

// WritableFrontPortTemplate_ComputedFields defines model for WritableFrontPortTemplate.ComputedFields.
type WritableFrontPortTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableFrontPortTemplate_CustomFields defines model for WritableFrontPortTemplate.CustomFields.
type WritableFrontPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Git repositories defined as a data source.
type WritableGitRepository struct {
	Branch         *string                               `json:"branch,omitempty"`
	ComputedFields *WritableGitRepository_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                   `json:"created,omitempty"`

	// Commit hash of the most recent fetch from the selected branch. Used for syncing between workers.
	CurrentHead  *string                             `json:"current_head,omitempty"`
	CustomFields *WritableGitRepository_CustomFields `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display          *string             `json:"display,omitempty"`
	Id               *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated      *time.Time          `json:"last_updated,omitempty"`
	Name             string              `json:"name"`
	ProvidedContents *[]interface{}      `json:"provided_contents,omitempty"`

	// Only HTTP and HTTPS URLs are presently supported
	RemoteUrl    string              `json:"remote_url"`
	SecretsGroup *openapi_types.UUID `json:"secrets_group"`
	Slug         *string             `json:"slug,omitempty"`
	Token        *string             `json:"token,omitempty"`
	Url          *string             `json:"url,omitempty"`
	Username     *string             `json:"username,omitempty"`
}

// WritableGitRepository_ComputedFields defines model for WritableGitRepository.ComputedFields.
type WritableGitRepository_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableGitRepository_CustomFields defines model for WritableGitRepository.CustomFields.
type WritableGitRepository_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritableIPAddress struct {
	Address            string                            `json:"address"`
	AssignedObject     *WritableIPAddress_AssignedObject `json:"assigned_object"`
	AssignedObjectId   *openapi_types.UUID               `json:"assigned_object_id"`
	AssignedObjectType *string                           `json:"assigned_object_type"`
	ComputedFields     *WritableIPAddress_ComputedFields `json:"computed_fields,omitempty"`
	Created            *openapi_types.Date               `json:"created,omitempty"`
	CustomFields       *WritableIPAddress_CustomFields   `json:"custom_fields,omitempty"`
	Description        *string                           `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Hostname or FQDN (not case-sensitive)
	DnsName *string `json:"dns_name,omitempty"`
	Family  *struct {
		// Embedded struct due to allOf(#/components/schemas/FamilyEnum)
		FamilyEnum `yaml:",inline"`
	} `json:"family,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// The IP Addresses for which this address is the "outside" IP
	NatInside  *openapi_types.UUID `json:"nat_inside"`
	NatOutside *[]NestedIPAddress  `json:"nat_outside,omitempty"`

	// The functional role of this IP
	Role   *interface{}                `json:"role,omitempty"`
	Status WritableIPAddressStatusEnum `json:"status"`
	Tags   *[]TagSerializerField       `json:"tags,omitempty"`
	Tenant *openapi_types.UUID         `json:"tenant"`
	Url    *string                     `json:"url,omitempty"`
	Vrf    *openapi_types.UUID         `json:"vrf"`
}

// WritableIPAddress_AssignedObject defines model for WritableIPAddress.AssignedObject.
type WritableIPAddress_AssignedObject struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableIPAddress_ComputedFields defines model for WritableIPAddress.ComputedFields.
type WritableIPAddress_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableIPAddress_CustomFields defines model for WritableIPAddress.CustomFields.
type WritableIPAddress_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableIPAddressStatusEnum defines model for WritableIPAddressStatusEnum.
type WritableIPAddressStatusEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableInterface struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritableInterface_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                              `json:"cable_peer_type"`
	ComputedFields             *WritableInterface_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *WritableInterface_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                              `json:"connected_endpoint_type"`
	CountIpaddresses           *int                                 `json:"count_ipaddresses,omitempty"`
	CustomFields               *WritableInterface_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                              `json:"description,omitempty"`
	Device                     openapi_types.UUID                   `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Enabled *bool               `json:"enabled,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label      *string             `json:"label,omitempty"`
	Lag        *openapi_types.UUID `json:"lag"`
	MacAddress *string             `json:"mac_address"`

	// This interface is used only for out-of-band management
	MgmtOnly     *bool                 `json:"mgmt_only,omitempty"`
	Mode         *interface{}          `json:"mode,omitempty"`
	Mtu          *int                  `json:"mtu"`
	Name         string                `json:"name"`
	TaggedVlans  *[]openapi_types.UUID `json:"tagged_vlans,omitempty"`
	Tags         *[]TagSerializerField `json:"tags,omitempty"`
	Type         InterfaceTypeChoices  `json:"type"`
	UntaggedVlan *openapi_types.UUID   `json:"untagged_vlan"`
	Url          *string               `json:"url,omitempty"`
}

// WritableInterface_CablePeer defines model for WritableInterface.CablePeer.
type WritableInterface_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableInterface_ComputedFields defines model for WritableInterface.ComputedFields.
type WritableInterface_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableInterface_ConnectedEndpoint defines model for WritableInterface.ConnectedEndpoint.
type WritableInterface_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableInterface_CustomFields defines model for WritableInterface.CustomFields.
type WritableInterface_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableInterfaceTemplate struct {
	ComputedFields *WritableInterfaceTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableInterfaceTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                   `json:"description,omitempty"`
	DeviceType     openapi_types.UUID                        `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label    *string              `json:"label,omitempty"`
	MgmtOnly *bool                `json:"mgmt_only,omitempty"`
	Name     string               `json:"name"`
	Type     InterfaceTypeChoices `json:"type"`
	Url      *string              `json:"url,omitempty"`
}

// WritableInterfaceTemplate_ComputedFields defines model for WritableInterfaceTemplate.ComputedFields.
type WritableInterfaceTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableInterfaceTemplate_CustomFields defines model for WritableInterfaceTemplate.CustomFields.
type WritableInterfaceTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableInventoryItem struct {
	Depth *int `json:"_depth,omitempty"`

	// A unique tag used to identify this item
	AssetTag       *string                               `json:"asset_tag"`
	ComputedFields *WritableInventoryItem_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableInventoryItem_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                               `json:"description,omitempty"`
	Device         openapi_types.UUID                    `json:"device"`

	// This item was automatically discovered
	Discovered *bool `json:"discovered,omitempty"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label        *string             `json:"label,omitempty"`
	Manufacturer *openapi_types.UUID `json:"manufacturer"`
	Name         string              `json:"name"`
	Parent       *openapi_types.UUID `json:"parent"`

	// Manufacturer-assigned part identifier
	PartId *string               `json:"part_id,omitempty"`
	Serial *string               `json:"serial,omitempty"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Url    *string               `json:"url,omitempty"`
}

// WritableInventoryItem_ComputedFields defines model for WritableInventoryItem.ComputedFields.
type WritableInventoryItem_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableInventoryItem_CustomFields defines model for WritableInventoryItem.CustomFields.
type WritableInventoryItem_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableObjectPermission struct {
	// The list of actions granted by this permission
	Actions WritableObjectPermission_Actions `json:"actions"`

	// Queryset filter matching the applicable objects of the selected type(s)
	Constraints *WritableObjectPermission_Constraints `json:"constraints"`
	Description *string                               `json:"description,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Enabled     *bool                 `json:"enabled,omitempty"`
	Groups      *[]int                `json:"groups,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	Name        string                `json:"name"`
	ObjectTypes []string              `json:"object_types"`
	Url         *string               `json:"url,omitempty"`
	Users       *[]openapi_types.UUID `json:"users,omitempty"`
}

// The list of actions granted by this permission
type WritableObjectPermission_Actions struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Queryset filter matching the applicable objects of the selected type(s)
type WritableObjectPermission_Constraints struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritablePlatform struct {
	ComputedFields *WritablePlatform_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date              `json:"created,omitempty"`
	CustomFields   *WritablePlatform_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                          `json:"description,omitempty"`
	DeviceCount    *int                             `json:"device_count,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Optionally limit this platform to devices of a certain manufacturer
	Manufacturer *openapi_types.UUID `json:"manufacturer"`
	Name         string              `json:"name"`

	// Additional arguments to pass when initiating the NAPALM driver (JSON format)
	NapalmArgs *WritablePlatform_NapalmArgs `json:"napalm_args"`

	// The name of the NAPALM driver to use when interacting with devices
	NapalmDriver        *string `json:"napalm_driver,omitempty"`
	Slug                *string `json:"slug,omitempty"`
	Url                 *string `json:"url,omitempty"`
	VirtualmachineCount *int    `json:"virtualmachine_count,omitempty"`
}

// WritablePlatform_ComputedFields defines model for WritablePlatform.ComputedFields.
type WritablePlatform_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePlatform_CustomFields defines model for WritablePlatform.CustomFields.
type WritablePlatform_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Additional arguments to pass when initiating the NAPALM driver (JSON format)
type WritablePlatform_NapalmArgs struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritablePowerFeed struct {
	Amperage *int `json:"amperage,omitempty"`
	Cable    *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritablePowerFeed_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                              `json:"cable_peer_type"`
	Comments                   *string                              `json:"comments,omitempty"`
	ComputedFields             *WritablePowerFeed_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *WritablePowerFeed_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                              `json:"connected_endpoint_type"`
	Created                    *openapi_types.Date                  `json:"created,omitempty"`
	CustomFields               *WritablePowerFeed_CustomFields      `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Maximum permissible draw (percentage)
	MaxUtilization *int                        `json:"max_utilization,omitempty"`
	Name           string                      `json:"name"`
	Phase          *PhaseEnum                  `json:"phase,omitempty"`
	PowerPanel     openapi_types.UUID          `json:"power_panel"`
	Rack           *openapi_types.UUID         `json:"rack"`
	Status         WritablePowerFeedStatusEnum `json:"status"`
	Supply         *SupplyEnum                 `json:"supply,omitempty"`
	Tags           *[]TagSerializerField       `json:"tags,omitempty"`
	Type           *PowerFeedTypeChoices       `json:"type,omitempty"`
	Url            *string                     `json:"url,omitempty"`
	Voltage        *int                        `json:"voltage,omitempty"`
}

// WritablePowerFeed_CablePeer defines model for WritablePowerFeed.CablePeer.
type WritablePowerFeed_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerFeed_ComputedFields defines model for WritablePowerFeed.ComputedFields.
type WritablePowerFeed_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerFeed_ConnectedEndpoint defines model for WritablePowerFeed.ConnectedEndpoint.
type WritablePowerFeed_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerFeed_CustomFields defines model for WritablePowerFeed.CustomFields.
type WritablePowerFeed_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerFeedStatusEnum defines model for WritablePowerFeedStatusEnum.
type WritablePowerFeedStatusEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritablePowerOutlet struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritablePowerOutlet_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                                `json:"cable_peer_type"`
	ComputedFields             *WritablePowerOutlet_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *WritablePowerOutlet_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                  `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                                `json:"connected_endpoint_type"`
	CustomFields               *WritablePowerOutlet_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                                `json:"description,omitempty"`
	Device                     openapi_types.UUID                     `json:"device"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Phase (for three-phase feeds)
	FeedLeg *interface{}        `json:"feed_leg,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string               `json:"label,omitempty"`
	Name      string                `json:"name"`
	PowerPort *openapi_types.UUID   `json:"power_port"`
	Tags      *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// WritablePowerOutlet_CablePeer defines model for WritablePowerOutlet.CablePeer.
type WritablePowerOutlet_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerOutlet_ComputedFields defines model for WritablePowerOutlet.ComputedFields.
type WritablePowerOutlet_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerOutlet_ConnectedEndpoint defines model for WritablePowerOutlet.ConnectedEndpoint.
type WritablePowerOutlet_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerOutlet_CustomFields defines model for WritablePowerOutlet.CustomFields.
type WritablePowerOutlet_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritablePowerOutletTemplate struct {
	ComputedFields *WritablePowerOutletTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritablePowerOutletTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                     `json:"description,omitempty"`
	DeviceType     openapi_types.UUID                          `json:"device_type"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Phase (for three-phase feeds)
	FeedLeg *interface{}        `json:"feed_leg,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string             `json:"label,omitempty"`
	Name      string              `json:"name"`
	PowerPort *openapi_types.UUID `json:"power_port"`
	Type      *interface{}        `json:"type,omitempty"`
	Url       *string             `json:"url,omitempty"`
}

// WritablePowerOutletTemplate_ComputedFields defines model for WritablePowerOutletTemplate.ComputedFields.
type WritablePowerOutletTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerOutletTemplate_CustomFields defines model for WritablePowerOutletTemplate.CustomFields.
type WritablePowerOutletTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritablePowerPanel struct {
	ComputedFields *WritablePowerPanel_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritablePowerPanel_CustomFields   `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display        *string               `json:"display,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	Name           string                `json:"name"`
	PowerfeedCount *int                  `json:"powerfeed_count,omitempty"`
	RackGroup      *openapi_types.UUID   `json:"rack_group"`
	Site           openapi_types.UUID    `json:"site"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	Url            *string               `json:"url,omitempty"`
}

// WritablePowerPanel_ComputedFields defines model for WritablePowerPanel.ComputedFields.
type WritablePowerPanel_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerPanel_CustomFields defines model for WritablePowerPanel.CustomFields.
type WritablePowerPanel_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritablePowerPort struct {
	// Allocated power draw (watts)
	AllocatedDraw *int `json:"allocated_draw"`
	Cable         *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer                  *WritablePowerPort_CablePeer         `json:"cable_peer"`
	CablePeerType              *string                              `json:"cable_peer_type"`
	ComputedFields             *WritablePowerPort_ComputedFields    `json:"computed_fields,omitempty"`
	ConnectedEndpoint          *WritablePowerPort_ConnectedEndpoint `json:"connected_endpoint"`
	ConnectedEndpointReachable *bool                                `json:"connected_endpoint_reachable"`
	ConnectedEndpointType      *string                              `json:"connected_endpoint_type"`
	CustomFields               *WritablePowerPort_CustomFields      `json:"custom_fields,omitempty"`
	Description                *string                              `json:"description,omitempty"`
	Device                     openapi_types.UUID                   `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`

	// Maximum power draw (watts)
	MaximumDraw *int                  `json:"maximum_draw"`
	Name        string                `json:"name"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`

	// Physical port type
	Type *interface{} `json:"type,omitempty"`
	Url  *string      `json:"url,omitempty"`
}

// WritablePowerPort_CablePeer defines model for WritablePowerPort.CablePeer.
type WritablePowerPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerPort_ComputedFields defines model for WritablePowerPort.ComputedFields.
type WritablePowerPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerPort_ConnectedEndpoint defines model for WritablePowerPort.ConnectedEndpoint.
type WritablePowerPort_ConnectedEndpoint struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerPort_CustomFields defines model for WritablePowerPort.CustomFields.
type WritablePowerPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritablePowerPortTemplate struct {
	// Allocated power draw (watts)
	AllocatedDraw  *int                                      `json:"allocated_draw"`
	ComputedFields *WritablePowerPortTemplate_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritablePowerPortTemplate_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                   `json:"description,omitempty"`
	DeviceType     openapi_types.UUID                        `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label *string `json:"label,omitempty"`

	// Maximum power draw (watts)
	MaximumDraw *int         `json:"maximum_draw"`
	Name        string       `json:"name"`
	Type        *interface{} `json:"type,omitempty"`
	Url         *string      `json:"url,omitempty"`
}

// WritablePowerPortTemplate_ComputedFields defines model for WritablePowerPortTemplate.ComputedFields.
type WritablePowerPortTemplate_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePowerPortTemplate_CustomFields defines model for WritablePowerPortTemplate.CustomFields.
type WritablePowerPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritablePrefix struct {
	ComputedFields *WritablePrefix_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date            `json:"created,omitempty"`
	CustomFields   *WritablePrefix_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                        `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`
	Family  *struct {
		// Embedded struct due to allOf(#/components/schemas/FamilyEnum)
		FamilyEnum `yaml:",inline"`
	} `json:"family,omitempty"`
	Id *openapi_types.UUID `json:"id,omitempty"`

	// All IP addresses within this prefix are considered usable
	IsPool      *bool      `json:"is_pool,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	Prefix      string     `json:"prefix"`

	// The primary function of this prefix
	Role   *openapi_types.UUID      `json:"role"`
	Site   *openapi_types.UUID      `json:"site"`
	Status WritablePrefixStatusEnum `json:"status"`
	Tags   *[]TagSerializerField    `json:"tags,omitempty"`
	Tenant *openapi_types.UUID      `json:"tenant"`
	Url    *string                  `json:"url,omitempty"`
	Vlan   *openapi_types.UUID      `json:"vlan"`
	Vrf    *openapi_types.UUID      `json:"vrf"`
}

// WritablePrefix_ComputedFields defines model for WritablePrefix.ComputedFields.
type WritablePrefix_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePrefix_CustomFields defines model for WritablePrefix.CustomFields.
type WritablePrefix_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritablePrefixStatusEnum defines model for WritablePrefixStatusEnum.
type WritablePrefixStatusEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableProviderNetwork struct {
	Comments       *string                                 `json:"comments,omitempty"`
	ComputedFields *WritableProviderNetwork_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                     `json:"created,omitempty"`
	CustomFields   *WritableProviderNetwork_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                                 `json:"description,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	LastUpdated *time.Time            `json:"last_updated,omitempty"`
	Name        string                `json:"name"`
	Provider    openapi_types.UUID    `json:"provider"`
	Slug        *string               `json:"slug,omitempty"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// WritableProviderNetwork_ComputedFields defines model for WritableProviderNetwork.ComputedFields.
type WritableProviderNetwork_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableProviderNetwork_CustomFields defines model for WritableProviderNetwork.CustomFields.
type WritableProviderNetwork_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritableRack struct {
	// A unique tag used to identify this rack
	AssetTag       *string                      `json:"asset_tag"`
	Comments       *string                      `json:"comments,omitempty"`
	ComputedFields *WritableRack_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date          `json:"created,omitempty"`
	CustomFields   *WritableRack_CustomFields   `json:"custom_fields,omitempty"`

	// Units are numbered top-to-bottom
	DescUnits   *bool `json:"desc_units,omitempty"`
	DeviceCount *int  `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Locally-assigned identifier
	FacilityId *string `json:"facility_id"`

	// Assigned group
	Group       *openapi_types.UUID `json:"group"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`

	// Outer dimension of rack (depth)
	OuterDepth *int         `json:"outer_depth"`
	OuterUnit  *interface{} `json:"outer_unit,omitempty"`

	// Outer dimension of rack (width)
	OuterWidth     *int `json:"outer_width"`
	PowerfeedCount *int `json:"powerfeed_count,omitempty"`

	// Functional role
	Role   *openapi_types.UUID    `json:"role"`
	Serial *string                `json:"serial,omitempty"`
	Site   openapi_types.UUID     `json:"site"`
	Status WritableRackStatusEnum `json:"status"`
	Tags   *[]TagSerializerField  `json:"tags,omitempty"`
	Tenant *openapi_types.UUID    `json:"tenant"`
	Type   *interface{}           `json:"type,omitempty"`

	// Height in rack units
	UHeight *int    `json:"u_height,omitempty"`
	Url     *string `json:"url,omitempty"`

	// Rail-to-rail width
	Width *struct {
		// Embedded struct due to allOf(#/components/schemas/WidthEnum)
		WidthEnum `yaml:",inline"`
	} `json:"width,omitempty"`
}

// WritableRack_ComputedFields defines model for WritableRack.ComputedFields.
type WritableRack_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRack_CustomFields defines model for WritableRack.CustomFields.
type WritableRack_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableRackGroup struct {
	Depth          *int                              `json:"_depth,omitempty"`
	ComputedFields *WritableRackGroup_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date               `json:"created,omitempty"`
	CustomFields   *WritableRackGroup_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                           `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Parent      *openapi_types.UUID `json:"parent"`
	RackCount   *int                `json:"rack_count,omitempty"`
	Site        openapi_types.UUID  `json:"site"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// WritableRackGroup_ComputedFields defines model for WritableRackGroup.ComputedFields.
type WritableRackGroup_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRackGroup_CustomFields defines model for WritableRackGroup.CustomFields.
type WritableRackGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableRackReservation struct {
	ComputedFields *WritableRackReservation_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                     `json:"created,omitempty"`
	CustomFields   *WritableRackReservation_CustomFields   `json:"custom_fields,omitempty"`
	Description    string                                  `json:"description"`

	// Human friendly display value
	Display *string                       `json:"display,omitempty"`
	Id      *openapi_types.UUID           `json:"id,omitempty"`
	Rack    openapi_types.UUID            `json:"rack"`
	Tags    *[]TagSerializerField         `json:"tags,omitempty"`
	Tenant  *openapi_types.UUID           `json:"tenant"`
	Units   WritableRackReservation_Units `json:"units"`
	Url     *string                       `json:"url,omitempty"`
	User    openapi_types.UUID            `json:"user"`
}

// WritableRackReservation_ComputedFields defines model for WritableRackReservation.ComputedFields.
type WritableRackReservation_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRackReservation_CustomFields defines model for WritableRackReservation.CustomFields.
type WritableRackReservation_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRackReservation_Units defines model for WritableRackReservation.Units.
type WritableRackReservation_Units struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRackStatusEnum defines model for WritableRackStatusEnum.
type WritableRackStatusEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableRearPort struct {
	Cable *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedCable)
		NestedCable `yaml:",inline"`
	} `json:"cable,omitempty"`
	CablePeer      *WritableRearPort_CablePeer      `json:"cable_peer"`
	CablePeerType  *string                          `json:"cable_peer_type"`
	ComputedFields *WritableRearPort_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableRearPort_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                          `json:"description,omitempty"`
	Device         openapi_types.UUID               `json:"device"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string               `json:"label,omitempty"`
	Name      string                `json:"name"`
	Positions *int                  `json:"positions,omitempty"`
	Tags      *[]TagSerializerField `json:"tags,omitempty"`
	Type      PortTypeChoices       `json:"type"`
	Url       *string               `json:"url,omitempty"`
}

// WritableRearPort_CablePeer defines model for WritableRearPort.CablePeer.
type WritableRearPort_CablePeer struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRearPort_ComputedFields defines model for WritableRearPort.ComputedFields.
type WritableRearPort_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRearPort_CustomFields defines model for WritableRearPort.CustomFields.
type WritableRearPort_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableRearPortTemplate struct {
	CustomFields *WritableRearPortTemplate_CustomFields `json:"custom_fields,omitempty"`
	Description  *string                                `json:"description,omitempty"`
	DeviceType   openapi_types.UUID                     `json:"device_type"`

	// Human friendly display value
	Display *string             `json:"display,omitempty"`
	Id      *openapi_types.UUID `json:"id,omitempty"`

	// Physical label
	Label     *string         `json:"label,omitempty"`
	Name      string          `json:"name"`
	Positions *int            `json:"positions,omitempty"`
	Type      PortTypeChoices `json:"type"`
	Url       *string         `json:"url,omitempty"`
}

// WritableRearPortTemplate_CustomFields defines model for WritableRearPortTemplate.CustomFields.
type WritableRearPortTemplate_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableRegion struct {
	Depth          *int                           `json:"_depth,omitempty"`
	ComputedFields *WritableRegion_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date            `json:"created,omitempty"`
	CustomFields   *WritableRegion_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                        `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Parent      *openapi_types.UUID `json:"parent"`
	SiteCount   *int                `json:"site_count,omitempty"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// WritableRegion_ComputedFields defines model for WritableRegion.ComputedFields.
type WritableRegion_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRegion_CustomFields defines model for WritableRegion.CustomFields.
type WritableRegion_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRelationshipAssociation defines model for WritableRelationshipAssociation.
type WritableRelationshipAssociation struct {
	DestinationId   openapi_types.UUID  `json:"destination_id"`
	DestinationType string              `json:"destination_type"`
	Id              *openapi_types.UUID `json:"id,omitempty"`
	Relationship    openapi_types.UUID  `json:"relationship"`
	SourceId        openapi_types.UUID  `json:"source_id"`
	SourceType      string              `json:"source_type"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableRouteTarget struct {
	ComputedFields *WritableRouteTarget_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                 `json:"created,omitempty"`
	CustomFields   *WritableRouteTarget_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                             `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// Route target value (formatted in accordance with RFC 4360)
	Name   string                `json:"name"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *openapi_types.UUID   `json:"tenant"`
	Url    *string               `json:"url,omitempty"`
}

// WritableRouteTarget_ComputedFields defines model for WritableRouteTarget.ComputedFields.
type WritableRouteTarget_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableRouteTarget_CustomFields defines model for WritableRouteTarget.CustomFields.
type WritableRouteTarget_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Serializer for `SecretsGroupAssociation` objects.
type WritableSecretsGroupAssociation struct {
	AccessType AccessTypeEnum `json:"access_type"`

	// Human friendly display value
	Display    *string             `json:"display,omitempty"`
	Group      openapi_types.UUID  `json:"group"`
	Id         *openapi_types.UUID `json:"id,omitempty"`
	Secret     openapi_types.UUID  `json:"secret"`
	SecretType SecretTypeEnum      `json:"secret_type"`
	Url        *string             `json:"url,omitempty"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableService struct {
	ComputedFields *WritableService_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date             `json:"created,omitempty"`
	CustomFields   *WritableService_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                         `json:"description,omitempty"`
	Device         *openapi_types.UUID             `json:"device"`

	// Human friendly display value
	Display        *string               `json:"display,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	Ipaddresses    *[]openapi_types.UUID `json:"ipaddresses,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	Name           string                `json:"name"`
	Ports          []int                 `json:"ports"`
	Protocol       ProtocolEnum          `json:"protocol"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	Url            *string               `json:"url,omitempty"`
	VirtualMachine *openapi_types.UUID   `json:"virtual_machine"`
}

// WritableService_ComputedFields defines model for WritableService.ComputedFields.
type WritableService_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableService_CustomFields defines model for WritableService.CustomFields.
type WritableService_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritableSite struct {
	// 32-bit autonomous system number
	Asn            *int64                       `json:"asn"`
	CircuitCount   *int                         `json:"circuit_count,omitempty"`
	Comments       *string                      `json:"comments,omitempty"`
	ComputedFields *WritableSite_ComputedFields `json:"computed_fields,omitempty"`
	ContactEmail   *openapi_types.Email         `json:"contact_email,omitempty"`
	ContactName    *string                      `json:"contact_name,omitempty"`
	ContactPhone   *string                      `json:"contact_phone,omitempty"`
	Created        *openapi_types.Date          `json:"created,omitempty"`
	CustomFields   *WritableSite_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                      `json:"description,omitempty"`
	DeviceCount    *int                         `json:"device_count,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Local facility ID or description
	Facility    *string             `json:"facility,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`

	// GPS coordinate (latitude)
	Latitude *string `json:"latitude"`

	// GPS coordinate (longitude)
	Longitude           *string                `json:"longitude"`
	Name                string                 `json:"name"`
	PhysicalAddress     *string                `json:"physical_address,omitempty"`
	PrefixCount         *int                   `json:"prefix_count,omitempty"`
	RackCount           *int                   `json:"rack_count,omitempty"`
	Region              *openapi_types.UUID    `json:"region"`
	ShippingAddress     *string                `json:"shipping_address,omitempty"`
	Slug                *string                `json:"slug,omitempty"`
	Status              WritableSiteStatusEnum `json:"status"`
	Tags                *[]TagSerializerField  `json:"tags,omitempty"`
	Tenant              *openapi_types.UUID    `json:"tenant"`
	TimeZone            *string                `json:"time_zone"`
	Url                 *string                `json:"url,omitempty"`
	VirtualmachineCount *int                   `json:"virtualmachine_count,omitempty"`
	VlanCount           *int                   `json:"vlan_count,omitempty"`
}

// WritableSite_ComputedFields defines model for WritableSite.ComputedFields.
type WritableSite_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableSite_CustomFields defines model for WritableSite.CustomFields.
type WritableSite_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableSiteStatusEnum defines model for WritableSiteStatusEnum.
type WritableSiteStatusEnum string

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableTenant struct {
	CircuitCount   *int                           `json:"circuit_count,omitempty"`
	ClusterCount   *int                           `json:"cluster_count,omitempty"`
	Comments       *string                        `json:"comments,omitempty"`
	ComputedFields *WritableTenant_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date            `json:"created,omitempty"`
	CustomFields   *WritableTenant_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                        `json:"description,omitempty"`
	DeviceCount    *int                           `json:"device_count,omitempty"`

	// Human friendly display value
	Display             *string               `json:"display,omitempty"`
	Group               *openapi_types.UUID   `json:"group"`
	Id                  *openapi_types.UUID   `json:"id,omitempty"`
	IpaddressCount      *int                  `json:"ipaddress_count,omitempty"`
	LastUpdated         *time.Time            `json:"last_updated,omitempty"`
	Name                string                `json:"name"`
	PrefixCount         *int                  `json:"prefix_count,omitempty"`
	RackCount           *int                  `json:"rack_count,omitempty"`
	SiteCount           *int                  `json:"site_count,omitempty"`
	Slug                *string               `json:"slug,omitempty"`
	Tags                *[]TagSerializerField `json:"tags,omitempty"`
	Url                 *string               `json:"url,omitempty"`
	VirtualmachineCount *int                  `json:"virtualmachine_count,omitempty"`
	VlanCount           *int                  `json:"vlan_count,omitempty"`
	VrfCount            *int                  `json:"vrf_count,omitempty"`
}

// WritableTenant_ComputedFields defines model for WritableTenant.ComputedFields.
type WritableTenant_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableTenant_CustomFields defines model for WritableTenant.CustomFields.
type WritableTenant_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableTenantGroup struct {
	Depth          *int                                `json:"_depth,omitempty"`
	ComputedFields *WritableTenantGroup_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date                 `json:"created,omitempty"`
	CustomFields   *WritableTenantGroup_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                             `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Parent      *openapi_types.UUID `json:"parent"`
	Slug        *string             `json:"slug,omitempty"`
	TenantCount *int                `json:"tenant_count,omitempty"`
	Url         *string             `json:"url,omitempty"`
}

// WritableTenantGroup_ComputedFields defines model for WritableTenantGroup.ComputedFields.
type WritableTenantGroup_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableTenantGroup_CustomFields defines model for WritableTenantGroup.CustomFields.
type WritableTenantGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableUser struct {
	DateJoined *time.Time `json:"date_joined,omitempty"`

	// Human friendly display value
	Display   *string              `json:"display,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	FirstName *string              `json:"first_name,omitempty"`

	// The groups this user belongs to. A user will get all permissions granted to each of their groups.
	Groups *[]int              `json:"groups,omitempty"`
	Id     *openapi_types.UUID `json:"id,omitempty"`

	// Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
	IsActive *bool `json:"is_active,omitempty"`

	// Designates whether the user can log into this admin site.
	IsStaff  *bool   `json:"is_staff,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	Password *string `json:"password,omitempty"`
	Url      *string `json:"url,omitempty"`

	// Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	Username string `json:"username"`
}

// Mixin to add `status` choice field to model serializers.
type WritableVLAN struct {
	ComputedFields *WritableVLAN_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date          `json:"created,omitempty"`
	CustomFields   *WritableVLAN_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                      `json:"description,omitempty"`

	// Human friendly display value
	Display     *string                `json:"display,omitempty"`
	Group       *openapi_types.UUID    `json:"group"`
	Id          *openapi_types.UUID    `json:"id,omitempty"`
	LastUpdated *time.Time             `json:"last_updated,omitempty"`
	Name        string                 `json:"name"`
	PrefixCount *int                   `json:"prefix_count,omitempty"`
	Role        *openapi_types.UUID    `json:"role"`
	Site        *openapi_types.UUID    `json:"site"`
	Status      WritableVLANStatusEnum `json:"status"`
	Tags        *[]TagSerializerField  `json:"tags,omitempty"`
	Tenant      *openapi_types.UUID    `json:"tenant"`
	Url         *string                `json:"url,omitempty"`
	Vid         int                    `json:"vid"`
}

// WritableVLAN_ComputedFields defines model for WritableVLAN.ComputedFields.
type WritableVLAN_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVLAN_CustomFields defines model for WritableVLAN.CustomFields.
type WritableVLAN_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableVLANGroup struct {
	ComputedFields *WritableVLANGroup_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date               `json:"created,omitempty"`
	CustomFields   *WritableVLANGroup_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                           `json:"description,omitempty"`

	// Human friendly display value
	Display     *string             `json:"display,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	LastUpdated *time.Time          `json:"last_updated,omitempty"`
	Name        string              `json:"name"`
	Site        *openapi_types.UUID `json:"site"`
	Slug        *string             `json:"slug,omitempty"`
	Url         *string             `json:"url,omitempty"`
	VlanCount   *int                `json:"vlan_count,omitempty"`
}

// WritableVLANGroup_ComputedFields defines model for WritableVLANGroup.ComputedFields.
type WritableVLANGroup_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVLANGroup_CustomFields defines model for WritableVLANGroup.CustomFields.
type WritableVLANGroup_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVLANStatusEnum defines model for WritableVLANStatusEnum.
type WritableVLANStatusEnum string

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during
// validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableVMInterface struct {
	Description *string `json:"description,omitempty"`

	// Human friendly display value
	Display        *string               `json:"display,omitempty"`
	Enabled        *bool                 `json:"enabled,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	MacAddress     *string               `json:"mac_address"`
	Mode           *interface{}          `json:"mode,omitempty"`
	Mtu            *int                  `json:"mtu"`
	Name           string                `json:"name"`
	TaggedVlans    *[]openapi_types.UUID `json:"tagged_vlans,omitempty"`
	Tags           *[]TagSerializerField `json:"tags,omitempty"`
	UntaggedVlan   *openapi_types.UUID   `json:"untagged_vlan"`
	Url            *string               `json:"url,omitempty"`
	VirtualMachine openapi_types.UUID    `json:"virtual_machine"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableVRF struct {
	ComputedFields *WritableVRF_ComputedFields `json:"computed_fields,omitempty"`
	Created        *openapi_types.Date         `json:"created,omitempty"`
	CustomFields   *WritableVRF_CustomFields   `json:"custom_fields,omitempty"`
	Description    *string                     `json:"description,omitempty"`

	// Human friendly display value
	Display *string `json:"display,omitempty"`

	// Prevent duplicate prefixes/IP addresses within this VRF
	EnforceUnique  *bool                 `json:"enforce_unique,omitempty"`
	ExportTargets  *[]openapi_types.UUID `json:"export_targets,omitempty"`
	Id             *openapi_types.UUID   `json:"id,omitempty"`
	ImportTargets  *[]openapi_types.UUID `json:"import_targets,omitempty"`
	IpaddressCount *int                  `json:"ipaddress_count,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	Name           string                `json:"name"`
	PrefixCount    *int                  `json:"prefix_count,omitempty"`

	// Unique route distinguisher (as defined in RFC 4364)
	Rd     *string               `json:"rd"`
	Tags   *[]TagSerializerField `json:"tags,omitempty"`
	Tenant *openapi_types.UUID   `json:"tenant"`
	Url    *string               `json:"url,omitempty"`
}

// WritableVRF_ComputedFields defines model for WritableVRF.ComputedFields.
type WritableVRF_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVRF_CustomFields defines model for WritableVRF.CustomFields.
type WritableVRF_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableVirtualChassis struct {
	ComputedFields *WritableVirtualChassis_ComputedFields `json:"computed_fields,omitempty"`
	CustomFields   *WritableVirtualChassis_CustomFields   `json:"custom_fields,omitempty"`

	// Human friendly display value
	Display     *string               `json:"display,omitempty"`
	Domain      *string               `json:"domain,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	Master      *openapi_types.UUID   `json:"master"`
	MemberCount *int                  `json:"member_count,omitempty"`
	Name        string                `json:"name"`
	Tags        *[]TagSerializerField `json:"tags,omitempty"`
	Url         *string               `json:"url,omitempty"`
}

// WritableVirtualChassis_ComputedFields defines model for WritableVirtualChassis.ComputedFields.
type WritableVirtualChassis_ComputedFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVirtualChassis_CustomFields defines model for WritableVirtualChassis.CustomFields.
type WritableVirtualChassis_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Mixin to add `status` choice field to model serializers.
type WritableVirtualMachineWithConfigContext struct {
	Cluster       openapi_types.UUID                                     `json:"cluster"`
	Comments      *string                                                `json:"comments,omitempty"`
	ConfigContext *WritableVirtualMachineWithConfigContext_ConfigContext `json:"config_context,omitempty"`
	Created       *openapi_types.Date                                    `json:"created,omitempty"`
	CustomFields  *WritableVirtualMachineWithConfigContext_CustomFields  `json:"custom_fields,omitempty"`
	Disk          *int                                                   `json:"disk"`

	// Human friendly display value
	Display          *string                                                   `json:"display,omitempty"`
	Id               *openapi_types.UUID                                       `json:"id,omitempty"`
	LastUpdated      *time.Time                                                `json:"last_updated,omitempty"`
	LocalContextData *WritableVirtualMachineWithConfigContext_LocalContextData `json:"local_context_data"`

	// Optional schema to validate the structure of the data
	LocalContextSchema *openapi_types.UUID `json:"local_context_schema"`
	Memory             *int                `json:"memory"`
	Name               string              `json:"name"`
	Platform           *openapi_types.UUID `json:"platform"`
	PrimaryIp          *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedIPAddress)
		NestedIPAddress `yaml:",inline"`
	} `json:"primary_ip,omitempty"`
	PrimaryIp4 *openapi_types.UUID `json:"primary_ip4"`
	PrimaryIp6 *openapi_types.UUID `json:"primary_ip6"`
	Role       *openapi_types.UUID `json:"role"`
	Site       *struct {
		// Embedded struct due to allOf(#/components/schemas/NestedSite)
		NestedSite `yaml:",inline"`
	} `json:"site,omitempty"`
	Status WritableVirtualMachineWithConfigContextStatusEnum `json:"status"`
	Tags   *[]TagSerializerField                             `json:"tags,omitempty"`
	Tenant *openapi_types.UUID                               `json:"tenant"`
	Url    *string                                           `json:"url,omitempty"`
	Vcpus  *int                                              `json:"vcpus"`
}

// WritableVirtualMachineWithConfigContext_ConfigContext defines model for WritableVirtualMachineWithConfigContext.ConfigContext.
type WritableVirtualMachineWithConfigContext_ConfigContext struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVirtualMachineWithConfigContext_CustomFields defines model for WritableVirtualMachineWithConfigContext.CustomFields.
type WritableVirtualMachineWithConfigContext_CustomFields struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVirtualMachineWithConfigContext_LocalContextData defines model for WritableVirtualMachineWithConfigContext.LocalContextData.
type WritableVirtualMachineWithConfigContext_LocalContextData struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// WritableVirtualMachineWithConfigContextStatusEnum defines model for WritableVirtualMachineWithConfigContextStatusEnum.
type WritableVirtualMachineWithConfigContextStatusEnum string

// CircuitsCircuitTerminationsListParams defines parameters for CircuitsCircuitTerminationsList.
type CircuitsCircuitTerminationsListParams struct {
	Cabled *bool `json:"cabled,omitempty"`

	// Circuit
	CircuitId *[]openapi_types.UUID `json:"circuit_id,omitempty"`

	// Circuit
	CircuitIdN *[]openapi_types.UUID `json:"circuit_id__n,omitempty"`

	// Connected status (bool)
	Connected *bool `json:"connected,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset       *int   `json:"offset,omitempty"`
	PortSpeed    *[]int `json:"port_speed,omitempty"`
	PortSpeedGt  *[]int `json:"port_speed__gt,omitempty"`
	PortSpeedGte *[]int `json:"port_speed__gte,omitempty"`
	PortSpeedLt  *[]int `json:"port_speed__lt,omitempty"`
	PortSpeedLte *[]int `json:"port_speed__lte,omitempty"`
	PortSpeedN   *[]int `json:"port_speed__n,omitempty"`

	// Provider Network (ID)
	ProviderNetworkId *[]openapi_types.UUID `json:"provider_network_id,omitempty"`

	// Provider Network (ID)
	ProviderNetworkIdN *[]openapi_types.UUID `json:"provider_network_id__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN          *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	TermSide         *string               `json:"term_side,omitempty"`
	TermSideN        *string               `json:"term_side__n,omitempty"`
	UpstreamSpeed    *[]int                `json:"upstream_speed,omitempty"`
	UpstreamSpeedGt  *[]int                `json:"upstream_speed__gt,omitempty"`
	UpstreamSpeedGte *[]int                `json:"upstream_speed__gte,omitempty"`
	UpstreamSpeedLt  *[]int                `json:"upstream_speed__lt,omitempty"`
	UpstreamSpeedLte *[]int                `json:"upstream_speed__lte,omitempty"`
	UpstreamSpeedN   *[]int                `json:"upstream_speed__n,omitempty"`
	XconnectId       *[]string             `json:"xconnect_id,omitempty"`
	XconnectIdIc     *[]string             `json:"xconnect_id__ic,omitempty"`
	XconnectIdIe     *[]string             `json:"xconnect_id__ie,omitempty"`
	XconnectIdIew    *[]string             `json:"xconnect_id__iew,omitempty"`
	XconnectIdIre    *[]string             `json:"xconnect_id__ire,omitempty"`
	XconnectIdIsw    *[]string             `json:"xconnect_id__isw,omitempty"`
	XconnectIdN      *[]string             `json:"xconnect_id__n,omitempty"`
	XconnectIdNic    *[]string             `json:"xconnect_id__nic,omitempty"`
	XconnectIdNie    *[]string             `json:"xconnect_id__nie,omitempty"`
	XconnectIdNiew   *[]string             `json:"xconnect_id__niew,omitempty"`
	XconnectIdNire   *[]string             `json:"xconnect_id__nire,omitempty"`
	XconnectIdNisw   *[]string             `json:"xconnect_id__nisw,omitempty"`
	XconnectIdNre    *[]string             `json:"xconnect_id__nre,omitempty"`
	XconnectIdRe     *[]string             `json:"xconnect_id__re,omitempty"`
}

// CircuitsCircuitTerminationsBulkPartialUpdateJSONBody defines parameters for CircuitsCircuitTerminationsBulkPartialUpdate.
type CircuitsCircuitTerminationsBulkPartialUpdateJSONBody PatchedWritableCircuitTermination

// CircuitsCircuitTerminationsCreateJSONBody defines parameters for CircuitsCircuitTerminationsCreate.
type CircuitsCircuitTerminationsCreateJSONBody WritableCircuitTermination

// CircuitsCircuitTerminationsBulkUpdateJSONBody defines parameters for CircuitsCircuitTerminationsBulkUpdate.
type CircuitsCircuitTerminationsBulkUpdateJSONBody WritableCircuitTermination

// CircuitsCircuitTerminationsPartialUpdateJSONBody defines parameters for CircuitsCircuitTerminationsPartialUpdate.
type CircuitsCircuitTerminationsPartialUpdateJSONBody PatchedWritableCircuitTermination

// CircuitsCircuitTerminationsUpdateJSONBody defines parameters for CircuitsCircuitTerminationsUpdate.
type CircuitsCircuitTerminationsUpdateJSONBody WritableCircuitTermination

// CircuitsCircuitTypesListParams defines parameters for CircuitsCircuitTypesList.
type CircuitsCircuitTypesListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// CircuitsCircuitTypesBulkPartialUpdateJSONBody defines parameters for CircuitsCircuitTypesBulkPartialUpdate.
type CircuitsCircuitTypesBulkPartialUpdateJSONBody PatchedCircuitType

// CircuitsCircuitTypesCreateJSONBody defines parameters for CircuitsCircuitTypesCreate.
type CircuitsCircuitTypesCreateJSONBody CircuitType

// CircuitsCircuitTypesBulkUpdateJSONBody defines parameters for CircuitsCircuitTypesBulkUpdate.
type CircuitsCircuitTypesBulkUpdateJSONBody CircuitType

// CircuitsCircuitTypesPartialUpdateJSONBody defines parameters for CircuitsCircuitTypesPartialUpdate.
type CircuitsCircuitTypesPartialUpdateJSONBody PatchedCircuitType

// CircuitsCircuitTypesUpdateJSONBody defines parameters for CircuitsCircuitTypesUpdate.
type CircuitsCircuitTypesUpdateJSONBody CircuitType

// CircuitsCircuitsListParams defines parameters for CircuitsCircuitsList.
type CircuitsCircuitsListParams struct {
	Cid            *[]string             `json:"cid,omitempty"`
	CidIc          *[]string             `json:"cid__ic,omitempty"`
	CidIe          *[]string             `json:"cid__ie,omitempty"`
	CidIew         *[]string             `json:"cid__iew,omitempty"`
	CidIre         *[]string             `json:"cid__ire,omitempty"`
	CidIsw         *[]string             `json:"cid__isw,omitempty"`
	CidN           *[]string             `json:"cid__n,omitempty"`
	CidNic         *[]string             `json:"cid__nic,omitempty"`
	CidNie         *[]string             `json:"cid__nie,omitempty"`
	CidNiew        *[]string             `json:"cid__niew,omitempty"`
	CidNire        *[]string             `json:"cid__nire,omitempty"`
	CidNisw        *[]string             `json:"cid__nisw,omitempty"`
	CidNre         *[]string             `json:"cid__nre,omitempty"`
	CidRe          *[]string             `json:"cid__re,omitempty"`
	CommitRate     *[]int                `json:"commit_rate,omitempty"`
	CommitRateGt   *[]int                `json:"commit_rate__gt,omitempty"`
	CommitRateGte  *[]int                `json:"commit_rate__gte,omitempty"`
	CommitRateLt   *[]int                `json:"commit_rate__lt,omitempty"`
	CommitRateLte  *[]int                `json:"commit_rate__lte,omitempty"`
	CommitRateN    *[]int                `json:"commit_rate__n,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	InstallDate    *[]openapi_types.Date `json:"install_date,omitempty"`
	InstallDateGt  *[]openapi_types.Date `json:"install_date__gt,omitempty"`
	InstallDateGte *[]openapi_types.Date `json:"install_date__gte,omitempty"`
	InstallDateLt  *[]openapi_types.Date `json:"install_date__lt,omitempty"`
	InstallDateLte *[]openapi_types.Date `json:"install_date__lte,omitempty"`
	InstallDateN   *[]openapi_types.Date `json:"install_date__n,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Provider (slug)
	Provider *[]string `json:"provider,omitempty"`

	// Provider (slug)
	ProviderN *[]string `json:"provider__n,omitempty"`

	// Provider (ID)
	ProviderId *[]openapi_types.UUID `json:"provider_id,omitempty"`

	// Provider (ID)
	ProviderIdN *[]openapi_types.UUID `json:"provider_id__n,omitempty"`

	// Provider Network (ID)
	ProviderNetworkId *[]openapi_types.UUID `json:"provider_network_id,omitempty"`

	// Provider Network (ID)
	ProviderNetworkIdN *[]openapi_types.UUID `json:"provider_network_id__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`

	// Circuit type (slug)
	Type *[]string `json:"type,omitempty"`

	// Circuit type (slug)
	TypeN *[]string `json:"type__n,omitempty"`

	// Circuit type (ID)
	TypeId *[]openapi_types.UUID `json:"type_id,omitempty"`

	// Circuit type (ID)
	TypeIdN *[]openapi_types.UUID `json:"type_id__n,omitempty"`
}

// CircuitsCircuitsBulkPartialUpdateJSONBody defines parameters for CircuitsCircuitsBulkPartialUpdate.
type CircuitsCircuitsBulkPartialUpdateJSONBody PatchedWritableCircuit

// CircuitsCircuitsCreateJSONBody defines parameters for CircuitsCircuitsCreate.
type CircuitsCircuitsCreateJSONBody WritableCircuit

// CircuitsCircuitsBulkUpdateJSONBody defines parameters for CircuitsCircuitsBulkUpdate.
type CircuitsCircuitsBulkUpdateJSONBody WritableCircuit

// CircuitsCircuitsPartialUpdateJSONBody defines parameters for CircuitsCircuitsPartialUpdate.
type CircuitsCircuitsPartialUpdateJSONBody PatchedWritableCircuit

// CircuitsCircuitsUpdateJSONBody defines parameters for CircuitsCircuitsUpdate.
type CircuitsCircuitsUpdateJSONBody WritableCircuit

// CircuitsProviderNetworksListParams defines parameters for CircuitsProviderNetworksList.
type CircuitsProviderNetworksListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Provider (slug)
	Provider *[]string `json:"provider,omitempty"`

	// Provider (slug)
	ProviderN *[]string `json:"provider__n,omitempty"`

	// Provider (ID)
	ProviderId *[]openapi_types.UUID `json:"provider_id,omitempty"`

	// Provider (ID)
	ProviderIdN *[]openapi_types.UUID `json:"provider_id__n,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
	Tag      *[]string `json:"tag,omitempty"`
	TagN     *[]string `json:"tag__n,omitempty"`
}

// CircuitsProviderNetworksBulkPartialUpdateJSONBody defines parameters for CircuitsProviderNetworksBulkPartialUpdate.
type CircuitsProviderNetworksBulkPartialUpdateJSONBody PatchedWritableProviderNetwork

// CircuitsProviderNetworksCreateJSONBody defines parameters for CircuitsProviderNetworksCreate.
type CircuitsProviderNetworksCreateJSONBody WritableProviderNetwork

// CircuitsProviderNetworksBulkUpdateJSONBody defines parameters for CircuitsProviderNetworksBulkUpdate.
type CircuitsProviderNetworksBulkUpdateJSONBody WritableProviderNetwork

// CircuitsProviderNetworksPartialUpdateJSONBody defines parameters for CircuitsProviderNetworksPartialUpdate.
type CircuitsProviderNetworksPartialUpdateJSONBody PatchedWritableProviderNetwork

// CircuitsProviderNetworksUpdateJSONBody defines parameters for CircuitsProviderNetworksUpdate.
type CircuitsProviderNetworksUpdateJSONBody WritableProviderNetwork

// CircuitsProvidersListParams defines parameters for CircuitsProvidersList.
type CircuitsProvidersListParams struct {
	Account        *[]string             `json:"account,omitempty"`
	AccountIc      *[]string             `json:"account__ic,omitempty"`
	AccountIe      *[]string             `json:"account__ie,omitempty"`
	AccountIew     *[]string             `json:"account__iew,omitempty"`
	AccountIre     *[]string             `json:"account__ire,omitempty"`
	AccountIsw     *[]string             `json:"account__isw,omitempty"`
	AccountN       *[]string             `json:"account__n,omitempty"`
	AccountNic     *[]string             `json:"account__nic,omitempty"`
	AccountNie     *[]string             `json:"account__nie,omitempty"`
	AccountNiew    *[]string             `json:"account__niew,omitempty"`
	AccountNire    *[]string             `json:"account__nire,omitempty"`
	AccountNisw    *[]string             `json:"account__nisw,omitempty"`
	AccountNre     *[]string             `json:"account__nre,omitempty"`
	AccountRe      *[]string             `json:"account__re,omitempty"`
	Asn            *[]int                `json:"asn,omitempty"`
	AsnGt          *[]int                `json:"asn__gt,omitempty"`
	AsnGte         *[]int                `json:"asn__gte,omitempty"`
	AsnLt          *[]int                `json:"asn__lt,omitempty"`
	AsnLte         *[]int                `json:"asn__lte,omitempty"`
	AsnN           *[]int                `json:"asn__n,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site
	SiteIdN  *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Slug     *[]string             `json:"slug,omitempty"`
	SlugIc   *[]string             `json:"slug__ic,omitempty"`
	SlugIe   *[]string             `json:"slug__ie,omitempty"`
	SlugIew  *[]string             `json:"slug__iew,omitempty"`
	SlugIre  *[]string             `json:"slug__ire,omitempty"`
	SlugIsw  *[]string             `json:"slug__isw,omitempty"`
	SlugN    *[]string             `json:"slug__n,omitempty"`
	SlugNic  *[]string             `json:"slug__nic,omitempty"`
	SlugNie  *[]string             `json:"slug__nie,omitempty"`
	SlugNiew *[]string             `json:"slug__niew,omitempty"`
	SlugNire *[]string             `json:"slug__nire,omitempty"`
	SlugNisw *[]string             `json:"slug__nisw,omitempty"`
	SlugNre  *[]string             `json:"slug__nre,omitempty"`
	SlugRe   *[]string             `json:"slug__re,omitempty"`
	Tag      *[]string             `json:"tag,omitempty"`
	TagN     *[]string             `json:"tag__n,omitempty"`
}

// CircuitsProvidersBulkPartialUpdateJSONBody defines parameters for CircuitsProvidersBulkPartialUpdate.
type CircuitsProvidersBulkPartialUpdateJSONBody PatchedProvider

// CircuitsProvidersCreateJSONBody defines parameters for CircuitsProvidersCreate.
type CircuitsProvidersCreateJSONBody Provider

// CircuitsProvidersBulkUpdateJSONBody defines parameters for CircuitsProvidersBulkUpdate.
type CircuitsProvidersBulkUpdateJSONBody Provider

// CircuitsProvidersPartialUpdateJSONBody defines parameters for CircuitsProvidersPartialUpdate.
type CircuitsProvidersPartialUpdateJSONBody PatchedProvider

// CircuitsProvidersUpdateJSONBody defines parameters for CircuitsProvidersUpdate.
type CircuitsProvidersUpdateJSONBody Provider

// DcimCablesListParams defines parameters for DcimCablesList.
type DcimCablesListParams struct {
	Color      *[]string           `json:"color,omitempty"`
	ColorN     *[]string           `json:"color__n,omitempty"`
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (ID)
	DeviceId       *[]openapi_types.UUID `json:"device_id,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	Label          *[]string             `json:"label,omitempty"`
	LabelIc        *[]string             `json:"label__ic,omitempty"`
	LabelIe        *[]string             `json:"label__ie,omitempty"`
	LabelIew       *[]string             `json:"label__iew,omitempty"`
	LabelIre       *[]string             `json:"label__ire,omitempty"`
	LabelIsw       *[]string             `json:"label__isw,omitempty"`
	LabelN         *[]string             `json:"label__n,omitempty"`
	LabelNic       *[]string             `json:"label__nic,omitempty"`
	LabelNie       *[]string             `json:"label__nie,omitempty"`
	LabelNiew      *[]string             `json:"label__niew,omitempty"`
	LabelNire      *[]string             `json:"label__nire,omitempty"`
	LabelNisw      *[]string             `json:"label__nisw,omitempty"`
	LabelNre       *[]string             `json:"label__nre,omitempty"`
	LabelRe        *[]string             `json:"label__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`
	Length         *[]int                `json:"length,omitempty"`
	LengthGt       *[]int                `json:"length__gt,omitempty"`
	LengthGte      *[]int                `json:"length__gte,omitempty"`
	LengthLt       *[]int                `json:"length__lt,omitempty"`
	LengthLte      *[]int                `json:"length__lte,omitempty"`
	LengthN        *[]int                `json:"length__n,omitempty"`
	LengthUnit     *string               `json:"length_unit,omitempty"`
	LengthUnitN    *string               `json:"length_unit__n,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Rack (name)
	Rack *[]string `json:"rack,omitempty"`

	// Rack (ID)
	RackId *[]openapi_types.UUID `json:"rack_id,omitempty"`

	// Site (name)
	Site *[]string `json:"site,omitempty"`

	// Site (ID)
	SiteId  *[]openapi_types.UUID `json:"site_id,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (name)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`
	Type     *[]string             `json:"type,omitempty"`
	TypeN    *[]string             `json:"type__n,omitempty"`
}

// DcimCablesBulkPartialUpdateJSONBody defines parameters for DcimCablesBulkPartialUpdate.
type DcimCablesBulkPartialUpdateJSONBody PatchedWritableCable

// DcimCablesCreateJSONBody defines parameters for DcimCablesCreate.
type DcimCablesCreateJSONBody WritableCable

// DcimCablesBulkUpdateJSONBody defines parameters for DcimCablesBulkUpdate.
type DcimCablesBulkUpdateJSONBody WritableCable

// DcimCablesPartialUpdateJSONBody defines parameters for DcimCablesPartialUpdate.
type DcimCablesPartialUpdateJSONBody PatchedWritableCable

// DcimCablesUpdateJSONBody defines parameters for DcimCablesUpdate.
type DcimCablesUpdateJSONBody WritableCable

// DcimConnectedDeviceListParams defines parameters for DcimConnectedDeviceList.
type DcimConnectedDeviceListParams struct {
	// The name of the peer device
	PeerDevice string `json:"peer_device"`

	// The name of the peer interface
	PeerInterface string `json:"peer_interface"`
}

// DcimConsoleConnectionsListParams defines parameters for DcimConsoleConnectionsList.
type DcimConsoleConnectionsListParams struct {
	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Site (slug)
	Site *string `json:"site,omitempty"`
}

// DcimConsolePortTemplatesListParams defines parameters for DcimConsolePortTemplatesList.
type DcimConsolePortTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimConsolePortTemplatesBulkPartialUpdateJSONBody defines parameters for DcimConsolePortTemplatesBulkPartialUpdate.
type DcimConsolePortTemplatesBulkPartialUpdateJSONBody PatchedWritableConsolePortTemplate

// DcimConsolePortTemplatesCreateJSONBody defines parameters for DcimConsolePortTemplatesCreate.
type DcimConsolePortTemplatesCreateJSONBody WritableConsolePortTemplate

// DcimConsolePortTemplatesBulkUpdateJSONBody defines parameters for DcimConsolePortTemplatesBulkUpdate.
type DcimConsolePortTemplatesBulkUpdateJSONBody WritableConsolePortTemplate

// DcimConsolePortTemplatesPartialUpdateJSONBody defines parameters for DcimConsolePortTemplatesPartialUpdate.
type DcimConsolePortTemplatesPartialUpdateJSONBody PatchedWritableConsolePortTemplate

// DcimConsolePortTemplatesUpdateJSONBody defines parameters for DcimConsolePortTemplatesUpdate.
type DcimConsolePortTemplatesUpdateJSONBody WritableConsolePortTemplate

// DcimConsolePortsListParams defines parameters for DcimConsolePortsList.
type DcimConsolePortsListParams struct {
	Cabled *bool `json:"cabled,omitempty"`

	// Connected status (bool)
	Connected       *bool     `json:"connected,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Physical port type
	Type *[]string `json:"type,omitempty"`

	// Physical port type
	TypeN *[]string `json:"type__n,omitempty"`
}

// DcimConsolePortsBulkPartialUpdateJSONBody defines parameters for DcimConsolePortsBulkPartialUpdate.
type DcimConsolePortsBulkPartialUpdateJSONBody PatchedWritableConsolePort

// DcimConsolePortsCreateJSONBody defines parameters for DcimConsolePortsCreate.
type DcimConsolePortsCreateJSONBody WritableConsolePort

// DcimConsolePortsBulkUpdateJSONBody defines parameters for DcimConsolePortsBulkUpdate.
type DcimConsolePortsBulkUpdateJSONBody WritableConsolePort

// DcimConsolePortsPartialUpdateJSONBody defines parameters for DcimConsolePortsPartialUpdate.
type DcimConsolePortsPartialUpdateJSONBody PatchedWritableConsolePort

// DcimConsolePortsUpdateJSONBody defines parameters for DcimConsolePortsUpdate.
type DcimConsolePortsUpdateJSONBody WritableConsolePort

// DcimConsoleServerPortTemplatesListParams defines parameters for DcimConsoleServerPortTemplatesList.
type DcimConsoleServerPortTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimConsoleServerPortTemplatesBulkPartialUpdateJSONBody defines parameters for DcimConsoleServerPortTemplatesBulkPartialUpdate.
type DcimConsoleServerPortTemplatesBulkPartialUpdateJSONBody PatchedWritableConsoleServerPortTemplate

// DcimConsoleServerPortTemplatesCreateJSONBody defines parameters for DcimConsoleServerPortTemplatesCreate.
type DcimConsoleServerPortTemplatesCreateJSONBody WritableConsoleServerPortTemplate

// DcimConsoleServerPortTemplatesBulkUpdateJSONBody defines parameters for DcimConsoleServerPortTemplatesBulkUpdate.
type DcimConsoleServerPortTemplatesBulkUpdateJSONBody WritableConsoleServerPortTemplate

// DcimConsoleServerPortTemplatesPartialUpdateJSONBody defines parameters for DcimConsoleServerPortTemplatesPartialUpdate.
type DcimConsoleServerPortTemplatesPartialUpdateJSONBody PatchedWritableConsoleServerPortTemplate

// DcimConsoleServerPortTemplatesUpdateJSONBody defines parameters for DcimConsoleServerPortTemplatesUpdate.
type DcimConsoleServerPortTemplatesUpdateJSONBody WritableConsoleServerPortTemplate

// DcimConsoleServerPortsListParams defines parameters for DcimConsoleServerPortsList.
type DcimConsoleServerPortsListParams struct {
	Cabled *bool `json:"cabled,omitempty"`

	// Connected status (bool)
	Connected       *bool     `json:"connected,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Physical port type
	Type *[]string `json:"type,omitempty"`

	// Physical port type
	TypeN *[]string `json:"type__n,omitempty"`
}

// DcimConsoleServerPortsBulkPartialUpdateJSONBody defines parameters for DcimConsoleServerPortsBulkPartialUpdate.
type DcimConsoleServerPortsBulkPartialUpdateJSONBody PatchedWritableConsoleServerPort

// DcimConsoleServerPortsCreateJSONBody defines parameters for DcimConsoleServerPortsCreate.
type DcimConsoleServerPortsCreateJSONBody WritableConsoleServerPort

// DcimConsoleServerPortsBulkUpdateJSONBody defines parameters for DcimConsoleServerPortsBulkUpdate.
type DcimConsoleServerPortsBulkUpdateJSONBody WritableConsoleServerPort

// DcimConsoleServerPortsPartialUpdateJSONBody defines parameters for DcimConsoleServerPortsPartialUpdate.
type DcimConsoleServerPortsPartialUpdateJSONBody PatchedWritableConsoleServerPort

// DcimConsoleServerPortsUpdateJSONBody defines parameters for DcimConsoleServerPortsUpdate.
type DcimConsoleServerPortsUpdateJSONBody WritableConsoleServerPort

// DcimDeviceBayTemplatesListParams defines parameters for DcimDeviceBayTemplatesList.
type DcimDeviceBayTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`
}

// DcimDeviceBayTemplatesBulkPartialUpdateJSONBody defines parameters for DcimDeviceBayTemplatesBulkPartialUpdate.
type DcimDeviceBayTemplatesBulkPartialUpdateJSONBody PatchedWritableDeviceBayTemplate

// DcimDeviceBayTemplatesCreateJSONBody defines parameters for DcimDeviceBayTemplatesCreate.
type DcimDeviceBayTemplatesCreateJSONBody WritableDeviceBayTemplate

// DcimDeviceBayTemplatesBulkUpdateJSONBody defines parameters for DcimDeviceBayTemplatesBulkUpdate.
type DcimDeviceBayTemplatesBulkUpdateJSONBody WritableDeviceBayTemplate

// DcimDeviceBayTemplatesPartialUpdateJSONBody defines parameters for DcimDeviceBayTemplatesPartialUpdate.
type DcimDeviceBayTemplatesPartialUpdateJSONBody PatchedWritableDeviceBayTemplate

// DcimDeviceBayTemplatesUpdateJSONBody defines parameters for DcimDeviceBayTemplatesUpdate.
type DcimDeviceBayTemplatesUpdateJSONBody WritableDeviceBayTemplate

// DcimDeviceBaysListParams defines parameters for DcimDeviceBaysList.
type DcimDeviceBaysListParams struct {
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`
}

// DcimDeviceBaysBulkPartialUpdateJSONBody defines parameters for DcimDeviceBaysBulkPartialUpdate.
type DcimDeviceBaysBulkPartialUpdateJSONBody PatchedWritableDeviceBay

// DcimDeviceBaysCreateJSONBody defines parameters for DcimDeviceBaysCreate.
type DcimDeviceBaysCreateJSONBody WritableDeviceBay

// DcimDeviceBaysBulkUpdateJSONBody defines parameters for DcimDeviceBaysBulkUpdate.
type DcimDeviceBaysBulkUpdateJSONBody WritableDeviceBay

// DcimDeviceBaysPartialUpdateJSONBody defines parameters for DcimDeviceBaysPartialUpdate.
type DcimDeviceBaysPartialUpdateJSONBody PatchedWritableDeviceBay

// DcimDeviceBaysUpdateJSONBody defines parameters for DcimDeviceBaysUpdate.
type DcimDeviceBaysUpdateJSONBody WritableDeviceBay

// DcimDeviceRolesListParams defines parameters for DcimDeviceRolesList.
type DcimDeviceRolesListParams struct {
	Color          *[]string             `json:"color,omitempty"`
	ColorIc        *[]string             `json:"color__ic,omitempty"`
	ColorIe        *[]string             `json:"color__ie,omitempty"`
	ColorIew       *[]string             `json:"color__iew,omitempty"`
	ColorIre       *[]string             `json:"color__ire,omitempty"`
	ColorIsw       *[]string             `json:"color__isw,omitempty"`
	ColorN         *[]string             `json:"color__n,omitempty"`
	ColorNic       *[]string             `json:"color__nic,omitempty"`
	ColorNie       *[]string             `json:"color__nie,omitempty"`
	ColorNiew      *[]string             `json:"color__niew,omitempty"`
	ColorNire      *[]string             `json:"color__nire,omitempty"`
	ColorNisw      *[]string             `json:"color__nisw,omitempty"`
	ColorNre       *[]string             `json:"color__nre,omitempty"`
	ColorRe        *[]string             `json:"color__re,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
	VmRole   *bool     `json:"vm_role,omitempty"`
}

// DcimDeviceRolesBulkPartialUpdateJSONBody defines parameters for DcimDeviceRolesBulkPartialUpdate.
type DcimDeviceRolesBulkPartialUpdateJSONBody PatchedDeviceRole

// DcimDeviceRolesCreateJSONBody defines parameters for DcimDeviceRolesCreate.
type DcimDeviceRolesCreateJSONBody DeviceRole

// DcimDeviceRolesBulkUpdateJSONBody defines parameters for DcimDeviceRolesBulkUpdate.
type DcimDeviceRolesBulkUpdateJSONBody DeviceRole

// DcimDeviceRolesPartialUpdateJSONBody defines parameters for DcimDeviceRolesPartialUpdate.
type DcimDeviceRolesPartialUpdateJSONBody PatchedDeviceRole

// DcimDeviceRolesUpdateJSONBody defines parameters for DcimDeviceRolesUpdate.
type DcimDeviceRolesUpdateJSONBody DeviceRole

// DcimDeviceTypesListParams defines parameters for DcimDeviceTypesList.
type DcimDeviceTypesListParams struct {
	// Has console ports
	ConsolePorts *bool `json:"console_ports,omitempty"`

	// Has console server ports
	ConsoleServerPorts *bool               `json:"console_server_ports,omitempty"`
	Created            *openapi_types.Date `json:"created,omitempty"`
	CreatedGte         *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte         *openapi_types.Date `json:"created__lte,omitempty"`

	// Has device bays
	DeviceBays *bool                 `json:"device_bays,omitempty"`
	Id         *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc       *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe       *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew      *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre      *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw      *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN        *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic      *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie      *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew     *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire     *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw     *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre      *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe       *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Has interfaces
	Interfaces     *bool      `json:"interfaces,omitempty"`
	IsFullDepth    *bool      `json:"is_full_depth,omitempty"`
	LastUpdated    *time.Time `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Manufacturer (slug)
	Manufacturer *[]string `json:"manufacturer,omitempty"`

	// Manufacturer (slug)
	ManufacturerN *[]string `json:"manufacturer__n,omitempty"`

	// Manufacturer (ID)
	ManufacturerId *[]openapi_types.UUID `json:"manufacturer_id,omitempty"`

	// Manufacturer (ID)
	ManufacturerIdN *[]openapi_types.UUID `json:"manufacturer_id__n,omitempty"`
	Model           *[]string             `json:"model,omitempty"`
	ModelIc         *[]string             `json:"model__ic,omitempty"`
	ModelIe         *[]string             `json:"model__ie,omitempty"`
	ModelIew        *[]string             `json:"model__iew,omitempty"`
	ModelIre        *[]string             `json:"model__ire,omitempty"`
	ModelIsw        *[]string             `json:"model__isw,omitempty"`
	ModelN          *[]string             `json:"model__n,omitempty"`
	ModelNic        *[]string             `json:"model__nic,omitempty"`
	ModelNie        *[]string             `json:"model__nie,omitempty"`
	ModelNiew       *[]string             `json:"model__niew,omitempty"`
	ModelNire       *[]string             `json:"model__nire,omitempty"`
	ModelNisw       *[]string             `json:"model__nisw,omitempty"`
	ModelNre        *[]string             `json:"model__nre,omitempty"`
	ModelRe         *[]string             `json:"model__re,omitempty"`

	// The initial index from which to return the results.
	Offset         *int      `json:"offset,omitempty"`
	PartNumber     *[]string `json:"part_number,omitempty"`
	PartNumberIc   *[]string `json:"part_number__ic,omitempty"`
	PartNumberIe   *[]string `json:"part_number__ie,omitempty"`
	PartNumberIew  *[]string `json:"part_number__iew,omitempty"`
	PartNumberIre  *[]string `json:"part_number__ire,omitempty"`
	PartNumberIsw  *[]string `json:"part_number__isw,omitempty"`
	PartNumberN    *[]string `json:"part_number__n,omitempty"`
	PartNumberNic  *[]string `json:"part_number__nic,omitempty"`
	PartNumberNie  *[]string `json:"part_number__nie,omitempty"`
	PartNumberNiew *[]string `json:"part_number__niew,omitempty"`
	PartNumberNire *[]string `json:"part_number__nire,omitempty"`
	PartNumberNisw *[]string `json:"part_number__nisw,omitempty"`
	PartNumberNre  *[]string `json:"part_number__nre,omitempty"`
	PartNumberRe   *[]string `json:"part_number__re,omitempty"`

	// Has pass-through ports
	PassThroughPorts *bool `json:"pass_through_ports,omitempty"`

	// Has power outlets
	PowerOutlets *bool `json:"power_outlets,omitempty"`

	// Has power ports
	PowerPorts *bool `json:"power_ports,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`

	// Parent devices house child devices in device bays. Leave blank if this device type is neither a parent nor a child.
	SubdeviceRole *string `json:"subdevice_role,omitempty"`

	// Parent devices house child devices in device bays. Leave blank if this device type is neither a parent nor a child.
	SubdeviceRoleN *string   `json:"subdevice_role__n,omitempty"`
	Tag            *[]string `json:"tag,omitempty"`
	TagN           *[]string `json:"tag__n,omitempty"`
	UHeight        *[]int    `json:"u_height,omitempty"`
	UHeightGt      *[]int    `json:"u_height__gt,omitempty"`
	UHeightGte     *[]int    `json:"u_height__gte,omitempty"`
	UHeightLt      *[]int    `json:"u_height__lt,omitempty"`
	UHeightLte     *[]int    `json:"u_height__lte,omitempty"`
	UHeightN       *[]int    `json:"u_height__n,omitempty"`
}

// DcimDeviceTypesBulkPartialUpdateJSONBody defines parameters for DcimDeviceTypesBulkPartialUpdate.
type DcimDeviceTypesBulkPartialUpdateJSONBody PatchedWritableDeviceType

// DcimDeviceTypesCreateJSONBody defines parameters for DcimDeviceTypesCreate.
type DcimDeviceTypesCreateJSONBody WritableDeviceType

// DcimDeviceTypesBulkUpdateJSONBody defines parameters for DcimDeviceTypesBulkUpdate.
type DcimDeviceTypesBulkUpdateJSONBody WritableDeviceType

// DcimDeviceTypesPartialUpdateJSONBody defines parameters for DcimDeviceTypesPartialUpdate.
type DcimDeviceTypesPartialUpdateJSONBody PatchedWritableDeviceType

// DcimDeviceTypesUpdateJSONBody defines parameters for DcimDeviceTypesUpdate.
type DcimDeviceTypesUpdateJSONBody WritableDeviceType

// DcimDevicesListParams defines parameters for DcimDevicesList.
type DcimDevicesListParams struct {
	AssetTag     *[]string `json:"asset_tag,omitempty"`
	AssetTagIc   *[]string `json:"asset_tag__ic,omitempty"`
	AssetTagIe   *[]string `json:"asset_tag__ie,omitempty"`
	AssetTagIew  *[]string `json:"asset_tag__iew,omitempty"`
	AssetTagIre  *[]string `json:"asset_tag__ire,omitempty"`
	AssetTagIsw  *[]string `json:"asset_tag__isw,omitempty"`
	AssetTagN    *[]string `json:"asset_tag__n,omitempty"`
	AssetTagNic  *[]string `json:"asset_tag__nic,omitempty"`
	AssetTagNie  *[]string `json:"asset_tag__nie,omitempty"`
	AssetTagNiew *[]string `json:"asset_tag__niew,omitempty"`
	AssetTagNire *[]string `json:"asset_tag__nire,omitempty"`
	AssetTagNisw *[]string `json:"asset_tag__nisw,omitempty"`
	AssetTagNre  *[]string `json:"asset_tag__nre,omitempty"`
	AssetTagRe   *[]string `json:"asset_tag__re,omitempty"`

	// VM cluster (ID)
	ClusterId *[]openapi_types.UUID `json:"cluster_id,omitempty"`

	// VM cluster (ID)
	ClusterIdN *[]openapi_types.UUID `json:"cluster_id__n,omitempty"`

	// Has console ports
	ConsolePorts *bool `json:"console_ports,omitempty"`

	// Has console server ports
	ConsoleServerPorts *bool               `json:"console_server_ports,omitempty"`
	Created            *openapi_types.Date `json:"created,omitempty"`
	CreatedGte         *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte         *openapi_types.Date `json:"created__lte,omitempty"`

	// Has device bays
	DeviceBays *bool `json:"device_bays,omitempty"`

	// Device type (ID)
	DeviceTypeId *[]openapi_types.UUID `json:"device_type_id,omitempty"`

	// Device type (ID)
	DeviceTypeIdN *[]openapi_types.UUID `json:"device_type_id__n,omitempty"`
	Face          *string               `json:"face,omitempty"`
	FaceN         *string               `json:"face__n,omitempty"`

	// Has console ports
	HasConsolePorts *bool `json:"has_console_ports,omitempty"`

	// Has console server ports
	HasConsoleServerPorts *bool `json:"has_console_server_ports,omitempty"`

	// Has device bays
	HasDeviceBays *bool `json:"has_device_bays,omitempty"`

	// Has front ports
	HasFrontPorts *bool `json:"has_front_ports,omitempty"`

	// Has interfaces
	HasInterfaces *bool `json:"has_interfaces,omitempty"`

	// Has power outlets
	HasPowerOutlets *bool `json:"has_power_outlets,omitempty"`

	// Has power ports
	HasPowerPorts *bool `json:"has_power_ports,omitempty"`

	// Has a primary IP
	HasPrimaryIp *bool `json:"has_primary_ip,omitempty"`

	// Has rear ports
	HasRearPorts *bool                 `json:"has_rear_ports,omitempty"`
	Id           *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc         *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe         *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew        *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre        *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw        *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN          *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic        *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie        *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew       *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire       *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw       *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre        *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe         *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Has interfaces
	Interfaces *bool `json:"interfaces,omitempty"`

	// Is full depth
	IsFullDepth *bool `json:"is_full_depth,omitempty"`

	// Is a virtual chassis member
	IsVirtualChassisMember *bool      `json:"is_virtual_chassis_member,omitempty"`
	LastUpdated            *time.Time `json:"last_updated,omitempty"`
	LastUpdatedGte         *time.Time `json:"last_updated__gte,omitempty"`
	LastUpdatedLte         *time.Time `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Has local config context data
	LocalContextData *bool `json:"local_context_data,omitempty"`

	// Schema (slug)
	LocalContextSchema *[]string `json:"local_context_schema,omitempty"`

	// Schema (slug)
	LocalContextSchemaN *[]string `json:"local_context_schema__n,omitempty"`

	// Schema (ID)
	LocalContextSchemaId *[]openapi_types.UUID `json:"local_context_schema_id,omitempty"`

	// Schema (ID)
	LocalContextSchemaIdN *[]openapi_types.UUID `json:"local_context_schema_id__n,omitempty"`

	// MAC address
	MacAddress *[]string `json:"mac_address,omitempty"`

	// MAC address
	MacAddressIc *[]string `json:"mac_address__ic,omitempty"`

	// MAC address
	MacAddressIe *[]string `json:"mac_address__ie,omitempty"`

	// MAC address
	MacAddressIew *[]string `json:"mac_address__iew,omitempty"`

	// MAC address
	MacAddressIre *[]string `json:"mac_address__ire,omitempty"`

	// MAC address
	MacAddressIsw *[]string `json:"mac_address__isw,omitempty"`

	// MAC address
	MacAddressN *[]string `json:"mac_address__n,omitempty"`

	// MAC address
	MacAddressNic *[]string `json:"mac_address__nic,omitempty"`

	// MAC address
	MacAddressNie *[]string `json:"mac_address__nie,omitempty"`

	// MAC address
	MacAddressNiew *[]string `json:"mac_address__niew,omitempty"`

	// MAC address
	MacAddressNire *[]string `json:"mac_address__nire,omitempty"`

	// MAC address
	MacAddressNisw *[]string `json:"mac_address__nisw,omitempty"`

	// MAC address
	MacAddressNre *[]string `json:"mac_address__nre,omitempty"`

	// MAC address
	MacAddressRe *[]string `json:"mac_address__re,omitempty"`

	// Manufacturer (slug)
	Manufacturer *[]string `json:"manufacturer,omitempty"`

	// Manufacturer (slug)
	ManufacturerN *[]string `json:"manufacturer__n,omitempty"`

	// Manufacturer (ID)
	ManufacturerId *[]openapi_types.UUID `json:"manufacturer_id,omitempty"`

	// Manufacturer (ID)
	ManufacturerIdN *[]openapi_types.UUID `json:"manufacturer_id__n,omitempty"`

	// Device model (slug)
	Model *[]string `json:"model,omitempty"`

	// Device model (slug)
	ModelN   *[]string `json:"model__n,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Has pass-through ports
	PassThroughPorts *bool `json:"pass_through_ports,omitempty"`

	// Platform (slug)
	Platform *[]string `json:"platform,omitempty"`

	// Platform (slug)
	PlatformN *[]string `json:"platform__n,omitempty"`

	// Platform (ID)
	PlatformId *[]openapi_types.UUID `json:"platform_id,omitempty"`

	// Platform (ID)
	PlatformIdN *[]openapi_types.UUID `json:"platform_id__n,omitempty"`
	Position    *[]int                `json:"position,omitempty"`
	PositionGt  *[]int                `json:"position__gt,omitempty"`
	PositionGte *[]int                `json:"position__gte,omitempty"`
	PositionLt  *[]int                `json:"position__lt,omitempty"`
	PositionLte *[]int                `json:"position__lte,omitempty"`
	PositionN   *[]int                `json:"position__n,omitempty"`

	// Has power outlets
	PowerOutlets *bool `json:"power_outlets,omitempty"`

	// Has power ports
	PowerPorts *bool `json:"power_ports,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Rack group (ID)
	RackGroupId *[]openapi_types.UUID `json:"rack_group_id,omitempty"`

	// Rack group (ID)
	RackGroupIdN *[]openapi_types.UUID `json:"rack_group_id__n,omitempty"`

	// Rack (ID)
	RackId *[]openapi_types.UUID `json:"rack_id,omitempty"`

	// Rack (ID)
	RackIdN *[]openapi_types.UUID `json:"rack_id__n,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role (ID)
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role (ID)
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`

	// Secrets group (slug)
	SecretsGroup *[]string `json:"secrets_group,omitempty"`

	// Secrets group (slug)
	SecretsGroupN *[]string `json:"secrets_group__n,omitempty"`

	// Secrets group (ID)
	SecretsGroupId *[]openapi_types.UUID `json:"secrets_group_id,omitempty"`

	// Secrets group (ID)
	SecretsGroupIdN *[]openapi_types.UUID `json:"secrets_group_id__n,omitempty"`
	Serial          *string               `json:"serial,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN     *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
	VcPosition    *[]int                `json:"vc_position,omitempty"`
	VcPositionGt  *[]int                `json:"vc_position__gt,omitempty"`
	VcPositionGte *[]int                `json:"vc_position__gte,omitempty"`
	VcPositionLt  *[]int                `json:"vc_position__lt,omitempty"`
	VcPositionLte *[]int                `json:"vc_position__lte,omitempty"`
	VcPositionN   *[]int                `json:"vc_position__n,omitempty"`
	VcPriority    *[]int                `json:"vc_priority,omitempty"`
	VcPriorityGt  *[]int                `json:"vc_priority__gt,omitempty"`
	VcPriorityGte *[]int                `json:"vc_priority__gte,omitempty"`
	VcPriorityLt  *[]int                `json:"vc_priority__lt,omitempty"`
	VcPriorityLte *[]int                `json:"vc_priority__lte,omitempty"`
	VcPriorityN   *[]int                `json:"vc_priority__n,omitempty"`

	// Virtual chassis (ID)
	VirtualChassisId *[]openapi_types.UUID `json:"virtual_chassis_id,omitempty"`

	// Virtual chassis (ID)
	VirtualChassisIdN *[]openapi_types.UUID `json:"virtual_chassis_id__n,omitempty"`

	// Is a virtual chassis member
	VirtualChassisMember *bool `json:"virtual_chassis_member,omitempty"`
}

// DcimDevicesBulkPartialUpdateJSONBody defines parameters for DcimDevicesBulkPartialUpdate.
type DcimDevicesBulkPartialUpdateJSONBody PatchedWritableDeviceWithConfigContext

// DcimDevicesCreateJSONBody defines parameters for DcimDevicesCreate.
type DcimDevicesCreateJSONBody WritableDeviceWithConfigContext

// DcimDevicesBulkUpdateJSONBody defines parameters for DcimDevicesBulkUpdate.
type DcimDevicesBulkUpdateJSONBody WritableDeviceWithConfigContext

// DcimDevicesPartialUpdateJSONBody defines parameters for DcimDevicesPartialUpdate.
type DcimDevicesPartialUpdateJSONBody PatchedWritableDeviceWithConfigContext

// DcimDevicesUpdateJSONBody defines parameters for DcimDevicesUpdate.
type DcimDevicesUpdateJSONBody WritableDeviceWithConfigContext

// DcimDevicesNapalmRetrieveParams defines parameters for DcimDevicesNapalmRetrieve.
type DcimDevicesNapalmRetrieveParams struct {
	Method string `json:"method"`
}

// DcimFrontPortTemplatesListParams defines parameters for DcimFrontPortTemplatesList.
type DcimFrontPortTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimFrontPortTemplatesBulkPartialUpdateJSONBody defines parameters for DcimFrontPortTemplatesBulkPartialUpdate.
type DcimFrontPortTemplatesBulkPartialUpdateJSONBody PatchedWritableFrontPortTemplate

// DcimFrontPortTemplatesCreateJSONBody defines parameters for DcimFrontPortTemplatesCreate.
type DcimFrontPortTemplatesCreateJSONBody WritableFrontPortTemplate

// DcimFrontPortTemplatesBulkUpdateJSONBody defines parameters for DcimFrontPortTemplatesBulkUpdate.
type DcimFrontPortTemplatesBulkUpdateJSONBody WritableFrontPortTemplate

// DcimFrontPortTemplatesPartialUpdateJSONBody defines parameters for DcimFrontPortTemplatesPartialUpdate.
type DcimFrontPortTemplatesPartialUpdateJSONBody PatchedWritableFrontPortTemplate

// DcimFrontPortTemplatesUpdateJSONBody defines parameters for DcimFrontPortTemplatesUpdate.
type DcimFrontPortTemplatesUpdateJSONBody WritableFrontPortTemplate

// DcimFrontPortsListParams defines parameters for DcimFrontPortsList.
type DcimFrontPortsListParams struct {
	Cabled          *bool     `json:"cabled,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`
	Type    *string               `json:"type,omitempty"`
	TypeN   *string               `json:"type__n,omitempty"`
}

// DcimFrontPortsBulkPartialUpdateJSONBody defines parameters for DcimFrontPortsBulkPartialUpdate.
type DcimFrontPortsBulkPartialUpdateJSONBody PatchedWritableFrontPort

// DcimFrontPortsCreateJSONBody defines parameters for DcimFrontPortsCreate.
type DcimFrontPortsCreateJSONBody WritableFrontPort

// DcimFrontPortsBulkUpdateJSONBody defines parameters for DcimFrontPortsBulkUpdate.
type DcimFrontPortsBulkUpdateJSONBody WritableFrontPort

// DcimFrontPortsPartialUpdateJSONBody defines parameters for DcimFrontPortsPartialUpdate.
type DcimFrontPortsPartialUpdateJSONBody PatchedWritableFrontPort

// DcimFrontPortsUpdateJSONBody defines parameters for DcimFrontPortsUpdate.
type DcimFrontPortsUpdateJSONBody WritableFrontPort

// DcimInterfaceConnectionsListParams defines parameters for DcimInterfaceConnectionsList.
type DcimInterfaceConnectionsListParams struct {
	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Site (slug)
	Site *string `json:"site,omitempty"`
}

// DcimInterfaceTemplatesListParams defines parameters for DcimInterfaceTemplatesList.
type DcimInterfaceTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	MgmtOnly *bool     `json:"mgmt_only,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimInterfaceTemplatesBulkPartialUpdateJSONBody defines parameters for DcimInterfaceTemplatesBulkPartialUpdate.
type DcimInterfaceTemplatesBulkPartialUpdateJSONBody PatchedWritableInterfaceTemplate

// DcimInterfaceTemplatesCreateJSONBody defines parameters for DcimInterfaceTemplatesCreate.
type DcimInterfaceTemplatesCreateJSONBody WritableInterfaceTemplate

// DcimInterfaceTemplatesBulkUpdateJSONBody defines parameters for DcimInterfaceTemplatesBulkUpdate.
type DcimInterfaceTemplatesBulkUpdateJSONBody WritableInterfaceTemplate

// DcimInterfaceTemplatesPartialUpdateJSONBody defines parameters for DcimInterfaceTemplatesPartialUpdate.
type DcimInterfaceTemplatesPartialUpdateJSONBody PatchedWritableInterfaceTemplate

// DcimInterfaceTemplatesUpdateJSONBody defines parameters for DcimInterfaceTemplatesUpdate.
type DcimInterfaceTemplatesUpdateJSONBody WritableInterfaceTemplate

// DcimInterfacesListParams defines parameters for DcimInterfacesList.
type DcimInterfacesListParams struct {
	Cabled *bool `json:"cabled,omitempty"`

	// Connected status (bool)
	Connected       *bool     `json:"connected,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`
	Enabled  *bool                 `json:"enabled,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Kind of interface
	Kind *string `json:"kind,omitempty"`

	// LAG interface (ID)
	LagId *[]openapi_types.UUID `json:"lag_id,omitempty"`

	// LAG interface (ID)
	LagIdN *[]openapi_types.UUID `json:"lag_id__n,omitempty"`

	// Number of results to return per page.
	Limit          *int      `json:"limit,omitempty"`
	MacAddress     *[]string `json:"mac_address,omitempty"`
	MacAddressIc   *[]string `json:"mac_address__ic,omitempty"`
	MacAddressIe   *[]string `json:"mac_address__ie,omitempty"`
	MacAddressIew  *[]string `json:"mac_address__iew,omitempty"`
	MacAddressIre  *[]string `json:"mac_address__ire,omitempty"`
	MacAddressIsw  *[]string `json:"mac_address__isw,omitempty"`
	MacAddressN    *[]string `json:"mac_address__n,omitempty"`
	MacAddressNic  *[]string `json:"mac_address__nic,omitempty"`
	MacAddressNie  *[]string `json:"mac_address__nie,omitempty"`
	MacAddressNiew *[]string `json:"mac_address__niew,omitempty"`
	MacAddressNire *[]string `json:"mac_address__nire,omitempty"`
	MacAddressNisw *[]string `json:"mac_address__nisw,omitempty"`
	MacAddressNre  *[]string `json:"mac_address__nre,omitempty"`
	MacAddressRe   *[]string `json:"mac_address__re,omitempty"`
	MgmtOnly       *bool     `json:"mgmt_only,omitempty"`
	Mode           *string   `json:"mode,omitempty"`
	ModeN          *string   `json:"mode__n,omitempty"`
	Mtu            *[]int    `json:"mtu,omitempty"`
	MtuGt          *[]int    `json:"mtu__gt,omitempty"`
	MtuGte         *[]int    `json:"mtu__gte,omitempty"`
	MtuLt          *[]int    `json:"mtu__lt,omitempty"`
	MtuLte         *[]int    `json:"mtu__lte,omitempty"`
	MtuN           *[]int    `json:"mtu__n,omitempty"`
	Name           *[]string `json:"name,omitempty"`
	NameIc         *[]string `json:"name__ic,omitempty"`
	NameIe         *[]string `json:"name__ie,omitempty"`
	NameIew        *[]string `json:"name__iew,omitempty"`
	NameIre        *[]string `json:"name__ire,omitempty"`
	NameIsw        *[]string `json:"name__isw,omitempty"`
	NameN          *[]string `json:"name__n,omitempty"`
	NameNic        *[]string `json:"name__nic,omitempty"`
	NameNie        *[]string `json:"name__nie,omitempty"`
	NameNiew       *[]string `json:"name__niew,omitempty"`
	NameNire       *[]string `json:"name__nire,omitempty"`
	NameNisw       *[]string `json:"name__nisw,omitempty"`
	NameNre        *[]string `json:"name__nre,omitempty"`
	NameRe         *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`
	Type    *[]string             `json:"type,omitempty"`
	TypeN   *[]string             `json:"type__n,omitempty"`

	// Assigned VID
	Vlan *float32 `json:"vlan,omitempty"`

	// Assigned VLAN
	VlanId *string `json:"vlan_id,omitempty"`
}

// DcimInterfacesBulkPartialUpdateJSONBody defines parameters for DcimInterfacesBulkPartialUpdate.
type DcimInterfacesBulkPartialUpdateJSONBody PatchedWritableInterface

// DcimInterfacesCreateJSONBody defines parameters for DcimInterfacesCreate.
type DcimInterfacesCreateJSONBody WritableInterface

// DcimInterfacesBulkUpdateJSONBody defines parameters for DcimInterfacesBulkUpdate.
type DcimInterfacesBulkUpdateJSONBody WritableInterface

// DcimInterfacesPartialUpdateJSONBody defines parameters for DcimInterfacesPartialUpdate.
type DcimInterfacesPartialUpdateJSONBody PatchedWritableInterface

// DcimInterfacesUpdateJSONBody defines parameters for DcimInterfacesUpdate.
type DcimInterfacesUpdateJSONBody WritableInterface

// DcimInventoryItemsListParams defines parameters for DcimInventoryItemsList.
type DcimInventoryItemsListParams struct {
	AssetTag     *[]string `json:"asset_tag,omitempty"`
	AssetTagIc   *[]string `json:"asset_tag__ic,omitempty"`
	AssetTagIe   *[]string `json:"asset_tag__ie,omitempty"`
	AssetTagIew  *[]string `json:"asset_tag__iew,omitempty"`
	AssetTagIre  *[]string `json:"asset_tag__ire,omitempty"`
	AssetTagIsw  *[]string `json:"asset_tag__isw,omitempty"`
	AssetTagN    *[]string `json:"asset_tag__n,omitempty"`
	AssetTagNic  *[]string `json:"asset_tag__nic,omitempty"`
	AssetTagNie  *[]string `json:"asset_tag__nie,omitempty"`
	AssetTagNiew *[]string `json:"asset_tag__niew,omitempty"`
	AssetTagNire *[]string `json:"asset_tag__nire,omitempty"`
	AssetTagNisw *[]string `json:"asset_tag__nisw,omitempty"`
	AssetTagNre  *[]string `json:"asset_tag__nre,omitempty"`
	AssetTagRe   *[]string `json:"asset_tag__re,omitempty"`

	// Device (name)
	Device *openapi_types.UUID `json:"device,omitempty"`

	// Device (name)
	DeviceN *openapi_types.UUID `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN  *openapi_types.UUID   `json:"device_id__n,omitempty"`
	Discovered *bool                 `json:"discovered,omitempty"`
	Id         *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc       *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe       *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew      *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre      *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw      *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN        *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic      *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie      *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew     *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire     *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw     *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre      *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe       *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Manufacturer (slug)
	Manufacturer *[]string `json:"manufacturer,omitempty"`

	// Manufacturer (slug)
	ManufacturerN *[]string `json:"manufacturer__n,omitempty"`

	// Manufacturer (ID)
	ManufacturerId *[]openapi_types.UUID `json:"manufacturer_id,omitempty"`

	// Manufacturer (ID)
	ManufacturerIdN *[]openapi_types.UUID `json:"manufacturer_id__n,omitempty"`
	Name            *[]string             `json:"name,omitempty"`
	NameIc          *[]string             `json:"name__ic,omitempty"`
	NameIe          *[]string             `json:"name__ie,omitempty"`
	NameIew         *[]string             `json:"name__iew,omitempty"`
	NameIre         *[]string             `json:"name__ire,omitempty"`
	NameIsw         *[]string             `json:"name__isw,omitempty"`
	NameN           *[]string             `json:"name__n,omitempty"`
	NameNic         *[]string             `json:"name__nic,omitempty"`
	NameNie         *[]string             `json:"name__nie,omitempty"`
	NameNiew        *[]string             `json:"name__niew,omitempty"`
	NameNire        *[]string             `json:"name__nire,omitempty"`
	NameNisw        *[]string             `json:"name__nisw,omitempty"`
	NameNre         *[]string             `json:"name__nre,omitempty"`
	NameRe          *[]string             `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Parent inventory item (ID)
	ParentId *[]openapi_types.UUID `json:"parent_id,omitempty"`

	// Parent inventory item (ID)
	ParentIdN  *[]openapi_types.UUID `json:"parent_id__n,omitempty"`
	PartId     *[]string             `json:"part_id,omitempty"`
	PartIdIc   *[]string             `json:"part_id__ic,omitempty"`
	PartIdIe   *[]string             `json:"part_id__ie,omitempty"`
	PartIdIew  *[]string             `json:"part_id__iew,omitempty"`
	PartIdIre  *[]string             `json:"part_id__ire,omitempty"`
	PartIdIsw  *[]string             `json:"part_id__isw,omitempty"`
	PartIdN    *[]string             `json:"part_id__n,omitempty"`
	PartIdNic  *[]string             `json:"part_id__nic,omitempty"`
	PartIdNie  *[]string             `json:"part_id__nie,omitempty"`
	PartIdNiew *[]string             `json:"part_id__niew,omitempty"`
	PartIdNire *[]string             `json:"part_id__nire,omitempty"`
	PartIdNisw *[]string             `json:"part_id__nisw,omitempty"`
	PartIdNre  *[]string             `json:"part_id__nre,omitempty"`
	PartIdRe   *[]string             `json:"part_id__re,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`
	Serial    *string               `json:"serial,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`
}

// DcimInventoryItemsBulkPartialUpdateJSONBody defines parameters for DcimInventoryItemsBulkPartialUpdate.
type DcimInventoryItemsBulkPartialUpdateJSONBody PatchedWritableInventoryItem

// DcimInventoryItemsCreateJSONBody defines parameters for DcimInventoryItemsCreate.
type DcimInventoryItemsCreateJSONBody WritableInventoryItem

// DcimInventoryItemsBulkUpdateJSONBody defines parameters for DcimInventoryItemsBulkUpdate.
type DcimInventoryItemsBulkUpdateJSONBody WritableInventoryItem

// DcimInventoryItemsPartialUpdateJSONBody defines parameters for DcimInventoryItemsPartialUpdate.
type DcimInventoryItemsPartialUpdateJSONBody PatchedWritableInventoryItem

// DcimInventoryItemsUpdateJSONBody defines parameters for DcimInventoryItemsUpdate.
type DcimInventoryItemsUpdateJSONBody WritableInventoryItem

// DcimManufacturersListParams defines parameters for DcimManufacturersList.
type DcimManufacturersListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// DcimManufacturersBulkPartialUpdateJSONBody defines parameters for DcimManufacturersBulkPartialUpdate.
type DcimManufacturersBulkPartialUpdateJSONBody PatchedManufacturer

// DcimManufacturersCreateJSONBody defines parameters for DcimManufacturersCreate.
type DcimManufacturersCreateJSONBody Manufacturer

// DcimManufacturersBulkUpdateJSONBody defines parameters for DcimManufacturersBulkUpdate.
type DcimManufacturersBulkUpdateJSONBody Manufacturer

// DcimManufacturersPartialUpdateJSONBody defines parameters for DcimManufacturersPartialUpdate.
type DcimManufacturersPartialUpdateJSONBody PatchedManufacturer

// DcimManufacturersUpdateJSONBody defines parameters for DcimManufacturersUpdate.
type DcimManufacturersUpdateJSONBody Manufacturer

// DcimPlatformsListParams defines parameters for DcimPlatformsList.
type DcimPlatformsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Manufacturer (slug)
	Manufacturer *[]string `json:"manufacturer,omitempty"`

	// Manufacturer (slug)
	ManufacturerN *[]string `json:"manufacturer__n,omitempty"`

	// Manufacturer (ID)
	ManufacturerId *[]openapi_types.UUID `json:"manufacturer_id,omitempty"`

	// Manufacturer (ID)
	ManufacturerIdN  *[]openapi_types.UUID `json:"manufacturer_id__n,omitempty"`
	Name             *[]string             `json:"name,omitempty"`
	NameIc           *[]string             `json:"name__ic,omitempty"`
	NameIe           *[]string             `json:"name__ie,omitempty"`
	NameIew          *[]string             `json:"name__iew,omitempty"`
	NameIre          *[]string             `json:"name__ire,omitempty"`
	NameIsw          *[]string             `json:"name__isw,omitempty"`
	NameN            *[]string             `json:"name__n,omitempty"`
	NameNic          *[]string             `json:"name__nic,omitempty"`
	NameNie          *[]string             `json:"name__nie,omitempty"`
	NameNiew         *[]string             `json:"name__niew,omitempty"`
	NameNire         *[]string             `json:"name__nire,omitempty"`
	NameNisw         *[]string             `json:"name__nisw,omitempty"`
	NameNre          *[]string             `json:"name__nre,omitempty"`
	NameRe           *[]string             `json:"name__re,omitempty"`
	NapalmDriver     *[]string             `json:"napalm_driver,omitempty"`
	NapalmDriverIc   *[]string             `json:"napalm_driver__ic,omitempty"`
	NapalmDriverIe   *[]string             `json:"napalm_driver__ie,omitempty"`
	NapalmDriverIew  *[]string             `json:"napalm_driver__iew,omitempty"`
	NapalmDriverIre  *[]string             `json:"napalm_driver__ire,omitempty"`
	NapalmDriverIsw  *[]string             `json:"napalm_driver__isw,omitempty"`
	NapalmDriverN    *[]string             `json:"napalm_driver__n,omitempty"`
	NapalmDriverNic  *[]string             `json:"napalm_driver__nic,omitempty"`
	NapalmDriverNie  *[]string             `json:"napalm_driver__nie,omitempty"`
	NapalmDriverNiew *[]string             `json:"napalm_driver__niew,omitempty"`
	NapalmDriverNire *[]string             `json:"napalm_driver__nire,omitempty"`
	NapalmDriverNisw *[]string             `json:"napalm_driver__nisw,omitempty"`
	NapalmDriverNre  *[]string             `json:"napalm_driver__nre,omitempty"`
	NapalmDriverRe   *[]string             `json:"napalm_driver__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// DcimPlatformsBulkPartialUpdateJSONBody defines parameters for DcimPlatformsBulkPartialUpdate.
type DcimPlatformsBulkPartialUpdateJSONBody PatchedWritablePlatform

// DcimPlatformsCreateJSONBody defines parameters for DcimPlatformsCreate.
type DcimPlatformsCreateJSONBody WritablePlatform

// DcimPlatformsBulkUpdateJSONBody defines parameters for DcimPlatformsBulkUpdate.
type DcimPlatformsBulkUpdateJSONBody WritablePlatform

// DcimPlatformsPartialUpdateJSONBody defines parameters for DcimPlatformsPartialUpdate.
type DcimPlatformsPartialUpdateJSONBody PatchedWritablePlatform

// DcimPlatformsUpdateJSONBody defines parameters for DcimPlatformsUpdate.
type DcimPlatformsUpdateJSONBody WritablePlatform

// DcimPowerConnectionsListParams defines parameters for DcimPowerConnectionsList.
type DcimPowerConnectionsListParams struct {
	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Site (slug)
	Site *string `json:"site,omitempty"`
}

// DcimPowerFeedsListParams defines parameters for DcimPowerFeedsList.
type DcimPowerFeedsListParams struct {
	Amperage    *[]int `json:"amperage,omitempty"`
	AmperageGt  *[]int `json:"amperage__gt,omitempty"`
	AmperageGte *[]int `json:"amperage__gte,omitempty"`
	AmperageLt  *[]int `json:"amperage__lt,omitempty"`
	AmperageLte *[]int `json:"amperage__lte,omitempty"`
	AmperageN   *[]int `json:"amperage__n,omitempty"`
	Cabled      *bool  `json:"cabled,omitempty"`

	// Connected status (bool)
	Connected      *bool                 `json:"connected,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit             *int      `json:"limit,omitempty"`
	MaxUtilization    *[]int    `json:"max_utilization,omitempty"`
	MaxUtilizationGt  *[]int    `json:"max_utilization__gt,omitempty"`
	MaxUtilizationGte *[]int    `json:"max_utilization__gte,omitempty"`
	MaxUtilizationLt  *[]int    `json:"max_utilization__lt,omitempty"`
	MaxUtilizationLte *[]int    `json:"max_utilization__lte,omitempty"`
	MaxUtilizationN   *[]int    `json:"max_utilization__n,omitempty"`
	Name              *[]string `json:"name,omitempty"`
	NameIc            *[]string `json:"name__ic,omitempty"`
	NameIe            *[]string `json:"name__ie,omitempty"`
	NameIew           *[]string `json:"name__iew,omitempty"`
	NameIre           *[]string `json:"name__ire,omitempty"`
	NameIsw           *[]string `json:"name__isw,omitempty"`
	NameN             *[]string `json:"name__n,omitempty"`
	NameNic           *[]string `json:"name__nic,omitempty"`
	NameNie           *[]string `json:"name__nie,omitempty"`
	NameNiew          *[]string `json:"name__niew,omitempty"`
	NameNire          *[]string `json:"name__nire,omitempty"`
	NameNisw          *[]string `json:"name__nisw,omitempty"`
	NameNre           *[]string `json:"name__nre,omitempty"`
	NameRe            *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int    `json:"offset,omitempty"`
	Phase  *string `json:"phase,omitempty"`
	PhaseN *string `json:"phase__n,omitempty"`

	// Power panel (ID)
	PowerPanelId *[]openapi_types.UUID `json:"power_panel_id,omitempty"`

	// Power panel (ID)
	PowerPanelIdN *[]openapi_types.UUID `json:"power_panel_id__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Rack (ID)
	RackId *[]openapi_types.UUID `json:"rack_id,omitempty"`

	// Rack (ID)
	RackIdN *[]openapi_types.UUID `json:"rack_id__n,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN    *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status     *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN    *[]openapi_types.UUID `json:"status__n,omitempty"`
	Supply     *string               `json:"supply,omitempty"`
	SupplyN    *string               `json:"supply__n,omitempty"`
	Tag        *[]string             `json:"tag,omitempty"`
	TagN       *[]string             `json:"tag__n,omitempty"`
	Type       *string               `json:"type,omitempty"`
	TypeN      *string               `json:"type__n,omitempty"`
	Voltage    *[]int                `json:"voltage,omitempty"`
	VoltageGt  *[]int                `json:"voltage__gt,omitempty"`
	VoltageGte *[]int                `json:"voltage__gte,omitempty"`
	VoltageLt  *[]int                `json:"voltage__lt,omitempty"`
	VoltageLte *[]int                `json:"voltage__lte,omitempty"`
	VoltageN   *[]int                `json:"voltage__n,omitempty"`
}

// DcimPowerFeedsBulkPartialUpdateJSONBody defines parameters for DcimPowerFeedsBulkPartialUpdate.
type DcimPowerFeedsBulkPartialUpdateJSONBody PatchedWritablePowerFeed

// DcimPowerFeedsCreateJSONBody defines parameters for DcimPowerFeedsCreate.
type DcimPowerFeedsCreateJSONBody WritablePowerFeed

// DcimPowerFeedsBulkUpdateJSONBody defines parameters for DcimPowerFeedsBulkUpdate.
type DcimPowerFeedsBulkUpdateJSONBody WritablePowerFeed

// DcimPowerFeedsPartialUpdateJSONBody defines parameters for DcimPowerFeedsPartialUpdate.
type DcimPowerFeedsPartialUpdateJSONBody PatchedWritablePowerFeed

// DcimPowerFeedsUpdateJSONBody defines parameters for DcimPowerFeedsUpdate.
type DcimPowerFeedsUpdateJSONBody WritablePowerFeed

// DcimPowerOutletTemplatesListParams defines parameters for DcimPowerOutletTemplatesList.
type DcimPowerOutletTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`

	// Phase (for three-phase feeds)
	FeedLeg *string `json:"feed_leg,omitempty"`

	// Phase (for three-phase feeds)
	FeedLegN *string               `json:"feed_leg__n,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimPowerOutletTemplatesBulkPartialUpdateJSONBody defines parameters for DcimPowerOutletTemplatesBulkPartialUpdate.
type DcimPowerOutletTemplatesBulkPartialUpdateJSONBody PatchedWritablePowerOutletTemplate

// DcimPowerOutletTemplatesCreateJSONBody defines parameters for DcimPowerOutletTemplatesCreate.
type DcimPowerOutletTemplatesCreateJSONBody WritablePowerOutletTemplate

// DcimPowerOutletTemplatesBulkUpdateJSONBody defines parameters for DcimPowerOutletTemplatesBulkUpdate.
type DcimPowerOutletTemplatesBulkUpdateJSONBody WritablePowerOutletTemplate

// DcimPowerOutletTemplatesPartialUpdateJSONBody defines parameters for DcimPowerOutletTemplatesPartialUpdate.
type DcimPowerOutletTemplatesPartialUpdateJSONBody PatchedWritablePowerOutletTemplate

// DcimPowerOutletTemplatesUpdateJSONBody defines parameters for DcimPowerOutletTemplatesUpdate.
type DcimPowerOutletTemplatesUpdateJSONBody WritablePowerOutletTemplate

// DcimPowerOutletsListParams defines parameters for DcimPowerOutletsList.
type DcimPowerOutletsListParams struct {
	Cabled *bool `json:"cabled,omitempty"`

	// Connected status (bool)
	Connected       *bool     `json:"connected,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`

	// Phase (for three-phase feeds)
	FeedLeg *string `json:"feed_leg,omitempty"`

	// Phase (for three-phase feeds)
	FeedLegN *string               `json:"feed_leg__n,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Physical port type
	Type *[]string `json:"type,omitempty"`

	// Physical port type
	TypeN *[]string `json:"type__n,omitempty"`
}

// DcimPowerOutletsBulkPartialUpdateJSONBody defines parameters for DcimPowerOutletsBulkPartialUpdate.
type DcimPowerOutletsBulkPartialUpdateJSONBody PatchedWritablePowerOutlet

// DcimPowerOutletsCreateJSONBody defines parameters for DcimPowerOutletsCreate.
type DcimPowerOutletsCreateJSONBody WritablePowerOutlet

// DcimPowerOutletsBulkUpdateJSONBody defines parameters for DcimPowerOutletsBulkUpdate.
type DcimPowerOutletsBulkUpdateJSONBody WritablePowerOutlet

// DcimPowerOutletsPartialUpdateJSONBody defines parameters for DcimPowerOutletsPartialUpdate.
type DcimPowerOutletsPartialUpdateJSONBody PatchedWritablePowerOutlet

// DcimPowerOutletsUpdateJSONBody defines parameters for DcimPowerOutletsUpdate.
type DcimPowerOutletsUpdateJSONBody WritablePowerOutlet

// DcimPowerPanelsListParams defines parameters for DcimPowerPanelsList.
type DcimPowerPanelsListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Rack group (ID)
	RackGroupId *[]openapi_types.UUID `json:"rack_group_id,omitempty"`

	// Rack group (ID)
	RackGroupIdN *[]openapi_types.UUID `json:"rack_group_id__n,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`
}

// DcimPowerPanelsBulkPartialUpdateJSONBody defines parameters for DcimPowerPanelsBulkPartialUpdate.
type DcimPowerPanelsBulkPartialUpdateJSONBody PatchedWritablePowerPanel

// DcimPowerPanelsCreateJSONBody defines parameters for DcimPowerPanelsCreate.
type DcimPowerPanelsCreateJSONBody WritablePowerPanel

// DcimPowerPanelsBulkUpdateJSONBody defines parameters for DcimPowerPanelsBulkUpdate.
type DcimPowerPanelsBulkUpdateJSONBody WritablePowerPanel

// DcimPowerPanelsPartialUpdateJSONBody defines parameters for DcimPowerPanelsPartialUpdate.
type DcimPowerPanelsPartialUpdateJSONBody PatchedWritablePowerPanel

// DcimPowerPanelsUpdateJSONBody defines parameters for DcimPowerPanelsUpdate.
type DcimPowerPanelsUpdateJSONBody WritablePowerPanel

// DcimPowerPortTemplatesListParams defines parameters for DcimPowerPortTemplatesList.
type DcimPowerPortTemplatesListParams struct {
	AllocatedDraw    *[]int `json:"allocated_draw,omitempty"`
	AllocatedDrawGt  *[]int `json:"allocated_draw__gt,omitempty"`
	AllocatedDrawGte *[]int `json:"allocated_draw__gte,omitempty"`
	AllocatedDrawLt  *[]int `json:"allocated_draw__lt,omitempty"`
	AllocatedDrawLte *[]int `json:"allocated_draw__lte,omitempty"`
	AllocatedDrawN   *[]int `json:"allocated_draw__n,omitempty"`

	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit          *int      `json:"limit,omitempty"`
	MaximumDraw    *[]int    `json:"maximum_draw,omitempty"`
	MaximumDrawGt  *[]int    `json:"maximum_draw__gt,omitempty"`
	MaximumDrawGte *[]int    `json:"maximum_draw__gte,omitempty"`
	MaximumDrawLt  *[]int    `json:"maximum_draw__lt,omitempty"`
	MaximumDrawLte *[]int    `json:"maximum_draw__lte,omitempty"`
	MaximumDrawN   *[]int    `json:"maximum_draw__n,omitempty"`
	Name           *[]string `json:"name,omitempty"`
	NameIc         *[]string `json:"name__ic,omitempty"`
	NameIe         *[]string `json:"name__ie,omitempty"`
	NameIew        *[]string `json:"name__iew,omitempty"`
	NameIre        *[]string `json:"name__ire,omitempty"`
	NameIsw        *[]string `json:"name__isw,omitempty"`
	NameN          *[]string `json:"name__n,omitempty"`
	NameNic        *[]string `json:"name__nic,omitempty"`
	NameNie        *[]string `json:"name__nie,omitempty"`
	NameNiew       *[]string `json:"name__niew,omitempty"`
	NameNire       *[]string `json:"name__nire,omitempty"`
	NameNisw       *[]string `json:"name__nisw,omitempty"`
	NameNre        *[]string `json:"name__nre,omitempty"`
	NameRe         *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimPowerPortTemplatesBulkPartialUpdateJSONBody defines parameters for DcimPowerPortTemplatesBulkPartialUpdate.
type DcimPowerPortTemplatesBulkPartialUpdateJSONBody PatchedWritablePowerPortTemplate

// DcimPowerPortTemplatesCreateJSONBody defines parameters for DcimPowerPortTemplatesCreate.
type DcimPowerPortTemplatesCreateJSONBody WritablePowerPortTemplate

// DcimPowerPortTemplatesBulkUpdateJSONBody defines parameters for DcimPowerPortTemplatesBulkUpdate.
type DcimPowerPortTemplatesBulkUpdateJSONBody WritablePowerPortTemplate

// DcimPowerPortTemplatesPartialUpdateJSONBody defines parameters for DcimPowerPortTemplatesPartialUpdate.
type DcimPowerPortTemplatesPartialUpdateJSONBody PatchedWritablePowerPortTemplate

// DcimPowerPortTemplatesUpdateJSONBody defines parameters for DcimPowerPortTemplatesUpdate.
type DcimPowerPortTemplatesUpdateJSONBody WritablePowerPortTemplate

// DcimPowerPortsListParams defines parameters for DcimPowerPortsList.
type DcimPowerPortsListParams struct {
	AllocatedDraw    *[]int `json:"allocated_draw,omitempty"`
	AllocatedDrawGt  *[]int `json:"allocated_draw__gt,omitempty"`
	AllocatedDrawGte *[]int `json:"allocated_draw__gte,omitempty"`
	AllocatedDrawLt  *[]int `json:"allocated_draw__lt,omitempty"`
	AllocatedDrawLte *[]int `json:"allocated_draw__lte,omitempty"`
	AllocatedDrawN   *[]int `json:"allocated_draw__n,omitempty"`
	Cabled           *bool  `json:"cabled,omitempty"`

	// Connected status (bool)
	Connected       *bool     `json:"connected,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit          *int      `json:"limit,omitempty"`
	MaximumDraw    *[]int    `json:"maximum_draw,omitempty"`
	MaximumDrawGt  *[]int    `json:"maximum_draw__gt,omitempty"`
	MaximumDrawGte *[]int    `json:"maximum_draw__gte,omitempty"`
	MaximumDrawLt  *[]int    `json:"maximum_draw__lt,omitempty"`
	MaximumDrawLte *[]int    `json:"maximum_draw__lte,omitempty"`
	MaximumDrawN   *[]int    `json:"maximum_draw__n,omitempty"`
	Name           *[]string `json:"name,omitempty"`
	NameIc         *[]string `json:"name__ic,omitempty"`
	NameIe         *[]string `json:"name__ie,omitempty"`
	NameIew        *[]string `json:"name__iew,omitempty"`
	NameIre        *[]string `json:"name__ire,omitempty"`
	NameIsw        *[]string `json:"name__isw,omitempty"`
	NameN          *[]string `json:"name__n,omitempty"`
	NameNic        *[]string `json:"name__nic,omitempty"`
	NameNie        *[]string `json:"name__nie,omitempty"`
	NameNiew       *[]string `json:"name__niew,omitempty"`
	NameNire       *[]string `json:"name__nire,omitempty"`
	NameNisw       *[]string `json:"name__nisw,omitempty"`
	NameNre        *[]string `json:"name__nre,omitempty"`
	NameRe         *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Physical port type
	Type *[]string `json:"type,omitempty"`

	// Physical port type
	TypeN *[]string `json:"type__n,omitempty"`
}

// DcimPowerPortsBulkPartialUpdateJSONBody defines parameters for DcimPowerPortsBulkPartialUpdate.
type DcimPowerPortsBulkPartialUpdateJSONBody PatchedWritablePowerPort

// DcimPowerPortsCreateJSONBody defines parameters for DcimPowerPortsCreate.
type DcimPowerPortsCreateJSONBody WritablePowerPort

// DcimPowerPortsBulkUpdateJSONBody defines parameters for DcimPowerPortsBulkUpdate.
type DcimPowerPortsBulkUpdateJSONBody WritablePowerPort

// DcimPowerPortsPartialUpdateJSONBody defines parameters for DcimPowerPortsPartialUpdate.
type DcimPowerPortsPartialUpdateJSONBody PatchedWritablePowerPort

// DcimPowerPortsUpdateJSONBody defines parameters for DcimPowerPortsUpdate.
type DcimPowerPortsUpdateJSONBody WritablePowerPort

// DcimRackGroupsListParams defines parameters for DcimRackGroupsList.
type DcimRackGroupsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Rack group (slug)
	Parent *[]string `json:"parent,omitempty"`

	// Rack group (slug)
	ParentN *[]string `json:"parent__n,omitempty"`

	// Rack group (ID)
	ParentId *[]openapi_types.UUID `json:"parent_id,omitempty"`

	// Rack group (ID)
	ParentIdN *[]openapi_types.UUID `json:"parent_id__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN  *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Slug     *[]string             `json:"slug,omitempty"`
	SlugIc   *[]string             `json:"slug__ic,omitempty"`
	SlugIe   *[]string             `json:"slug__ie,omitempty"`
	SlugIew  *[]string             `json:"slug__iew,omitempty"`
	SlugIre  *[]string             `json:"slug__ire,omitempty"`
	SlugIsw  *[]string             `json:"slug__isw,omitempty"`
	SlugN    *[]string             `json:"slug__n,omitempty"`
	SlugNic  *[]string             `json:"slug__nic,omitempty"`
	SlugNie  *[]string             `json:"slug__nie,omitempty"`
	SlugNiew *[]string             `json:"slug__niew,omitempty"`
	SlugNire *[]string             `json:"slug__nire,omitempty"`
	SlugNisw *[]string             `json:"slug__nisw,omitempty"`
	SlugNre  *[]string             `json:"slug__nre,omitempty"`
	SlugRe   *[]string             `json:"slug__re,omitempty"`
}

// DcimRackGroupsBulkPartialUpdateJSONBody defines parameters for DcimRackGroupsBulkPartialUpdate.
type DcimRackGroupsBulkPartialUpdateJSONBody PatchedWritableRackGroup

// DcimRackGroupsCreateJSONBody defines parameters for DcimRackGroupsCreate.
type DcimRackGroupsCreateJSONBody WritableRackGroup

// DcimRackGroupsBulkUpdateJSONBody defines parameters for DcimRackGroupsBulkUpdate.
type DcimRackGroupsBulkUpdateJSONBody WritableRackGroup

// DcimRackGroupsPartialUpdateJSONBody defines parameters for DcimRackGroupsPartialUpdate.
type DcimRackGroupsPartialUpdateJSONBody PatchedWritableRackGroup

// DcimRackGroupsUpdateJSONBody defines parameters for DcimRackGroupsUpdate.
type DcimRackGroupsUpdateJSONBody WritableRackGroup

// DcimRackReservationsListParams defines parameters for DcimRackReservationsList.
type DcimRackReservationsListParams struct {
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Rack group (slug)
	Group *[]openapi_types.UUID `json:"group,omitempty"`

	// Rack group (slug)
	GroupN *[]openapi_types.UUID `json:"group__n,omitempty"`

	// Rack group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Rack group (ID)
	GroupIdN       *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Rack (ID)
	RackId *[]openapi_types.UUID `json:"rack_id,omitempty"`

	// Rack (ID)
	RackIdN *[]openapi_types.UUID `json:"rack_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`

	// User (name)
	User *[]string `json:"user,omitempty"`

	// User (name)
	UserN *[]string `json:"user__n,omitempty"`

	// User (ID)
	UserId *[]openapi_types.UUID `json:"user_id,omitempty"`

	// User (ID)
	UserIdN *[]openapi_types.UUID `json:"user_id__n,omitempty"`
}

// DcimRackReservationsBulkPartialUpdateJSONBody defines parameters for DcimRackReservationsBulkPartialUpdate.
type DcimRackReservationsBulkPartialUpdateJSONBody PatchedWritableRackReservation

// DcimRackReservationsCreateJSONBody defines parameters for DcimRackReservationsCreate.
type DcimRackReservationsCreateJSONBody WritableRackReservation

// DcimRackReservationsBulkUpdateJSONBody defines parameters for DcimRackReservationsBulkUpdate.
type DcimRackReservationsBulkUpdateJSONBody WritableRackReservation

// DcimRackReservationsPartialUpdateJSONBody defines parameters for DcimRackReservationsPartialUpdate.
type DcimRackReservationsPartialUpdateJSONBody PatchedWritableRackReservation

// DcimRackReservationsUpdateJSONBody defines parameters for DcimRackReservationsUpdate.
type DcimRackReservationsUpdateJSONBody WritableRackReservation

// DcimRackRolesListParams defines parameters for DcimRackRolesList.
type DcimRackRolesListParams struct {
	Color          *[]string             `json:"color,omitempty"`
	ColorIc        *[]string             `json:"color__ic,omitempty"`
	ColorIe        *[]string             `json:"color__ie,omitempty"`
	ColorIew       *[]string             `json:"color__iew,omitempty"`
	ColorIre       *[]string             `json:"color__ire,omitempty"`
	ColorIsw       *[]string             `json:"color__isw,omitempty"`
	ColorN         *[]string             `json:"color__n,omitempty"`
	ColorNic       *[]string             `json:"color__nic,omitempty"`
	ColorNie       *[]string             `json:"color__nie,omitempty"`
	ColorNiew      *[]string             `json:"color__niew,omitempty"`
	ColorNire      *[]string             `json:"color__nire,omitempty"`
	ColorNisw      *[]string             `json:"color__nisw,omitempty"`
	ColorNre       *[]string             `json:"color__nre,omitempty"`
	ColorRe        *[]string             `json:"color__re,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// DcimRackRolesBulkPartialUpdateJSONBody defines parameters for DcimRackRolesBulkPartialUpdate.
type DcimRackRolesBulkPartialUpdateJSONBody PatchedRackRole

// DcimRackRolesCreateJSONBody defines parameters for DcimRackRolesCreate.
type DcimRackRolesCreateJSONBody RackRole

// DcimRackRolesBulkUpdateJSONBody defines parameters for DcimRackRolesBulkUpdate.
type DcimRackRolesBulkUpdateJSONBody RackRole

// DcimRackRolesPartialUpdateJSONBody defines parameters for DcimRackRolesPartialUpdate.
type DcimRackRolesPartialUpdateJSONBody PatchedRackRole

// DcimRackRolesUpdateJSONBody defines parameters for DcimRackRolesUpdate.
type DcimRackRolesUpdateJSONBody RackRole

// DcimRacksListParams defines parameters for DcimRacksList.
type DcimRacksListParams struct {
	AssetTag       *[]string           `json:"asset_tag,omitempty"`
	AssetTagIc     *[]string           `json:"asset_tag__ic,omitempty"`
	AssetTagIe     *[]string           `json:"asset_tag__ie,omitempty"`
	AssetTagIew    *[]string           `json:"asset_tag__iew,omitempty"`
	AssetTagIre    *[]string           `json:"asset_tag__ire,omitempty"`
	AssetTagIsw    *[]string           `json:"asset_tag__isw,omitempty"`
	AssetTagN      *[]string           `json:"asset_tag__n,omitempty"`
	AssetTagNic    *[]string           `json:"asset_tag__nic,omitempty"`
	AssetTagNie    *[]string           `json:"asset_tag__nie,omitempty"`
	AssetTagNiew   *[]string           `json:"asset_tag__niew,omitempty"`
	AssetTagNire   *[]string           `json:"asset_tag__nire,omitempty"`
	AssetTagNisw   *[]string           `json:"asset_tag__nisw,omitempty"`
	AssetTagNre    *[]string           `json:"asset_tag__nre,omitempty"`
	AssetTagRe     *[]string           `json:"asset_tag__re,omitempty"`
	Created        *openapi_types.Date `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date `json:"created__lte,omitempty"`
	DescUnits      *bool               `json:"desc_units,omitempty"`
	FacilityId     *[]string           `json:"facility_id,omitempty"`
	FacilityIdIc   *[]string           `json:"facility_id__ic,omitempty"`
	FacilityIdIe   *[]string           `json:"facility_id__ie,omitempty"`
	FacilityIdIew  *[]string           `json:"facility_id__iew,omitempty"`
	FacilityIdIre  *[]string           `json:"facility_id__ire,omitempty"`
	FacilityIdIsw  *[]string           `json:"facility_id__isw,omitempty"`
	FacilityIdN    *[]string           `json:"facility_id__n,omitempty"`
	FacilityIdNic  *[]string           `json:"facility_id__nic,omitempty"`
	FacilityIdNie  *[]string           `json:"facility_id__nie,omitempty"`
	FacilityIdNiew *[]string           `json:"facility_id__niew,omitempty"`
	FacilityIdNire *[]string           `json:"facility_id__nire,omitempty"`
	FacilityIdNisw *[]string           `json:"facility_id__nisw,omitempty"`
	FacilityIdNre  *[]string           `json:"facility_id__nre,omitempty"`
	FacilityIdRe   *[]string           `json:"facility_id__re,omitempty"`

	// Rack group (slug)
	Group *[]openapi_types.UUID `json:"group,omitempty"`

	// Rack group (slug)
	GroupN *[]openapi_types.UUID `json:"group__n,omitempty"`

	// Rack group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Rack group (ID)
	GroupIdN       *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset        *int    `json:"offset,omitempty"`
	OuterDepth    *[]int  `json:"outer_depth,omitempty"`
	OuterDepthGt  *[]int  `json:"outer_depth__gt,omitempty"`
	OuterDepthGte *[]int  `json:"outer_depth__gte,omitempty"`
	OuterDepthLt  *[]int  `json:"outer_depth__lt,omitempty"`
	OuterDepthLte *[]int  `json:"outer_depth__lte,omitempty"`
	OuterDepthN   *[]int  `json:"outer_depth__n,omitempty"`
	OuterUnit     *string `json:"outer_unit,omitempty"`
	OuterUnitN    *string `json:"outer_unit__n,omitempty"`
	OuterWidth    *[]int  `json:"outer_width,omitempty"`
	OuterWidthGt  *[]int  `json:"outer_width__gt,omitempty"`
	OuterWidthGte *[]int  `json:"outer_width__gte,omitempty"`
	OuterWidthLt  *[]int  `json:"outer_width__lt,omitempty"`
	OuterWidthLte *[]int  `json:"outer_width__lte,omitempty"`
	OuterWidthN   *[]int  `json:"outer_width__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role (ID)
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role (ID)
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`
	Serial  *string               `json:"serial,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN  *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
	Type       *[]string             `json:"type,omitempty"`
	TypeN      *[]string             `json:"type__n,omitempty"`
	UHeight    *[]int                `json:"u_height,omitempty"`
	UHeightGt  *[]int                `json:"u_height__gt,omitempty"`
	UHeightGte *[]int                `json:"u_height__gte,omitempty"`
	UHeightLt  *[]int                `json:"u_height__lt,omitempty"`
	UHeightLte *[]int                `json:"u_height__lte,omitempty"`
	UHeightN   *[]int                `json:"u_height__n,omitempty"`

	// Rail-to-rail width
	Width *[]int `json:"width,omitempty"`

	// Rail-to-rail width
	WidthN *[]int `json:"width__n,omitempty"`
}

// DcimRacksBulkPartialUpdateJSONBody defines parameters for DcimRacksBulkPartialUpdate.
type DcimRacksBulkPartialUpdateJSONBody PatchedWritableRack

// DcimRacksCreateJSONBody defines parameters for DcimRacksCreate.
type DcimRacksCreateJSONBody WritableRack

// DcimRacksBulkUpdateJSONBody defines parameters for DcimRacksBulkUpdate.
type DcimRacksBulkUpdateJSONBody WritableRack

// DcimRacksPartialUpdateJSONBody defines parameters for DcimRacksPartialUpdate.
type DcimRacksPartialUpdateJSONBody PatchedWritableRack

// DcimRacksUpdateJSONBody defines parameters for DcimRacksUpdate.
type DcimRacksUpdateJSONBody WritableRack

// DcimRacksElevationListParams defines parameters for DcimRacksElevationList.
type DcimRacksElevationListParams struct {
	AssetTag       *[]string                         `json:"asset_tag,omitempty"`
	AssetTagIc     *[]string                         `json:"asset_tag__ic,omitempty"`
	AssetTagIe     *[]string                         `json:"asset_tag__ie,omitempty"`
	AssetTagIew    *[]string                         `json:"asset_tag__iew,omitempty"`
	AssetTagIre    *[]string                         `json:"asset_tag__ire,omitempty"`
	AssetTagIsw    *[]string                         `json:"asset_tag__isw,omitempty"`
	AssetTagN      *[]string                         `json:"asset_tag__n,omitempty"`
	AssetTagNic    *[]string                         `json:"asset_tag__nic,omitempty"`
	AssetTagNie    *[]string                         `json:"asset_tag__nie,omitempty"`
	AssetTagNiew   *[]string                         `json:"asset_tag__niew,omitempty"`
	AssetTagNire   *[]string                         `json:"asset_tag__nire,omitempty"`
	AssetTagNisw   *[]string                         `json:"asset_tag__nisw,omitempty"`
	AssetTagNre    *[]string                         `json:"asset_tag__nre,omitempty"`
	AssetTagRe     *[]string                         `json:"asset_tag__re,omitempty"`
	Created        *openapi_types.Date               `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date               `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date               `json:"created__lte,omitempty"`
	DescUnits      *bool                             `json:"desc_units,omitempty"`
	Exclude        *openapi_types.UUID               `json:"exclude,omitempty"`
	ExpandDevices  *bool                             `json:"expand_devices,omitempty"`
	Face           *DcimRacksElevationListParamsFace `json:"face,omitempty"`
	FacilityId     *[]string                         `json:"facility_id,omitempty"`
	FacilityIdIc   *[]string                         `json:"facility_id__ic,omitempty"`
	FacilityIdIe   *[]string                         `json:"facility_id__ie,omitempty"`
	FacilityIdIew  *[]string                         `json:"facility_id__iew,omitempty"`
	FacilityIdIre  *[]string                         `json:"facility_id__ire,omitempty"`
	FacilityIdIsw  *[]string                         `json:"facility_id__isw,omitempty"`
	FacilityIdN    *[]string                         `json:"facility_id__n,omitempty"`
	FacilityIdNic  *[]string                         `json:"facility_id__nic,omitempty"`
	FacilityIdNie  *[]string                         `json:"facility_id__nie,omitempty"`
	FacilityIdNiew *[]string                         `json:"facility_id__niew,omitempty"`
	FacilityIdNire *[]string                         `json:"facility_id__nire,omitempty"`
	FacilityIdNisw *[]string                         `json:"facility_id__nisw,omitempty"`
	FacilityIdNre  *[]string                         `json:"facility_id__nre,omitempty"`
	FacilityIdRe   *[]string                         `json:"facility_id__re,omitempty"`

	// Rack group (slug)
	Group *[]openapi_types.UUID `json:"group,omitempty"`

	// Rack group (slug)
	GroupN *[]openapi_types.UUID `json:"group__n,omitempty"`

	// Rack group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Rack group (ID)
	GroupIdN       *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	IncludeImages  *bool                 `json:"include_images,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`
	LegendWidth    *int                  `json:"legend_width,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset        *int    `json:"offset,omitempty"`
	OuterDepth    *[]int  `json:"outer_depth,omitempty"`
	OuterDepthGt  *[]int  `json:"outer_depth__gt,omitempty"`
	OuterDepthGte *[]int  `json:"outer_depth__gte,omitempty"`
	OuterDepthLt  *[]int  `json:"outer_depth__lt,omitempty"`
	OuterDepthLte *[]int  `json:"outer_depth__lte,omitempty"`
	OuterDepthN   *[]int  `json:"outer_depth__n,omitempty"`
	OuterUnit     *string `json:"outer_unit,omitempty"`
	OuterUnitN    *string `json:"outer_unit__n,omitempty"`
	OuterWidth    *[]int  `json:"outer_width,omitempty"`
	OuterWidthGt  *[]int  `json:"outer_width__gt,omitempty"`
	OuterWidthGte *[]int  `json:"outer_width__gte,omitempty"`
	OuterWidthLt  *[]int  `json:"outer_width__lt,omitempty"`
	OuterWidthLte *[]int  `json:"outer_width__lte,omitempty"`
	OuterWidthN   *[]int  `json:"outer_width__n,omitempty"`
	Q             *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID               `json:"region_id__n,omitempty"`
	Render    *DcimRacksElevationListParamsRender `json:"render,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role (ID)
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role (ID)
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`
	Serial  *string               `json:"serial,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN  *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
	Type       *[]string             `json:"type,omitempty"`
	TypeN      *[]string             `json:"type__n,omitempty"`
	UHeight    *[]int                `json:"u_height,omitempty"`
	UHeightGt  *[]int                `json:"u_height__gt,omitempty"`
	UHeightGte *[]int                `json:"u_height__gte,omitempty"`
	UHeightLt  *[]int                `json:"u_height__lt,omitempty"`
	UHeightLte *[]int                `json:"u_height__lte,omitempty"`
	UHeightN   *[]int                `json:"u_height__n,omitempty"`
	UnitHeight *int                  `json:"unit_height,omitempty"`
	UnitWidth  *int                  `json:"unit_width,omitempty"`

	// Rail-to-rail width
	Width *[]int `json:"width,omitempty"`

	// Rail-to-rail width
	WidthN *[]int `json:"width__n,omitempty"`
}

// DcimRacksElevationListParamsFace defines parameters for DcimRacksElevationList.
type DcimRacksElevationListParamsFace string

// DcimRacksElevationListParamsRender defines parameters for DcimRacksElevationList.
type DcimRacksElevationListParamsRender string

// DcimRearPortTemplatesListParams defines parameters for DcimRearPortTemplatesList.
type DcimRearPortTemplatesListParams struct {
	// Device type (ID)
	DevicetypeId *[]openapi_types.UUID `json:"devicetype_id,omitempty"`

	// Device type (ID)
	DevicetypeIdN *[]openapi_types.UUID `json:"devicetype_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset       *int   `json:"offset,omitempty"`
	Positions    *[]int `json:"positions,omitempty"`
	PositionsGt  *[]int `json:"positions__gt,omitempty"`
	PositionsGte *[]int `json:"positions__gte,omitempty"`
	PositionsLt  *[]int `json:"positions__lt,omitempty"`
	PositionsLte *[]int `json:"positions__lte,omitempty"`
	PositionsN   *[]int `json:"positions__n,omitempty"`

	// Search
	Q     *string `json:"q,omitempty"`
	Type  *string `json:"type,omitempty"`
	TypeN *string `json:"type__n,omitempty"`
}

// DcimRearPortTemplatesBulkPartialUpdateJSONBody defines parameters for DcimRearPortTemplatesBulkPartialUpdate.
type DcimRearPortTemplatesBulkPartialUpdateJSONBody PatchedWritableRearPortTemplate

// DcimRearPortTemplatesCreateJSONBody defines parameters for DcimRearPortTemplatesCreate.
type DcimRearPortTemplatesCreateJSONBody WritableRearPortTemplate

// DcimRearPortTemplatesBulkUpdateJSONBody defines parameters for DcimRearPortTemplatesBulkUpdate.
type DcimRearPortTemplatesBulkUpdateJSONBody WritableRearPortTemplate

// DcimRearPortTemplatesPartialUpdateJSONBody defines parameters for DcimRearPortTemplatesPartialUpdate.
type DcimRearPortTemplatesPartialUpdateJSONBody PatchedWritableRearPortTemplate

// DcimRearPortTemplatesUpdateJSONBody defines parameters for DcimRearPortTemplatesUpdate.
type DcimRearPortTemplatesUpdateJSONBody WritableRearPortTemplate

// DcimRearPortsListParams defines parameters for DcimRearPortsList.
type DcimRearPortsListParams struct {
	Cabled          *bool     `json:"cabled,omitempty"`
	Description     *[]string `json:"description,omitempty"`
	DescriptionIc   *[]string `json:"description__ic,omitempty"`
	DescriptionIe   *[]string `json:"description__ie,omitempty"`
	DescriptionIew  *[]string `json:"description__iew,omitempty"`
	DescriptionIre  *[]string `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string `json:"description__isw,omitempty"`
	DescriptionN    *[]string `json:"description__n,omitempty"`
	DescriptionNic  *[]string `json:"description__nic,omitempty"`
	DescriptionNie  *[]string `json:"description__nie,omitempty"`
	DescriptionNiew *[]string `json:"description__niew,omitempty"`
	DescriptionNire *[]string `json:"description__nire,omitempty"`
	DescriptionNisw *[]string `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string `json:"description__nre,omitempty"`
	DescriptionRe   *[]string `json:"description__re,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset       *int   `json:"offset,omitempty"`
	Positions    *[]int `json:"positions,omitempty"`
	PositionsGt  *[]int `json:"positions__gt,omitempty"`
	PositionsGte *[]int `json:"positions__gte,omitempty"`
	PositionsLt  *[]int `json:"positions__lt,omitempty"`
	PositionsLte *[]int `json:"positions__lte,omitempty"`
	PositionsN   *[]int `json:"positions__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`
	Type    *string               `json:"type,omitempty"`
	TypeN   *string               `json:"type__n,omitempty"`
}

// DcimRearPortsBulkPartialUpdateJSONBody defines parameters for DcimRearPortsBulkPartialUpdate.
type DcimRearPortsBulkPartialUpdateJSONBody PatchedWritableRearPort

// DcimRearPortsCreateJSONBody defines parameters for DcimRearPortsCreate.
type DcimRearPortsCreateJSONBody WritableRearPort

// DcimRearPortsBulkUpdateJSONBody defines parameters for DcimRearPortsBulkUpdate.
type DcimRearPortsBulkUpdateJSONBody WritableRearPort

// DcimRearPortsPartialUpdateJSONBody defines parameters for DcimRearPortsPartialUpdate.
type DcimRearPortsPartialUpdateJSONBody PatchedWritableRearPort

// DcimRearPortsUpdateJSONBody defines parameters for DcimRearPortsUpdate.
type DcimRearPortsUpdateJSONBody WritableRearPort

// DcimRegionsListParams defines parameters for DcimRegionsList.
type DcimRegionsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Parent region (slug)
	Parent *[]string `json:"parent,omitempty"`

	// Parent region (slug)
	ParentN *[]string `json:"parent__n,omitempty"`

	// Parent region (ID)
	ParentId *[]openapi_types.UUID `json:"parent_id,omitempty"`

	// Parent region (ID)
	ParentIdN *[]openapi_types.UUID `json:"parent_id__n,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// DcimRegionsBulkPartialUpdateJSONBody defines parameters for DcimRegionsBulkPartialUpdate.
type DcimRegionsBulkPartialUpdateJSONBody PatchedWritableRegion

// DcimRegionsCreateJSONBody defines parameters for DcimRegionsCreate.
type DcimRegionsCreateJSONBody WritableRegion

// DcimRegionsBulkUpdateJSONBody defines parameters for DcimRegionsBulkUpdate.
type DcimRegionsBulkUpdateJSONBody WritableRegion

// DcimRegionsPartialUpdateJSONBody defines parameters for DcimRegionsPartialUpdate.
type DcimRegionsPartialUpdateJSONBody PatchedWritableRegion

// DcimRegionsUpdateJSONBody defines parameters for DcimRegionsUpdate.
type DcimRegionsUpdateJSONBody WritableRegion

// DcimSitesListParams defines parameters for DcimSitesList.
type DcimSitesListParams struct {
	Asn              *[]int                `json:"asn,omitempty"`
	AsnGt            *[]int                `json:"asn__gt,omitempty"`
	AsnGte           *[]int                `json:"asn__gte,omitempty"`
	AsnLt            *[]int                `json:"asn__lt,omitempty"`
	AsnLte           *[]int                `json:"asn__lte,omitempty"`
	AsnN             *[]int                `json:"asn__n,omitempty"`
	ContactEmail     *[]string             `json:"contact_email,omitempty"`
	ContactEmailIc   *[]string             `json:"contact_email__ic,omitempty"`
	ContactEmailIe   *[]string             `json:"contact_email__ie,omitempty"`
	ContactEmailIew  *[]string             `json:"contact_email__iew,omitempty"`
	ContactEmailIre  *[]string             `json:"contact_email__ire,omitempty"`
	ContactEmailIsw  *[]string             `json:"contact_email__isw,omitempty"`
	ContactEmailN    *[]string             `json:"contact_email__n,omitempty"`
	ContactEmailNic  *[]string             `json:"contact_email__nic,omitempty"`
	ContactEmailNie  *[]string             `json:"contact_email__nie,omitempty"`
	ContactEmailNiew *[]string             `json:"contact_email__niew,omitempty"`
	ContactEmailNire *[]string             `json:"contact_email__nire,omitempty"`
	ContactEmailNisw *[]string             `json:"contact_email__nisw,omitempty"`
	ContactEmailNre  *[]string             `json:"contact_email__nre,omitempty"`
	ContactEmailRe   *[]string             `json:"contact_email__re,omitempty"`
	ContactName      *[]string             `json:"contact_name,omitempty"`
	ContactNameIc    *[]string             `json:"contact_name__ic,omitempty"`
	ContactNameIe    *[]string             `json:"contact_name__ie,omitempty"`
	ContactNameIew   *[]string             `json:"contact_name__iew,omitempty"`
	ContactNameIre   *[]string             `json:"contact_name__ire,omitempty"`
	ContactNameIsw   *[]string             `json:"contact_name__isw,omitempty"`
	ContactNameN     *[]string             `json:"contact_name__n,omitempty"`
	ContactNameNic   *[]string             `json:"contact_name__nic,omitempty"`
	ContactNameNie   *[]string             `json:"contact_name__nie,omitempty"`
	ContactNameNiew  *[]string             `json:"contact_name__niew,omitempty"`
	ContactNameNire  *[]string             `json:"contact_name__nire,omitempty"`
	ContactNameNisw  *[]string             `json:"contact_name__nisw,omitempty"`
	ContactNameNre   *[]string             `json:"contact_name__nre,omitempty"`
	ContactNameRe    *[]string             `json:"contact_name__re,omitempty"`
	ContactPhone     *[]string             `json:"contact_phone,omitempty"`
	ContactPhoneIc   *[]string             `json:"contact_phone__ic,omitempty"`
	ContactPhoneIe   *[]string             `json:"contact_phone__ie,omitempty"`
	ContactPhoneIew  *[]string             `json:"contact_phone__iew,omitempty"`
	ContactPhoneIre  *[]string             `json:"contact_phone__ire,omitempty"`
	ContactPhoneIsw  *[]string             `json:"contact_phone__isw,omitempty"`
	ContactPhoneN    *[]string             `json:"contact_phone__n,omitempty"`
	ContactPhoneNic  *[]string             `json:"contact_phone__nic,omitempty"`
	ContactPhoneNie  *[]string             `json:"contact_phone__nie,omitempty"`
	ContactPhoneNiew *[]string             `json:"contact_phone__niew,omitempty"`
	ContactPhoneNire *[]string             `json:"contact_phone__nire,omitempty"`
	ContactPhoneNisw *[]string             `json:"contact_phone__nisw,omitempty"`
	ContactPhoneNre  *[]string             `json:"contact_phone__nre,omitempty"`
	ContactPhoneRe   *[]string             `json:"contact_phone__re,omitempty"`
	Created          *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte       *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte       *openapi_types.Date   `json:"created__lte,omitempty"`
	Facility         *[]string             `json:"facility,omitempty"`
	FacilityIc       *[]string             `json:"facility__ic,omitempty"`
	FacilityIe       *[]string             `json:"facility__ie,omitempty"`
	FacilityIew      *[]string             `json:"facility__iew,omitempty"`
	FacilityIre      *[]string             `json:"facility__ire,omitempty"`
	FacilityIsw      *[]string             `json:"facility__isw,omitempty"`
	FacilityN        *[]string             `json:"facility__n,omitempty"`
	FacilityNic      *[]string             `json:"facility__nic,omitempty"`
	FacilityNie      *[]string             `json:"facility__nie,omitempty"`
	FacilityNiew     *[]string             `json:"facility__niew,omitempty"`
	FacilityNire     *[]string             `json:"facility__nire,omitempty"`
	FacilityNisw     *[]string             `json:"facility__nisw,omitempty"`
	FacilityNre      *[]string             `json:"facility__nre,omitempty"`
	FacilityRe       *[]string             `json:"facility__re,omitempty"`
	Id               *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc             *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe             *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew            *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre            *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw            *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN              *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic            *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie            *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew           *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire           *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw           *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre            *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe             *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated      *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte   *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte   *time.Time            `json:"last_updated__lte,omitempty"`
	Latitude         *[]float32            `json:"latitude,omitempty"`
	LatitudeGt       *[]float32            `json:"latitude__gt,omitempty"`
	LatitudeGte      *[]float32            `json:"latitude__gte,omitempty"`
	LatitudeLt       *[]float32            `json:"latitude__lt,omitempty"`
	LatitudeLte      *[]float32            `json:"latitude__lte,omitempty"`
	LatitudeN        *[]float32            `json:"latitude__n,omitempty"`

	// Number of results to return per page.
	Limit        *int       `json:"limit,omitempty"`
	Longitude    *[]float32 `json:"longitude,omitempty"`
	LongitudeGt  *[]float32 `json:"longitude__gt,omitempty"`
	LongitudeGte *[]float32 `json:"longitude__gte,omitempty"`
	LongitudeLt  *[]float32 `json:"longitude__lt,omitempty"`
	LongitudeLte *[]float32 `json:"longitude__lte,omitempty"`
	LongitudeN   *[]float32 `json:"longitude__n,omitempty"`
	Name         *[]string  `json:"name,omitempty"`
	NameIc       *[]string  `json:"name__ic,omitempty"`
	NameIe       *[]string  `json:"name__ie,omitempty"`
	NameIew      *[]string  `json:"name__iew,omitempty"`
	NameIre      *[]string  `json:"name__ire,omitempty"`
	NameIsw      *[]string  `json:"name__isw,omitempty"`
	NameN        *[]string  `json:"name__n,omitempty"`
	NameNic      *[]string  `json:"name__nic,omitempty"`
	NameNie      *[]string  `json:"name__nie,omitempty"`
	NameNiew     *[]string  `json:"name__niew,omitempty"`
	NameNire     *[]string  `json:"name__nire,omitempty"`
	NameNisw     *[]string  `json:"name__nisw,omitempty"`
	NameNre      *[]string  `json:"name__nre,omitempty"`
	NameRe       *[]string  `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`
	Slug      *[]string             `json:"slug,omitempty"`
	SlugIc    *[]string             `json:"slug__ic,omitempty"`
	SlugIe    *[]string             `json:"slug__ie,omitempty"`
	SlugIew   *[]string             `json:"slug__iew,omitempty"`
	SlugIre   *[]string             `json:"slug__ire,omitempty"`
	SlugIsw   *[]string             `json:"slug__isw,omitempty"`
	SlugN     *[]string             `json:"slug__n,omitempty"`
	SlugNic   *[]string             `json:"slug__nic,omitempty"`
	SlugNie   *[]string             `json:"slug__nie,omitempty"`
	SlugNiew  *[]string             `json:"slug__niew,omitempty"`
	SlugNire  *[]string             `json:"slug__nire,omitempty"`
	SlugNisw  *[]string             `json:"slug__nisw,omitempty"`
	SlugNre   *[]string             `json:"slug__nre,omitempty"`
	SlugRe    *[]string             `json:"slug__re,omitempty"`
	Status    *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN   *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag       *[]string             `json:"tag,omitempty"`
	TagN      *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
}

// DcimSitesBulkPartialUpdateJSONBody defines parameters for DcimSitesBulkPartialUpdate.
type DcimSitesBulkPartialUpdateJSONBody PatchedWritableSite

// DcimSitesCreateJSONBody defines parameters for DcimSitesCreate.
type DcimSitesCreateJSONBody WritableSite

// DcimSitesBulkUpdateJSONBody defines parameters for DcimSitesBulkUpdate.
type DcimSitesBulkUpdateJSONBody WritableSite

// DcimSitesPartialUpdateJSONBody defines parameters for DcimSitesPartialUpdate.
type DcimSitesPartialUpdateJSONBody PatchedWritableSite

// DcimSitesUpdateJSONBody defines parameters for DcimSitesUpdate.
type DcimSitesUpdateJSONBody WritableSite

// DcimVirtualChassisListParams defines parameters for DcimVirtualChassisList.
type DcimVirtualChassisListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Domain         *[]string             `json:"domain,omitempty"`
	DomainIc       *[]string             `json:"domain__ic,omitempty"`
	DomainIe       *[]string             `json:"domain__ie,omitempty"`
	DomainIew      *[]string             `json:"domain__iew,omitempty"`
	DomainIre      *[]string             `json:"domain__ire,omitempty"`
	DomainIsw      *[]string             `json:"domain__isw,omitempty"`
	DomainN        *[]string             `json:"domain__n,omitempty"`
	DomainNic      *[]string             `json:"domain__nic,omitempty"`
	DomainNie      *[]string             `json:"domain__nie,omitempty"`
	DomainNiew     *[]string             `json:"domain__niew,omitempty"`
	DomainNire     *[]string             `json:"domain__nire,omitempty"`
	DomainNisw     *[]string             `json:"domain__nisw,omitempty"`
	DomainNre      *[]string             `json:"domain__nre,omitempty"`
	DomainRe       *[]string             `json:"domain__re,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Master (name)
	Master *[]string `json:"master,omitempty"`

	// Master (name)
	MasterN *[]string `json:"master__n,omitempty"`

	// Master (ID)
	MasterId *[]openapi_types.UUID `json:"master_id,omitempty"`

	// Master (ID)
	MasterIdN *[]openapi_types.UUID `json:"master_id__n,omitempty"`
	Name      *[]string             `json:"name,omitempty"`
	NameIc    *[]string             `json:"name__ic,omitempty"`
	NameIe    *[]string             `json:"name__ie,omitempty"`
	NameIew   *[]string             `json:"name__iew,omitempty"`
	NameIre   *[]string             `json:"name__ire,omitempty"`
	NameIsw   *[]string             `json:"name__isw,omitempty"`
	NameN     *[]string             `json:"name__n,omitempty"`
	NameNic   *[]string             `json:"name__nic,omitempty"`
	NameNie   *[]string             `json:"name__nie,omitempty"`
	NameNiew  *[]string             `json:"name__niew,omitempty"`
	NameNire  *[]string             `json:"name__nire,omitempty"`
	NameNisw  *[]string             `json:"name__nisw,omitempty"`
	NameNre   *[]string             `json:"name__nre,omitempty"`
	NameRe    *[]string             `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site name (slug)
	Site *[]string `json:"site,omitempty"`

	// Site name (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
}

// DcimVirtualChassisBulkPartialUpdateJSONBody defines parameters for DcimVirtualChassisBulkPartialUpdate.
type DcimVirtualChassisBulkPartialUpdateJSONBody PatchedWritableVirtualChassis

// DcimVirtualChassisCreateJSONBody defines parameters for DcimVirtualChassisCreate.
type DcimVirtualChassisCreateJSONBody WritableVirtualChassis

// DcimVirtualChassisBulkUpdateJSONBody defines parameters for DcimVirtualChassisBulkUpdate.
type DcimVirtualChassisBulkUpdateJSONBody WritableVirtualChassis

// DcimVirtualChassisPartialUpdateJSONBody defines parameters for DcimVirtualChassisPartialUpdate.
type DcimVirtualChassisPartialUpdateJSONBody PatchedWritableVirtualChassis

// DcimVirtualChassisUpdateJSONBody defines parameters for DcimVirtualChassisUpdate.
type DcimVirtualChassisUpdateJSONBody WritableVirtualChassis

// ExtrasComputedFieldsListParams defines parameters for ExtrasComputedFieldsList.
type ExtrasComputedFieldsListParams struct {
	ContentType       *string   `json:"content_type,omitempty"`
	ContentTypeN      *string   `json:"content_type__n,omitempty"`
	FallbackValue     *[]string `json:"fallback_value,omitempty"`
	FallbackValueIc   *[]string `json:"fallback_value__ic,omitempty"`
	FallbackValueIe   *[]string `json:"fallback_value__ie,omitempty"`
	FallbackValueIew  *[]string `json:"fallback_value__iew,omitempty"`
	FallbackValueIre  *[]string `json:"fallback_value__ire,omitempty"`
	FallbackValueIsw  *[]string `json:"fallback_value__isw,omitempty"`
	FallbackValueN    *[]string `json:"fallback_value__n,omitempty"`
	FallbackValueNic  *[]string `json:"fallback_value__nic,omitempty"`
	FallbackValueNie  *[]string `json:"fallback_value__nie,omitempty"`
	FallbackValueNiew *[]string `json:"fallback_value__niew,omitempty"`
	FallbackValueNire *[]string `json:"fallback_value__nire,omitempty"`
	FallbackValueNisw *[]string `json:"fallback_value__nisw,omitempty"`
	FallbackValueNre  *[]string `json:"fallback_value__nre,omitempty"`
	FallbackValueRe   *[]string `json:"fallback_value__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q            *string   `json:"q,omitempty"`
	Slug         *[]string `json:"slug,omitempty"`
	SlugIc       *[]string `json:"slug__ic,omitempty"`
	SlugIe       *[]string `json:"slug__ie,omitempty"`
	SlugIew      *[]string `json:"slug__iew,omitempty"`
	SlugIre      *[]string `json:"slug__ire,omitempty"`
	SlugIsw      *[]string `json:"slug__isw,omitempty"`
	SlugN        *[]string `json:"slug__n,omitempty"`
	SlugNic      *[]string `json:"slug__nic,omitempty"`
	SlugNie      *[]string `json:"slug__nie,omitempty"`
	SlugNiew     *[]string `json:"slug__niew,omitempty"`
	SlugNire     *[]string `json:"slug__nire,omitempty"`
	SlugNisw     *[]string `json:"slug__nisw,omitempty"`
	SlugNre      *[]string `json:"slug__nre,omitempty"`
	SlugRe       *[]string `json:"slug__re,omitempty"`
	Template     *[]string `json:"template,omitempty"`
	TemplateIc   *[]string `json:"template__ic,omitempty"`
	TemplateIe   *[]string `json:"template__ie,omitempty"`
	TemplateIew  *[]string `json:"template__iew,omitempty"`
	TemplateIre  *[]string `json:"template__ire,omitempty"`
	TemplateIsw  *[]string `json:"template__isw,omitempty"`
	TemplateN    *[]string `json:"template__n,omitempty"`
	TemplateNic  *[]string `json:"template__nic,omitempty"`
	TemplateNie  *[]string `json:"template__nie,omitempty"`
	TemplateNiew *[]string `json:"template__niew,omitempty"`
	TemplateNire *[]string `json:"template__nire,omitempty"`
	TemplateNisw *[]string `json:"template__nisw,omitempty"`
	TemplateNre  *[]string `json:"template__nre,omitempty"`
	TemplateRe   *[]string `json:"template__re,omitempty"`
	Weight       *[]int    `json:"weight,omitempty"`
	WeightGt     *[]int    `json:"weight__gt,omitempty"`
	WeightGte    *[]int    `json:"weight__gte,omitempty"`
	WeightLt     *[]int    `json:"weight__lt,omitempty"`
	WeightLte    *[]int    `json:"weight__lte,omitempty"`
	WeightN      *[]int    `json:"weight__n,omitempty"`
}

// ExtrasComputedFieldsBulkPartialUpdateJSONBody defines parameters for ExtrasComputedFieldsBulkPartialUpdate.
type ExtrasComputedFieldsBulkPartialUpdateJSONBody PatchedComputedField

// ExtrasComputedFieldsCreateJSONBody defines parameters for ExtrasComputedFieldsCreate.
type ExtrasComputedFieldsCreateJSONBody ComputedField

// ExtrasComputedFieldsBulkUpdateJSONBody defines parameters for ExtrasComputedFieldsBulkUpdate.
type ExtrasComputedFieldsBulkUpdateJSONBody ComputedField

// ExtrasComputedFieldsPartialUpdateJSONBody defines parameters for ExtrasComputedFieldsPartialUpdate.
type ExtrasComputedFieldsPartialUpdateJSONBody PatchedComputedField

// ExtrasComputedFieldsUpdateJSONBody defines parameters for ExtrasComputedFieldsUpdate.
type ExtrasComputedFieldsUpdateJSONBody ComputedField

// ExtrasConfigContextSchemasListParams defines parameters for ExtrasConfigContextSchemasList.
type ExtrasConfigContextSchemasListParams struct {
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset            *int    `json:"offset,omitempty"`
	OwnerContentType  *string `json:"owner_content_type,omitempty"`
	OwnerContentTypeN *string `json:"owner_content_type__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`
}

// ExtrasConfigContextSchemasBulkPartialUpdateJSONBody defines parameters for ExtrasConfigContextSchemasBulkPartialUpdate.
type ExtrasConfigContextSchemasBulkPartialUpdateJSONBody PatchedConfigContextSchema

// ExtrasConfigContextSchemasCreateJSONBody defines parameters for ExtrasConfigContextSchemasCreate.
type ExtrasConfigContextSchemasCreateJSONBody ConfigContextSchema

// ExtrasConfigContextSchemasBulkUpdateJSONBody defines parameters for ExtrasConfigContextSchemasBulkUpdate.
type ExtrasConfigContextSchemasBulkUpdateJSONBody ConfigContextSchema

// ExtrasConfigContextSchemasPartialUpdateJSONBody defines parameters for ExtrasConfigContextSchemasPartialUpdate.
type ExtrasConfigContextSchemasPartialUpdateJSONBody PatchedConfigContextSchema

// ExtrasConfigContextSchemasUpdateJSONBody defines parameters for ExtrasConfigContextSchemasUpdate.
type ExtrasConfigContextSchemasUpdateJSONBody ConfigContextSchema

// ExtrasConfigContextsListParams defines parameters for ExtrasConfigContextsList.
type ExtrasConfigContextsListParams struct {
	// Cluster group (slug)
	ClusterGroup *[]string `json:"cluster_group,omitempty"`

	// Cluster group (slug)
	ClusterGroupN *[]string `json:"cluster_group__n,omitempty"`

	// Cluster group
	ClusterGroupId *[]openapi_types.UUID `json:"cluster_group_id,omitempty"`

	// Cluster group
	ClusterGroupIdN *[]openapi_types.UUID `json:"cluster_group_id__n,omitempty"`

	// Cluster
	ClusterId *[]openapi_types.UUID `json:"cluster_id,omitempty"`

	// Cluster
	ClusterIdN *[]openapi_types.UUID `json:"cluster_id__n,omitempty"`

	// Device Type (slug)
	DeviceType *[]string `json:"device_type,omitempty"`

	// Device Type (slug)
	DeviceTypeN *[]string `json:"device_type__n,omitempty"`

	// Device Type
	DeviceTypeId *[]openapi_types.UUID `json:"device_type_id,omitempty"`

	// Device Type
	DeviceTypeIdN *[]openapi_types.UUID `json:"device_type_id__n,omitempty"`
	Id            *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc          *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe          *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew         *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre         *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw         *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN           *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic         *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie         *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew        *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire        *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw        *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre         *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe          *[]openapi_types.UUID `json:"id__re,omitempty"`
	IsActive      *bool                 `json:"is_active,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset            *int                  `json:"offset,omitempty"`
	OwnerContentType  *string               `json:"owner_content_type,omitempty"`
	OwnerContentTypeN *string               `json:"owner_content_type__n,omitempty"`
	OwnerObjectId     *[]openapi_types.UUID `json:"owner_object_id,omitempty"`
	OwnerObjectIdIc   *[]openapi_types.UUID `json:"owner_object_id__ic,omitempty"`
	OwnerObjectIdIe   *[]openapi_types.UUID `json:"owner_object_id__ie,omitempty"`
	OwnerObjectIdIew  *[]openapi_types.UUID `json:"owner_object_id__iew,omitempty"`
	OwnerObjectIdIre  *[]openapi_types.UUID `json:"owner_object_id__ire,omitempty"`
	OwnerObjectIdIsw  *[]openapi_types.UUID `json:"owner_object_id__isw,omitempty"`
	OwnerObjectIdN    *[]openapi_types.UUID `json:"owner_object_id__n,omitempty"`
	OwnerObjectIdNic  *[]openapi_types.UUID `json:"owner_object_id__nic,omitempty"`
	OwnerObjectIdNie  *[]openapi_types.UUID `json:"owner_object_id__nie,omitempty"`
	OwnerObjectIdNiew *[]openapi_types.UUID `json:"owner_object_id__niew,omitempty"`
	OwnerObjectIdNire *[]openapi_types.UUID `json:"owner_object_id__nire,omitempty"`
	OwnerObjectIdNisw *[]openapi_types.UUID `json:"owner_object_id__nisw,omitempty"`
	OwnerObjectIdNre  *[]openapi_types.UUID `json:"owner_object_id__nre,omitempty"`
	OwnerObjectIdRe   *[]openapi_types.UUID `json:"owner_object_id__re,omitempty"`

	// Platform (slug)
	Platform *[]string `json:"platform,omitempty"`

	// Platform (slug)
	PlatformN *[]string `json:"platform__n,omitempty"`

	// Platform
	PlatformId *[]openapi_types.UUID `json:"platform_id,omitempty"`

	// Platform
	PlatformIdN *[]openapi_types.UUID `json:"platform_id__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]string `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]string `json:"region__n,omitempty"`

	// Region
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`

	// Tag (slug)
	Tag *[]string `json:"tag,omitempty"`

	// Tag (slug)
	TagN *[]string `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant group (slug)
	TenantGroup *[]string `json:"tenant_group,omitempty"`

	// Tenant group (slug)
	TenantGroupN *[]string `json:"tenant_group__n,omitempty"`

	// Tenant group
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant group
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
}

// ExtrasConfigContextsBulkPartialUpdateJSONBody defines parameters for ExtrasConfigContextsBulkPartialUpdate.
type ExtrasConfigContextsBulkPartialUpdateJSONBody PatchedWritableConfigContext

// ExtrasConfigContextsCreateJSONBody defines parameters for ExtrasConfigContextsCreate.
type ExtrasConfigContextsCreateJSONBody WritableConfigContext

// ExtrasConfigContextsBulkUpdateJSONBody defines parameters for ExtrasConfigContextsBulkUpdate.
type ExtrasConfigContextsBulkUpdateJSONBody WritableConfigContext

// ExtrasConfigContextsPartialUpdateJSONBody defines parameters for ExtrasConfigContextsPartialUpdate.
type ExtrasConfigContextsPartialUpdateJSONBody PatchedWritableConfigContext

// ExtrasConfigContextsUpdateJSONBody defines parameters for ExtrasConfigContextsUpdate.
type ExtrasConfigContextsUpdateJSONBody WritableConfigContext

// ExtrasContentTypesListParams defines parameters for ExtrasContentTypesList.
type ExtrasContentTypesListParams struct {
	AppLabel *string `json:"app_label,omitempty"`
	Id       *int    `json:"id,omitempty"`

	// Number of results to return per page.
	Limit *int    `json:"limit,omitempty"`
	Model *string `json:"model,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`
}

// ExtrasCustomFieldChoicesListParams defines parameters for ExtrasCustomFieldChoicesList.
type ExtrasCustomFieldChoicesListParams struct {
	// Field (name)
	Field *[]string `json:"field,omitempty"`

	// Field (name)
	FieldN *[]string `json:"field__n,omitempty"`

	// Field
	FieldId *[]openapi_types.UUID `json:"field_id,omitempty"`

	// Field
	FieldIdN *[]openapi_types.UUID `json:"field_id__n,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q         *string   `json:"q,omitempty"`
	Value     *[]string `json:"value,omitempty"`
	ValueIc   *[]string `json:"value__ic,omitempty"`
	ValueIe   *[]string `json:"value__ie,omitempty"`
	ValueIew  *[]string `json:"value__iew,omitempty"`
	ValueIre  *[]string `json:"value__ire,omitempty"`
	ValueIsw  *[]string `json:"value__isw,omitempty"`
	ValueN    *[]string `json:"value__n,omitempty"`
	ValueNic  *[]string `json:"value__nic,omitempty"`
	ValueNie  *[]string `json:"value__nie,omitempty"`
	ValueNiew *[]string `json:"value__niew,omitempty"`
	ValueNire *[]string `json:"value__nire,omitempty"`
	ValueNisw *[]string `json:"value__nisw,omitempty"`
	ValueNre  *[]string `json:"value__nre,omitempty"`
	ValueRe   *[]string `json:"value__re,omitempty"`
	Weight    *[]int    `json:"weight,omitempty"`
	WeightGt  *[]int    `json:"weight__gt,omitempty"`
	WeightGte *[]int    `json:"weight__gte,omitempty"`
	WeightLt  *[]int    `json:"weight__lt,omitempty"`
	WeightLte *[]int    `json:"weight__lte,omitempty"`
	WeightN   *[]int    `json:"weight__n,omitempty"`
}

// ExtrasCustomFieldChoicesBulkPartialUpdateJSONBody defines parameters for ExtrasCustomFieldChoicesBulkPartialUpdate.
type ExtrasCustomFieldChoicesBulkPartialUpdateJSONBody PatchedWritableCustomFieldChoice

// ExtrasCustomFieldChoicesCreateJSONBody defines parameters for ExtrasCustomFieldChoicesCreate.
type ExtrasCustomFieldChoicesCreateJSONBody WritableCustomFieldChoice

// ExtrasCustomFieldChoicesBulkUpdateJSONBody defines parameters for ExtrasCustomFieldChoicesBulkUpdate.
type ExtrasCustomFieldChoicesBulkUpdateJSONBody WritableCustomFieldChoice

// ExtrasCustomFieldChoicesPartialUpdateJSONBody defines parameters for ExtrasCustomFieldChoicesPartialUpdate.
type ExtrasCustomFieldChoicesPartialUpdateJSONBody PatchedWritableCustomFieldChoice

// ExtrasCustomFieldChoicesUpdateJSONBody defines parameters for ExtrasCustomFieldChoicesUpdate.
type ExtrasCustomFieldChoicesUpdateJSONBody WritableCustomFieldChoice

// ExtrasCustomFieldsListParams defines parameters for ExtrasCustomFieldsList.
type ExtrasCustomFieldsListParams struct {
	ContentTypes  *[]int `json:"content_types,omitempty"`
	ContentTypesN *[]int `json:"content_types__n,omitempty"`

	// Loose matches any instance of a given string; Exact matches the entire field.
	FilterLogic *string `json:"filter_logic,omitempty"`

	// Loose matches any instance of a given string; Exact matches the entire field.
	FilterLogicN *string               `json:"filter_logic__n,omitempty"`
	Id           *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc         *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe         *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew        *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre        *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw        *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN          *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic        *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie        *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew       *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire       *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw       *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre        *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe         *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q         *string `json:"q,omitempty"`
	Required  *bool   `json:"required,omitempty"`
	Weight    *[]int  `json:"weight,omitempty"`
	WeightGt  *[]int  `json:"weight__gt,omitempty"`
	WeightGte *[]int  `json:"weight__gte,omitempty"`
	WeightLt  *[]int  `json:"weight__lt,omitempty"`
	WeightLte *[]int  `json:"weight__lte,omitempty"`
	WeightN   *[]int  `json:"weight__n,omitempty"`
}

// ExtrasCustomFieldsBulkPartialUpdateJSONBody defines parameters for ExtrasCustomFieldsBulkPartialUpdate.
type ExtrasCustomFieldsBulkPartialUpdateJSONBody PatchedWritableCustomField

// ExtrasCustomFieldsCreateJSONBody defines parameters for ExtrasCustomFieldsCreate.
type ExtrasCustomFieldsCreateJSONBody WritableCustomField

// ExtrasCustomFieldsBulkUpdateJSONBody defines parameters for ExtrasCustomFieldsBulkUpdate.
type ExtrasCustomFieldsBulkUpdateJSONBody WritableCustomField

// ExtrasCustomFieldsPartialUpdateJSONBody defines parameters for ExtrasCustomFieldsPartialUpdate.
type ExtrasCustomFieldsPartialUpdateJSONBody PatchedWritableCustomField

// ExtrasCustomFieldsUpdateJSONBody defines parameters for ExtrasCustomFieldsUpdate.
type ExtrasCustomFieldsUpdateJSONBody WritableCustomField

// ExtrasCustomLinksListParams defines parameters for ExtrasCustomLinksList.
type ExtrasCustomLinksListParams struct {
	// The class of the first link in a group will be used for the dropdown button
	ButtonClass *string `json:"button_class,omitempty"`

	// The class of the first link in a group will be used for the dropdown button
	ButtonClassN  *string   `json:"button_class__n,omitempty"`
	ContentType   *string   `json:"content_type,omitempty"`
	ContentTypeN  *string   `json:"content_type__n,omitempty"`
	GroupName     *[]string `json:"group_name,omitempty"`
	GroupNameIc   *[]string `json:"group_name__ic,omitempty"`
	GroupNameIe   *[]string `json:"group_name__ie,omitempty"`
	GroupNameIew  *[]string `json:"group_name__iew,omitempty"`
	GroupNameIre  *[]string `json:"group_name__ire,omitempty"`
	GroupNameIsw  *[]string `json:"group_name__isw,omitempty"`
	GroupNameN    *[]string `json:"group_name__n,omitempty"`
	GroupNameNic  *[]string `json:"group_name__nic,omitempty"`
	GroupNameNie  *[]string `json:"group_name__nie,omitempty"`
	GroupNameNiew *[]string `json:"group_name__niew,omitempty"`
	GroupNameNire *[]string `json:"group_name__nire,omitempty"`
	GroupNameNisw *[]string `json:"group_name__nisw,omitempty"`
	GroupNameNre  *[]string `json:"group_name__nre,omitempty"`
	GroupNameRe   *[]string `json:"group_name__re,omitempty"`

	// Number of results to return per page.
	Limit     *int      `json:"limit,omitempty"`
	Name      *[]string `json:"name,omitempty"`
	NameIc    *[]string `json:"name__ic,omitempty"`
	NameIe    *[]string `json:"name__ie,omitempty"`
	NameIew   *[]string `json:"name__iew,omitempty"`
	NameIre   *[]string `json:"name__ire,omitempty"`
	NameIsw   *[]string `json:"name__isw,omitempty"`
	NameN     *[]string `json:"name__n,omitempty"`
	NameNic   *[]string `json:"name__nic,omitempty"`
	NameNie   *[]string `json:"name__nie,omitempty"`
	NameNiew  *[]string `json:"name__niew,omitempty"`
	NameNire  *[]string `json:"name__nire,omitempty"`
	NameNisw  *[]string `json:"name__nisw,omitempty"`
	NameNre   *[]string `json:"name__nre,omitempty"`
	NameRe    *[]string `json:"name__re,omitempty"`
	NewWindow *bool     `json:"new_window,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q             *string   `json:"q,omitempty"`
	TargetUrl     *[]string `json:"target_url,omitempty"`
	TargetUrlIc   *[]string `json:"target_url__ic,omitempty"`
	TargetUrlIe   *[]string `json:"target_url__ie,omitempty"`
	TargetUrlIew  *[]string `json:"target_url__iew,omitempty"`
	TargetUrlIre  *[]string `json:"target_url__ire,omitempty"`
	TargetUrlIsw  *[]string `json:"target_url__isw,omitempty"`
	TargetUrlN    *[]string `json:"target_url__n,omitempty"`
	TargetUrlNic  *[]string `json:"target_url__nic,omitempty"`
	TargetUrlNie  *[]string `json:"target_url__nie,omitempty"`
	TargetUrlNiew *[]string `json:"target_url__niew,omitempty"`
	TargetUrlNire *[]string `json:"target_url__nire,omitempty"`
	TargetUrlNisw *[]string `json:"target_url__nisw,omitempty"`
	TargetUrlNre  *[]string `json:"target_url__nre,omitempty"`
	TargetUrlRe   *[]string `json:"target_url__re,omitempty"`
	Text          *[]string `json:"text,omitempty"`
	TextIc        *[]string `json:"text__ic,omitempty"`
	TextIe        *[]string `json:"text__ie,omitempty"`
	TextIew       *[]string `json:"text__iew,omitempty"`
	TextIre       *[]string `json:"text__ire,omitempty"`
	TextIsw       *[]string `json:"text__isw,omitempty"`
	TextN         *[]string `json:"text__n,omitempty"`
	TextNic       *[]string `json:"text__nic,omitempty"`
	TextNie       *[]string `json:"text__nie,omitempty"`
	TextNiew      *[]string `json:"text__niew,omitempty"`
	TextNire      *[]string `json:"text__nire,omitempty"`
	TextNisw      *[]string `json:"text__nisw,omitempty"`
	TextNre       *[]string `json:"text__nre,omitempty"`
	TextRe        *[]string `json:"text__re,omitempty"`
	Weight        *[]int    `json:"weight,omitempty"`
	WeightGt      *[]int    `json:"weight__gt,omitempty"`
	WeightGte     *[]int    `json:"weight__gte,omitempty"`
	WeightLt      *[]int    `json:"weight__lt,omitempty"`
	WeightLte     *[]int    `json:"weight__lte,omitempty"`
	WeightN       *[]int    `json:"weight__n,omitempty"`
}

// ExtrasCustomLinksBulkPartialUpdateJSONBody defines parameters for ExtrasCustomLinksBulkPartialUpdate.
type ExtrasCustomLinksBulkPartialUpdateJSONBody PatchedCustomLink

// ExtrasCustomLinksCreateJSONBody defines parameters for ExtrasCustomLinksCreate.
type ExtrasCustomLinksCreateJSONBody CustomLink

// ExtrasCustomLinksBulkUpdateJSONBody defines parameters for ExtrasCustomLinksBulkUpdate.
type ExtrasCustomLinksBulkUpdateJSONBody CustomLink

// ExtrasCustomLinksPartialUpdateJSONBody defines parameters for ExtrasCustomLinksPartialUpdate.
type ExtrasCustomLinksPartialUpdateJSONBody PatchedCustomLink

// ExtrasCustomLinksUpdateJSONBody defines parameters for ExtrasCustomLinksUpdate.
type ExtrasCustomLinksUpdateJSONBody CustomLink

// ExtrasDynamicGroupsListParams defines parameters for ExtrasDynamicGroupsList.
type ExtrasDynamicGroupsListParams struct {
	ContentType     *[]int                `json:"content_type,omitempty"`
	ContentTypeN    *[]int                `json:"content_type__n,omitempty"`
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// ExtrasDynamicGroupsBulkPartialUpdateJSONBody defines parameters for ExtrasDynamicGroupsBulkPartialUpdate.
type ExtrasDynamicGroupsBulkPartialUpdateJSONBody PatchedDynamicGroup

// ExtrasDynamicGroupsCreateJSONBody defines parameters for ExtrasDynamicGroupsCreate.
type ExtrasDynamicGroupsCreateJSONBody DynamicGroup

// ExtrasDynamicGroupsBulkUpdateJSONBody defines parameters for ExtrasDynamicGroupsBulkUpdate.
type ExtrasDynamicGroupsBulkUpdateJSONBody DynamicGroup

// ExtrasDynamicGroupsPartialUpdateJSONBody defines parameters for ExtrasDynamicGroupsPartialUpdate.
type ExtrasDynamicGroupsPartialUpdateJSONBody PatchedDynamicGroup

// ExtrasDynamicGroupsUpdateJSONBody defines parameters for ExtrasDynamicGroupsUpdate.
type ExtrasDynamicGroupsUpdateJSONBody DynamicGroup

// ExtrasExportTemplatesListParams defines parameters for ExtrasExportTemplatesList.
type ExtrasExportTemplatesListParams struct {
	ContentType  *int                  `json:"content_type,omitempty"`
	ContentTypeN *int                  `json:"content_type__n,omitempty"`
	Id           *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc         *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe         *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew        *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre        *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw        *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN          *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic        *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie        *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew       *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire       *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw       *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre        *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe         *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset            *int                  `json:"offset,omitempty"`
	OwnerContentType  *string               `json:"owner_content_type,omitempty"`
	OwnerContentTypeN *string               `json:"owner_content_type__n,omitempty"`
	OwnerObjectId     *[]openapi_types.UUID `json:"owner_object_id,omitempty"`
	OwnerObjectIdIc   *[]openapi_types.UUID `json:"owner_object_id__ic,omitempty"`
	OwnerObjectIdIe   *[]openapi_types.UUID `json:"owner_object_id__ie,omitempty"`
	OwnerObjectIdIew  *[]openapi_types.UUID `json:"owner_object_id__iew,omitempty"`
	OwnerObjectIdIre  *[]openapi_types.UUID `json:"owner_object_id__ire,omitempty"`
	OwnerObjectIdIsw  *[]openapi_types.UUID `json:"owner_object_id__isw,omitempty"`
	OwnerObjectIdN    *[]openapi_types.UUID `json:"owner_object_id__n,omitempty"`
	OwnerObjectIdNic  *[]openapi_types.UUID `json:"owner_object_id__nic,omitempty"`
	OwnerObjectIdNie  *[]openapi_types.UUID `json:"owner_object_id__nie,omitempty"`
	OwnerObjectIdNiew *[]openapi_types.UUID `json:"owner_object_id__niew,omitempty"`
	OwnerObjectIdNire *[]openapi_types.UUID `json:"owner_object_id__nire,omitempty"`
	OwnerObjectIdNisw *[]openapi_types.UUID `json:"owner_object_id__nisw,omitempty"`
	OwnerObjectIdNre  *[]openapi_types.UUID `json:"owner_object_id__nre,omitempty"`
	OwnerObjectIdRe   *[]openapi_types.UUID `json:"owner_object_id__re,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`
}

// ExtrasExportTemplatesBulkPartialUpdateJSONBody defines parameters for ExtrasExportTemplatesBulkPartialUpdate.
type ExtrasExportTemplatesBulkPartialUpdateJSONBody PatchedExportTemplate

// ExtrasExportTemplatesCreateJSONBody defines parameters for ExtrasExportTemplatesCreate.
type ExtrasExportTemplatesCreateJSONBody ExportTemplate

// ExtrasExportTemplatesBulkUpdateJSONBody defines parameters for ExtrasExportTemplatesBulkUpdate.
type ExtrasExportTemplatesBulkUpdateJSONBody ExportTemplate

// ExtrasExportTemplatesPartialUpdateJSONBody defines parameters for ExtrasExportTemplatesPartialUpdate.
type ExtrasExportTemplatesPartialUpdateJSONBody PatchedExportTemplate

// ExtrasExportTemplatesUpdateJSONBody defines parameters for ExtrasExportTemplatesUpdate.
type ExtrasExportTemplatesUpdateJSONBody ExportTemplate

// ExtrasGitRepositoriesListParams defines parameters for ExtrasGitRepositoriesList.
type ExtrasGitRepositoriesListParams struct {
	Branch         *[]string             `json:"branch,omitempty"`
	BranchIc       *[]string             `json:"branch__ic,omitempty"`
	BranchIe       *[]string             `json:"branch__ie,omitempty"`
	BranchIew      *[]string             `json:"branch__iew,omitempty"`
	BranchIre      *[]string             `json:"branch__ire,omitempty"`
	BranchIsw      *[]string             `json:"branch__isw,omitempty"`
	BranchN        *[]string             `json:"branch__n,omitempty"`
	BranchNic      *[]string             `json:"branch__nic,omitempty"`
	BranchNie      *[]string             `json:"branch__nie,omitempty"`
	BranchNiew     *[]string             `json:"branch__niew,omitempty"`
	BranchNire     *[]string             `json:"branch__nire,omitempty"`
	BranchNisw     *[]string             `json:"branch__nisw,omitempty"`
	BranchNre      *[]string             `json:"branch__nre,omitempty"`
	BranchRe       *[]string             `json:"branch__re,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q             *string   `json:"q,omitempty"`
	RemoteUrl     *[]string `json:"remote_url,omitempty"`
	RemoteUrlIc   *[]string `json:"remote_url__ic,omitempty"`
	RemoteUrlIe   *[]string `json:"remote_url__ie,omitempty"`
	RemoteUrlIew  *[]string `json:"remote_url__iew,omitempty"`
	RemoteUrlIre  *[]string `json:"remote_url__ire,omitempty"`
	RemoteUrlIsw  *[]string `json:"remote_url__isw,omitempty"`
	RemoteUrlN    *[]string `json:"remote_url__n,omitempty"`
	RemoteUrlNic  *[]string `json:"remote_url__nic,omitempty"`
	RemoteUrlNie  *[]string `json:"remote_url__nie,omitempty"`
	RemoteUrlNiew *[]string `json:"remote_url__niew,omitempty"`
	RemoteUrlNire *[]string `json:"remote_url__nire,omitempty"`
	RemoteUrlNisw *[]string `json:"remote_url__nisw,omitempty"`
	RemoteUrlNre  *[]string `json:"remote_url__nre,omitempty"`
	RemoteUrlRe   *[]string `json:"remote_url__re,omitempty"`

	// Secrets group (slug)
	SecretsGroup *[]string `json:"secrets_group,omitempty"`

	// Secrets group (slug)
	SecretsGroupN *[]string `json:"secrets_group__n,omitempty"`

	// Secrets group (ID)
	SecretsGroupId *[]openapi_types.UUID `json:"secrets_group_id,omitempty"`

	// Secrets group (ID)
	SecretsGroupIdN *[]openapi_types.UUID `json:"secrets_group_id__n,omitempty"`
	Slug            *[]string             `json:"slug,omitempty"`
	SlugIc          *[]string             `json:"slug__ic,omitempty"`
	SlugIe          *[]string             `json:"slug__ie,omitempty"`
	SlugIew         *[]string             `json:"slug__iew,omitempty"`
	SlugIre         *[]string             `json:"slug__ire,omitempty"`
	SlugIsw         *[]string             `json:"slug__isw,omitempty"`
	SlugN           *[]string             `json:"slug__n,omitempty"`
	SlugNic         *[]string             `json:"slug__nic,omitempty"`
	SlugNie         *[]string             `json:"slug__nie,omitempty"`
	SlugNiew        *[]string             `json:"slug__niew,omitempty"`
	SlugNire        *[]string             `json:"slug__nire,omitempty"`
	SlugNisw        *[]string             `json:"slug__nisw,omitempty"`
	SlugNre         *[]string             `json:"slug__nre,omitempty"`
	SlugRe          *[]string             `json:"slug__re,omitempty"`
	Tag             *[]string             `json:"tag,omitempty"`
	TagN            *[]string             `json:"tag__n,omitempty"`
}

// ExtrasGitRepositoriesBulkPartialUpdateJSONBody defines parameters for ExtrasGitRepositoriesBulkPartialUpdate.
type ExtrasGitRepositoriesBulkPartialUpdateJSONBody PatchedWritableGitRepository

// ExtrasGitRepositoriesCreateJSONBody defines parameters for ExtrasGitRepositoriesCreate.
type ExtrasGitRepositoriesCreateJSONBody WritableGitRepository

// ExtrasGitRepositoriesBulkUpdateJSONBody defines parameters for ExtrasGitRepositoriesBulkUpdate.
type ExtrasGitRepositoriesBulkUpdateJSONBody WritableGitRepository

// ExtrasGitRepositoriesPartialUpdateJSONBody defines parameters for ExtrasGitRepositoriesPartialUpdate.
type ExtrasGitRepositoriesPartialUpdateJSONBody PatchedWritableGitRepository

// ExtrasGitRepositoriesUpdateJSONBody defines parameters for ExtrasGitRepositoriesUpdate.
type ExtrasGitRepositoriesUpdateJSONBody WritableGitRepository

// ExtrasGitRepositoriesSyncCreateJSONBody defines parameters for ExtrasGitRepositoriesSyncCreate.
type ExtrasGitRepositoriesSyncCreateJSONBody GitRepository

// ExtrasGraphqlQueriesListParams defines parameters for ExtrasGraphqlQueriesList.
type ExtrasGraphqlQueriesListParams struct {
	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// ExtrasGraphqlQueriesBulkPartialUpdateJSONBody defines parameters for ExtrasGraphqlQueriesBulkPartialUpdate.
type ExtrasGraphqlQueriesBulkPartialUpdateJSONBody PatchedGraphQLQuery

// ExtrasGraphqlQueriesCreateJSONBody defines parameters for ExtrasGraphqlQueriesCreate.
type ExtrasGraphqlQueriesCreateJSONBody GraphQLQuery

// ExtrasGraphqlQueriesBulkUpdateJSONBody defines parameters for ExtrasGraphqlQueriesBulkUpdate.
type ExtrasGraphqlQueriesBulkUpdateJSONBody GraphQLQuery

// ExtrasGraphqlQueriesPartialUpdateJSONBody defines parameters for ExtrasGraphqlQueriesPartialUpdate.
type ExtrasGraphqlQueriesPartialUpdateJSONBody PatchedGraphQLQuery

// ExtrasGraphqlQueriesUpdateJSONBody defines parameters for ExtrasGraphqlQueriesUpdate.
type ExtrasGraphqlQueriesUpdateJSONBody GraphQLQuery

// ExtrasGraphqlQueriesRunCreateJSONBody defines parameters for ExtrasGraphqlQueriesRunCreate.
type ExtrasGraphqlQueriesRunCreateJSONBody GraphQLQueryInput

// ExtrasImageAttachmentsListParams defines parameters for ExtrasImageAttachmentsList.
type ExtrasImageAttachmentsListParams struct {
	ContentType    *string               `json:"content_type,omitempty"`
	ContentTypeN   *string               `json:"content_type__n,omitempty"`
	ContentTypeId  *int                  `json:"content_type_id,omitempty"`
	ContentTypeIdN *int                  `json:"content_type_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit        *int                  `json:"limit,omitempty"`
	Name         *[]string             `json:"name,omitempty"`
	NameIc       *[]string             `json:"name__ic,omitempty"`
	NameIe       *[]string             `json:"name__ie,omitempty"`
	NameIew      *[]string             `json:"name__iew,omitempty"`
	NameIre      *[]string             `json:"name__ire,omitempty"`
	NameIsw      *[]string             `json:"name__isw,omitempty"`
	NameN        *[]string             `json:"name__n,omitempty"`
	NameNic      *[]string             `json:"name__nic,omitempty"`
	NameNie      *[]string             `json:"name__nie,omitempty"`
	NameNiew     *[]string             `json:"name__niew,omitempty"`
	NameNire     *[]string             `json:"name__nire,omitempty"`
	NameNisw     *[]string             `json:"name__nisw,omitempty"`
	NameNre      *[]string             `json:"name__nre,omitempty"`
	NameRe       *[]string             `json:"name__re,omitempty"`
	ObjectId     *[]openapi_types.UUID `json:"object_id,omitempty"`
	ObjectIdIc   *[]openapi_types.UUID `json:"object_id__ic,omitempty"`
	ObjectIdIe   *[]openapi_types.UUID `json:"object_id__ie,omitempty"`
	ObjectIdIew  *[]openapi_types.UUID `json:"object_id__iew,omitempty"`
	ObjectIdIre  *[]openapi_types.UUID `json:"object_id__ire,omitempty"`
	ObjectIdIsw  *[]openapi_types.UUID `json:"object_id__isw,omitempty"`
	ObjectIdN    *[]openapi_types.UUID `json:"object_id__n,omitempty"`
	ObjectIdNic  *[]openapi_types.UUID `json:"object_id__nic,omitempty"`
	ObjectIdNie  *[]openapi_types.UUID `json:"object_id__nie,omitempty"`
	ObjectIdNiew *[]openapi_types.UUID `json:"object_id__niew,omitempty"`
	ObjectIdNire *[]openapi_types.UUID `json:"object_id__nire,omitempty"`
	ObjectIdNisw *[]openapi_types.UUID `json:"object_id__nisw,omitempty"`
	ObjectIdNre  *[]openapi_types.UUID `json:"object_id__nre,omitempty"`
	ObjectIdRe   *[]openapi_types.UUID `json:"object_id__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`
}

// ExtrasImageAttachmentsBulkPartialUpdateJSONBody defines parameters for ExtrasImageAttachmentsBulkPartialUpdate.
type ExtrasImageAttachmentsBulkPartialUpdateJSONBody PatchedImageAttachment

// ExtrasImageAttachmentsCreateJSONBody defines parameters for ExtrasImageAttachmentsCreate.
type ExtrasImageAttachmentsCreateJSONBody ImageAttachment

// ExtrasImageAttachmentsBulkUpdateJSONBody defines parameters for ExtrasImageAttachmentsBulkUpdate.
type ExtrasImageAttachmentsBulkUpdateJSONBody ImageAttachment

// ExtrasImageAttachmentsPartialUpdateJSONBody defines parameters for ExtrasImageAttachmentsPartialUpdate.
type ExtrasImageAttachmentsPartialUpdateJSONBody PatchedImageAttachment

// ExtrasImageAttachmentsUpdateJSONBody defines parameters for ExtrasImageAttachmentsUpdate.
type ExtrasImageAttachmentsUpdateJSONBody ImageAttachment

// ExtrasJobLogsListParams defines parameters for ExtrasJobLogsList.
type ExtrasJobLogsListParams struct {
	AbsoluteUrl     *[]string             `json:"absolute_url,omitempty"`
	AbsoluteUrlIc   *[]string             `json:"absolute_url__ic,omitempty"`
	AbsoluteUrlIe   *[]string             `json:"absolute_url__ie,omitempty"`
	AbsoluteUrlIew  *[]string             `json:"absolute_url__iew,omitempty"`
	AbsoluteUrlIre  *[]string             `json:"absolute_url__ire,omitempty"`
	AbsoluteUrlIsw  *[]string             `json:"absolute_url__isw,omitempty"`
	AbsoluteUrlN    *[]string             `json:"absolute_url__n,omitempty"`
	AbsoluteUrlNic  *[]string             `json:"absolute_url__nic,omitempty"`
	AbsoluteUrlNie  *[]string             `json:"absolute_url__nie,omitempty"`
	AbsoluteUrlNiew *[]string             `json:"absolute_url__niew,omitempty"`
	AbsoluteUrlNire *[]string             `json:"absolute_url__nire,omitempty"`
	AbsoluteUrlNisw *[]string             `json:"absolute_url__nisw,omitempty"`
	AbsoluteUrlNre  *[]string             `json:"absolute_url__nre,omitempty"`
	AbsoluteUrlRe   *[]string             `json:"absolute_url__re,omitempty"`
	Created         *[]time.Time          `json:"created,omitempty"`
	CreatedGt       *[]time.Time          `json:"created__gt,omitempty"`
	CreatedGte      *[]time.Time          `json:"created__gte,omitempty"`
	CreatedLt       *[]time.Time          `json:"created__lt,omitempty"`
	CreatedLte      *[]time.Time          `json:"created__lte,omitempty"`
	CreatedN        *[]time.Time          `json:"created__n,omitempty"`
	Grouping        *[]string             `json:"grouping,omitempty"`
	GroupingIc      *[]string             `json:"grouping__ic,omitempty"`
	GroupingIe      *[]string             `json:"grouping__ie,omitempty"`
	GroupingIew     *[]string             `json:"grouping__iew,omitempty"`
	GroupingIre     *[]string             `json:"grouping__ire,omitempty"`
	GroupingIsw     *[]string             `json:"grouping__isw,omitempty"`
	GroupingN       *[]string             `json:"grouping__n,omitempty"`
	GroupingNic     *[]string             `json:"grouping__nic,omitempty"`
	GroupingNie     *[]string             `json:"grouping__nie,omitempty"`
	GroupingNiew    *[]string             `json:"grouping__niew,omitempty"`
	GroupingNire    *[]string             `json:"grouping__nire,omitempty"`
	GroupingNisw    *[]string             `json:"grouping__nisw,omitempty"`
	GroupingNre     *[]string             `json:"grouping__nre,omitempty"`
	GroupingRe      *[]string             `json:"grouping__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	JobResult       *openapi_types.UUID   `json:"job_result,omitempty"`
	JobResultN      *openapi_types.UUID   `json:"job_result__n,omitempty"`

	// Number of results to return per page.
	Limit         *int      `json:"limit,omitempty"`
	LogLevel      *string   `json:"log_level,omitempty"`
	LogLevelN     *string   `json:"log_level__n,omitempty"`
	LogObject     *[]string `json:"log_object,omitempty"`
	LogObjectIc   *[]string `json:"log_object__ic,omitempty"`
	LogObjectIe   *[]string `json:"log_object__ie,omitempty"`
	LogObjectIew  *[]string `json:"log_object__iew,omitempty"`
	LogObjectIre  *[]string `json:"log_object__ire,omitempty"`
	LogObjectIsw  *[]string `json:"log_object__isw,omitempty"`
	LogObjectN    *[]string `json:"log_object__n,omitempty"`
	LogObjectNic  *[]string `json:"log_object__nic,omitempty"`
	LogObjectNie  *[]string `json:"log_object__nie,omitempty"`
	LogObjectNiew *[]string `json:"log_object__niew,omitempty"`
	LogObjectNire *[]string `json:"log_object__nire,omitempty"`
	LogObjectNisw *[]string `json:"log_object__nisw,omitempty"`
	LogObjectNre  *[]string `json:"log_object__nre,omitempty"`
	LogObjectRe   *[]string `json:"log_object__re,omitempty"`
	Message       *[]string `json:"message,omitempty"`
	MessageIc     *[]string `json:"message__ic,omitempty"`
	MessageIe     *[]string `json:"message__ie,omitempty"`
	MessageIew    *[]string `json:"message__iew,omitempty"`
	MessageIre    *[]string `json:"message__ire,omitempty"`
	MessageIsw    *[]string `json:"message__isw,omitempty"`
	MessageN      *[]string `json:"message__n,omitempty"`
	MessageNic    *[]string `json:"message__nic,omitempty"`
	MessageNie    *[]string `json:"message__nie,omitempty"`
	MessageNiew   *[]string `json:"message__niew,omitempty"`
	MessageNire   *[]string `json:"message__nire,omitempty"`
	MessageNisw   *[]string `json:"message__nisw,omitempty"`
	MessageNre    *[]string `json:"message__nre,omitempty"`
	MessageRe     *[]string `json:"message__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`
}

// ExtrasJobResultsListParams defines parameters for ExtrasJobResultsList.
type ExtrasJobResultsListParams struct {
	Completed *time.Time            `json:"completed,omitempty"`
	Created   *time.Time            `json:"created,omitempty"`
	Id        *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc      *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe      *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew     *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre     *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw     *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN       *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic     *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie     *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew    *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire    *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw    *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre     *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe      *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Job (slug)
	JobModel *[]string `json:"job_model,omitempty"`

	// Job (slug)
	JobModelN *[]string `json:"job_model__n,omitempty"`

	// Job (ID)
	JobModelId *[]openapi_types.UUID `json:"job_model_id,omitempty"`

	// Job (ID)
	JobModelIdN *[]openapi_types.UUID `json:"job_model_id__n,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`
	ObjType  *string   `json:"obj_type,omitempty"`
	ObjTypeN *string   `json:"obj_type__n,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q       *string             `json:"q,omitempty"`
	Status  *[]string           `json:"status,omitempty"`
	StatusN *[]string           `json:"status__n,omitempty"`
	User    *openapi_types.UUID `json:"user,omitempty"`
	UserN   *openapi_types.UUID `json:"user__n,omitempty"`
}

// ExtrasJobResultsBulkPartialUpdateJSONBody defines parameters for ExtrasJobResultsBulkPartialUpdate.
type ExtrasJobResultsBulkPartialUpdateJSONBody PatchedJobResult

// ExtrasJobResultsCreateJSONBody defines parameters for ExtrasJobResultsCreate.
type ExtrasJobResultsCreateJSONBody JobResult

// ExtrasJobResultsBulkUpdateJSONBody defines parameters for ExtrasJobResultsBulkUpdate.
type ExtrasJobResultsBulkUpdateJSONBody JobResult

// ExtrasJobResultsPartialUpdateJSONBody defines parameters for ExtrasJobResultsPartialUpdate.
type ExtrasJobResultsPartialUpdateJSONBody PatchedJobResult

// ExtrasJobResultsUpdateJSONBody defines parameters for ExtrasJobResultsUpdate.
type ExtrasJobResultsUpdateJSONBody JobResult

// ExtrasJobsListParams defines parameters for ExtrasJobsList.
type ExtrasJobsListParams struct {
	ApprovalRequired         *bool                 `json:"approval_required,omitempty"`
	ApprovalRequiredOverride *bool                 `json:"approval_required_override,omitempty"`
	CommitDefault            *bool                 `json:"commit_default,omitempty"`
	CommitDefaultOverride    *bool                 `json:"commit_default_override,omitempty"`
	DescriptionOverride      *bool                 `json:"description_override,omitempty"`
	Enabled                  *bool                 `json:"enabled,omitempty"`
	Grouping                 *[]string             `json:"grouping,omitempty"`
	GroupingIc               *[]string             `json:"grouping__ic,omitempty"`
	GroupingIe               *[]string             `json:"grouping__ie,omitempty"`
	GroupingIew              *[]string             `json:"grouping__iew,omitempty"`
	GroupingIre              *[]string             `json:"grouping__ire,omitempty"`
	GroupingIsw              *[]string             `json:"grouping__isw,omitempty"`
	GroupingN                *[]string             `json:"grouping__n,omitempty"`
	GroupingNic              *[]string             `json:"grouping__nic,omitempty"`
	GroupingNie              *[]string             `json:"grouping__nie,omitempty"`
	GroupingNiew             *[]string             `json:"grouping__niew,omitempty"`
	GroupingNire             *[]string             `json:"grouping__nire,omitempty"`
	GroupingNisw             *[]string             `json:"grouping__nisw,omitempty"`
	GroupingNre              *[]string             `json:"grouping__nre,omitempty"`
	GroupingRe               *[]string             `json:"grouping__re,omitempty"`
	GroupingOverride         *bool                 `json:"grouping_override,omitempty"`
	Hidden                   *bool                 `json:"hidden,omitempty"`
	HiddenOverride           *bool                 `json:"hidden_override,omitempty"`
	Id                       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc                     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe                     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew                    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre                    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw                    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN                      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic                    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie                    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew                   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire                   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw                   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre                    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe                     *[]openapi_types.UUID `json:"id__re,omitempty"`
	Installed                *bool                 `json:"installed,omitempty"`
	JobClassName             *[]string             `json:"job_class_name,omitempty"`
	JobClassNameIc           *[]string             `json:"job_class_name__ic,omitempty"`
	JobClassNameIe           *[]string             `json:"job_class_name__ie,omitempty"`
	JobClassNameIew          *[]string             `json:"job_class_name__iew,omitempty"`
	JobClassNameIre          *[]string             `json:"job_class_name__ire,omitempty"`
	JobClassNameIsw          *[]string             `json:"job_class_name__isw,omitempty"`
	JobClassNameN            *[]string             `json:"job_class_name__n,omitempty"`
	JobClassNameNic          *[]string             `json:"job_class_name__nic,omitempty"`
	JobClassNameNie          *[]string             `json:"job_class_name__nie,omitempty"`
	JobClassNameNiew         *[]string             `json:"job_class_name__niew,omitempty"`
	JobClassNameNire         *[]string             `json:"job_class_name__nire,omitempty"`
	JobClassNameNisw         *[]string             `json:"job_class_name__nisw,omitempty"`
	JobClassNameNre          *[]string             `json:"job_class_name__nre,omitempty"`
	JobClassNameRe           *[]string             `json:"job_class_name__re,omitempty"`

	// Number of results to return per page.
	Limit          *int      `json:"limit,omitempty"`
	ModuleName     *[]string `json:"module_name,omitempty"`
	ModuleNameIc   *[]string `json:"module_name__ic,omitempty"`
	ModuleNameIe   *[]string `json:"module_name__ie,omitempty"`
	ModuleNameIew  *[]string `json:"module_name__iew,omitempty"`
	ModuleNameIre  *[]string `json:"module_name__ire,omitempty"`
	ModuleNameIsw  *[]string `json:"module_name__isw,omitempty"`
	ModuleNameN    *[]string `json:"module_name__n,omitempty"`
	ModuleNameNic  *[]string `json:"module_name__nic,omitempty"`
	ModuleNameNie  *[]string `json:"module_name__nie,omitempty"`
	ModuleNameNiew *[]string `json:"module_name__niew,omitempty"`
	ModuleNameNire *[]string `json:"module_name__nire,omitempty"`
	ModuleNameNisw *[]string `json:"module_name__nisw,omitempty"`
	ModuleNameNre  *[]string `json:"module_name__nre,omitempty"`
	ModuleNameRe   *[]string `json:"module_name__re,omitempty"`
	Name           *[]string `json:"name,omitempty"`
	NameIc         *[]string `json:"name__ic,omitempty"`
	NameIe         *[]string `json:"name__ie,omitempty"`
	NameIew        *[]string `json:"name__iew,omitempty"`
	NameIre        *[]string `json:"name__ire,omitempty"`
	NameIsw        *[]string `json:"name__isw,omitempty"`
	NameN          *[]string `json:"name__n,omitempty"`
	NameNic        *[]string `json:"name__nic,omitempty"`
	NameNie        *[]string `json:"name__nie,omitempty"`
	NameNiew       *[]string `json:"name__niew,omitempty"`
	NameNire       *[]string `json:"name__nire,omitempty"`
	NameNisw       *[]string `json:"name__nisw,omitempty"`
	NameNre        *[]string `json:"name__nre,omitempty"`
	NameRe         *[]string `json:"name__re,omitempty"`
	NameOverride   *bool     `json:"name_override,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q                     *string    `json:"q,omitempty"`
	ReadOnly              *bool      `json:"read_only,omitempty"`
	ReadOnlyOverride      *bool      `json:"read_only_override,omitempty"`
	Slug                  *[]string  `json:"slug,omitempty"`
	SlugIc                *[]string  `json:"slug__ic,omitempty"`
	SlugIe                *[]string  `json:"slug__ie,omitempty"`
	SlugIew               *[]string  `json:"slug__iew,omitempty"`
	SlugIre               *[]string  `json:"slug__ire,omitempty"`
	SlugIsw               *[]string  `json:"slug__isw,omitempty"`
	SlugN                 *[]string  `json:"slug__n,omitempty"`
	SlugNic               *[]string  `json:"slug__nic,omitempty"`
	SlugNie               *[]string  `json:"slug__nie,omitempty"`
	SlugNiew              *[]string  `json:"slug__niew,omitempty"`
	SlugNire              *[]string  `json:"slug__nire,omitempty"`
	SlugNisw              *[]string  `json:"slug__nisw,omitempty"`
	SlugNre               *[]string  `json:"slug__nre,omitempty"`
	SlugRe                *[]string  `json:"slug__re,omitempty"`
	SoftTimeLimit         *[]float32 `json:"soft_time_limit,omitempty"`
	SoftTimeLimitGt       *[]float32 `json:"soft_time_limit__gt,omitempty"`
	SoftTimeLimitGte      *[]float32 `json:"soft_time_limit__gte,omitempty"`
	SoftTimeLimitLt       *[]float32 `json:"soft_time_limit__lt,omitempty"`
	SoftTimeLimitLte      *[]float32 `json:"soft_time_limit__lte,omitempty"`
	SoftTimeLimitN        *[]float32 `json:"soft_time_limit__n,omitempty"`
	SoftTimeLimitOverride *bool      `json:"soft_time_limit_override,omitempty"`

	// Source of the Python code for this job - local, Git repository, or plugins
	Source *string `json:"source,omitempty"`

	// Source of the Python code for this job - local, Git repository, or plugins
	SourceN           *string    `json:"source__n,omitempty"`
	Tag               *[]string  `json:"tag,omitempty"`
	TagN              *[]string  `json:"tag__n,omitempty"`
	TimeLimit         *[]float32 `json:"time_limit,omitempty"`
	TimeLimitGt       *[]float32 `json:"time_limit__gt,omitempty"`
	TimeLimitGte      *[]float32 `json:"time_limit__gte,omitempty"`
	TimeLimitLt       *[]float32 `json:"time_limit__lt,omitempty"`
	TimeLimitLte      *[]float32 `json:"time_limit__lte,omitempty"`
	TimeLimitN        *[]float32 `json:"time_limit__n,omitempty"`
	TimeLimitOverride *bool      `json:"time_limit_override,omitempty"`
}

// ExtrasJobsBulkPartialUpdateJSONBody defines parameters for ExtrasJobsBulkPartialUpdate.
type ExtrasJobsBulkPartialUpdateJSONBody PatchedJob

// ExtrasJobsBulkUpdateJSONBody defines parameters for ExtrasJobsBulkUpdate.
type ExtrasJobsBulkUpdateJSONBody Job

// ExtrasJobsRunDeprecatedJSONBody defines parameters for ExtrasJobsRunDeprecated.
type ExtrasJobsRunDeprecatedJSONBody JobInput

// ExtrasJobsPartialUpdateJSONBody defines parameters for ExtrasJobsPartialUpdate.
type ExtrasJobsPartialUpdateJSONBody PatchedJob

// ExtrasJobsUpdateJSONBody defines parameters for ExtrasJobsUpdate.
type ExtrasJobsUpdateJSONBody Job

// ExtrasJobsRunCreateJSONBody defines parameters for ExtrasJobsRunCreate.
type ExtrasJobsRunCreateJSONBody JobInput

// ExtrasJobsVariablesListParams defines parameters for ExtrasJobsVariablesList.
type ExtrasJobsVariablesListParams struct {
	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`
}

// ExtrasObjectChangesListParams defines parameters for ExtrasObjectChangesList.
type ExtrasObjectChangesListParams struct {
	Action               *string               `json:"action,omitempty"`
	ActionN              *string               `json:"action__n,omitempty"`
	ChangedObjectId      *[]openapi_types.UUID `json:"changed_object_id,omitempty"`
	ChangedObjectIdIc    *[]openapi_types.UUID `json:"changed_object_id__ic,omitempty"`
	ChangedObjectIdIe    *[]openapi_types.UUID `json:"changed_object_id__ie,omitempty"`
	ChangedObjectIdIew   *[]openapi_types.UUID `json:"changed_object_id__iew,omitempty"`
	ChangedObjectIdIre   *[]openapi_types.UUID `json:"changed_object_id__ire,omitempty"`
	ChangedObjectIdIsw   *[]openapi_types.UUID `json:"changed_object_id__isw,omitempty"`
	ChangedObjectIdN     *[]openapi_types.UUID `json:"changed_object_id__n,omitempty"`
	ChangedObjectIdNic   *[]openapi_types.UUID `json:"changed_object_id__nic,omitempty"`
	ChangedObjectIdNie   *[]openapi_types.UUID `json:"changed_object_id__nie,omitempty"`
	ChangedObjectIdNiew  *[]openapi_types.UUID `json:"changed_object_id__niew,omitempty"`
	ChangedObjectIdNire  *[]openapi_types.UUID `json:"changed_object_id__nire,omitempty"`
	ChangedObjectIdNisw  *[]openapi_types.UUID `json:"changed_object_id__nisw,omitempty"`
	ChangedObjectIdNre   *[]openapi_types.UUID `json:"changed_object_id__nre,omitempty"`
	ChangedObjectIdRe    *[]openapi_types.UUID `json:"changed_object_id__re,omitempty"`
	ChangedObjectType    *string               `json:"changed_object_type,omitempty"`
	ChangedObjectTypeN   *string               `json:"changed_object_type__n,omitempty"`
	ChangedObjectTypeId  *int                  `json:"changed_object_type_id,omitempty"`
	ChangedObjectTypeIdN *int                  `json:"changed_object_type_id__n,omitempty"`
	Id                   *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc                 *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe                 *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew                *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre                *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw                *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN                  *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic                *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie                *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew               *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire               *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw               *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre                *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe                 *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit          *int      `json:"limit,omitempty"`
	ObjectRepr     *[]string `json:"object_repr,omitempty"`
	ObjectReprIc   *[]string `json:"object_repr__ic,omitempty"`
	ObjectReprIe   *[]string `json:"object_repr__ie,omitempty"`
	ObjectReprIew  *[]string `json:"object_repr__iew,omitempty"`
	ObjectReprIre  *[]string `json:"object_repr__ire,omitempty"`
	ObjectReprIsw  *[]string `json:"object_repr__isw,omitempty"`
	ObjectReprN    *[]string `json:"object_repr__n,omitempty"`
	ObjectReprNic  *[]string `json:"object_repr__nic,omitempty"`
	ObjectReprNie  *[]string `json:"object_repr__nie,omitempty"`
	ObjectReprNiew *[]string `json:"object_repr__niew,omitempty"`
	ObjectReprNire *[]string `json:"object_repr__nire,omitempty"`
	ObjectReprNisw *[]string `json:"object_repr__nisw,omitempty"`
	ObjectReprNre  *[]string `json:"object_repr__nre,omitempty"`
	ObjectReprRe   *[]string `json:"object_repr__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q             *string               `json:"q,omitempty"`
	RequestId     *[]openapi_types.UUID `json:"request_id,omitempty"`
	RequestIdIc   *[]openapi_types.UUID `json:"request_id__ic,omitempty"`
	RequestIdIe   *[]openapi_types.UUID `json:"request_id__ie,omitempty"`
	RequestIdIew  *[]openapi_types.UUID `json:"request_id__iew,omitempty"`
	RequestIdIre  *[]openapi_types.UUID `json:"request_id__ire,omitempty"`
	RequestIdIsw  *[]openapi_types.UUID `json:"request_id__isw,omitempty"`
	RequestIdN    *[]openapi_types.UUID `json:"request_id__n,omitempty"`
	RequestIdNic  *[]openapi_types.UUID `json:"request_id__nic,omitempty"`
	RequestIdNie  *[]openapi_types.UUID `json:"request_id__nie,omitempty"`
	RequestIdNiew *[]openapi_types.UUID `json:"request_id__niew,omitempty"`
	RequestIdNire *[]openapi_types.UUID `json:"request_id__nire,omitempty"`
	RequestIdNisw *[]openapi_types.UUID `json:"request_id__nisw,omitempty"`
	RequestIdNre  *[]openapi_types.UUID `json:"request_id__nre,omitempty"`
	RequestIdRe   *[]openapi_types.UUID `json:"request_id__re,omitempty"`
	Time          *[]time.Time          `json:"time,omitempty"`
	TimeGt        *[]time.Time          `json:"time__gt,omitempty"`
	TimeGte       *[]time.Time          `json:"time__gte,omitempty"`
	TimeLt        *[]time.Time          `json:"time__lt,omitempty"`
	TimeLte       *[]time.Time          `json:"time__lte,omitempty"`
	TimeN         *[]time.Time          `json:"time__n,omitempty"`

	// User name
	User *[]string `json:"user,omitempty"`

	// User name
	UserN *[]string `json:"user__n,omitempty"`

	// User (ID)
	UserId *[]openapi_types.UUID `json:"user_id,omitempty"`

	// User (ID)
	UserIdN      *[]openapi_types.UUID `json:"user_id__n,omitempty"`
	UserName     *[]string             `json:"user_name,omitempty"`
	UserNameIc   *[]string             `json:"user_name__ic,omitempty"`
	UserNameIe   *[]string             `json:"user_name__ie,omitempty"`
	UserNameIew  *[]string             `json:"user_name__iew,omitempty"`
	UserNameIre  *[]string             `json:"user_name__ire,omitempty"`
	UserNameIsw  *[]string             `json:"user_name__isw,omitempty"`
	UserNameN    *[]string             `json:"user_name__n,omitempty"`
	UserNameNic  *[]string             `json:"user_name__nic,omitempty"`
	UserNameNie  *[]string             `json:"user_name__nie,omitempty"`
	UserNameNiew *[]string             `json:"user_name__niew,omitempty"`
	UserNameNire *[]string             `json:"user_name__nire,omitempty"`
	UserNameNisw *[]string             `json:"user_name__nisw,omitempty"`
	UserNameNre  *[]string             `json:"user_name__nre,omitempty"`
	UserNameRe   *[]string             `json:"user_name__re,omitempty"`
}

// ExtrasRelationshipAssociationsListParams defines parameters for ExtrasRelationshipAssociationsList.
type ExtrasRelationshipAssociationsListParams struct {
	DestinationId     *[]openapi_types.UUID `json:"destination_id,omitempty"`
	DestinationIdIc   *[]openapi_types.UUID `json:"destination_id__ic,omitempty"`
	DestinationIdIe   *[]openapi_types.UUID `json:"destination_id__ie,omitempty"`
	DestinationIdIew  *[]openapi_types.UUID `json:"destination_id__iew,omitempty"`
	DestinationIdIre  *[]openapi_types.UUID `json:"destination_id__ire,omitempty"`
	DestinationIdIsw  *[]openapi_types.UUID `json:"destination_id__isw,omitempty"`
	DestinationIdN    *[]openapi_types.UUID `json:"destination_id__n,omitempty"`
	DestinationIdNic  *[]openapi_types.UUID `json:"destination_id__nic,omitempty"`
	DestinationIdNie  *[]openapi_types.UUID `json:"destination_id__nie,omitempty"`
	DestinationIdNiew *[]openapi_types.UUID `json:"destination_id__niew,omitempty"`
	DestinationIdNire *[]openapi_types.UUID `json:"destination_id__nire,omitempty"`
	DestinationIdNisw *[]openapi_types.UUID `json:"destination_id__nisw,omitempty"`
	DestinationIdNre  *[]openapi_types.UUID `json:"destination_id__nre,omitempty"`
	DestinationIdRe   *[]openapi_types.UUID `json:"destination_id__re,omitempty"`
	DestinationType   *[]int                `json:"destination_type,omitempty"`
	DestinationTypeN  *[]int                `json:"destination_type__n,omitempty"`
	Id                *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc              *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe              *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew             *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre             *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw             *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN               *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic             *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie             *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew            *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire            *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw            *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre             *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe              *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Relationship (slug)
	Relationship *[]string `json:"relationship,omitempty"`

	// Relationship (slug)
	RelationshipN *[]string             `json:"relationship__n,omitempty"`
	SourceId      *[]openapi_types.UUID `json:"source_id,omitempty"`
	SourceIdIc    *[]openapi_types.UUID `json:"source_id__ic,omitempty"`
	SourceIdIe    *[]openapi_types.UUID `json:"source_id__ie,omitempty"`
	SourceIdIew   *[]openapi_types.UUID `json:"source_id__iew,omitempty"`
	SourceIdIre   *[]openapi_types.UUID `json:"source_id__ire,omitempty"`
	SourceIdIsw   *[]openapi_types.UUID `json:"source_id__isw,omitempty"`
	SourceIdN     *[]openapi_types.UUID `json:"source_id__n,omitempty"`
	SourceIdNic   *[]openapi_types.UUID `json:"source_id__nic,omitempty"`
	SourceIdNie   *[]openapi_types.UUID `json:"source_id__nie,omitempty"`
	SourceIdNiew  *[]openapi_types.UUID `json:"source_id__niew,omitempty"`
	SourceIdNire  *[]openapi_types.UUID `json:"source_id__nire,omitempty"`
	SourceIdNisw  *[]openapi_types.UUID `json:"source_id__nisw,omitempty"`
	SourceIdNre   *[]openapi_types.UUID `json:"source_id__nre,omitempty"`
	SourceIdRe    *[]openapi_types.UUID `json:"source_id__re,omitempty"`
	SourceType    *[]int                `json:"source_type,omitempty"`
	SourceTypeN   *[]int                `json:"source_type__n,omitempty"`
}

// ExtrasRelationshipAssociationsBulkPartialUpdateJSONBody defines parameters for ExtrasRelationshipAssociationsBulkPartialUpdate.
type ExtrasRelationshipAssociationsBulkPartialUpdateJSONBody PatchedWritableRelationshipAssociation

// ExtrasRelationshipAssociationsCreateJSONBody defines parameters for ExtrasRelationshipAssociationsCreate.
type ExtrasRelationshipAssociationsCreateJSONBody WritableRelationshipAssociation

// ExtrasRelationshipAssociationsBulkUpdateJSONBody defines parameters for ExtrasRelationshipAssociationsBulkUpdate.
type ExtrasRelationshipAssociationsBulkUpdateJSONBody WritableRelationshipAssociation

// ExtrasRelationshipAssociationsPartialUpdateJSONBody defines parameters for ExtrasRelationshipAssociationsPartialUpdate.
type ExtrasRelationshipAssociationsPartialUpdateJSONBody PatchedWritableRelationshipAssociation

// ExtrasRelationshipAssociationsUpdateJSONBody defines parameters for ExtrasRelationshipAssociationsUpdate.
type ExtrasRelationshipAssociationsUpdateJSONBody WritableRelationshipAssociation

// ExtrasRelationshipsListParams defines parameters for ExtrasRelationshipsList.
type ExtrasRelationshipsListParams struct {
	DestinationType  *[]int                `json:"destination_type,omitempty"`
	DestinationTypeN *[]int                `json:"destination_type__n,omitempty"`
	Id               *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc             *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe             *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew            *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre            *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw            *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN              *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic            *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie            *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew           *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire           *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw           *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre            *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe             *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset      *int   `json:"offset,omitempty"`
	SourceType  *[]int `json:"source_type,omitempty"`
	SourceTypeN *[]int `json:"source_type__n,omitempty"`

	// Cardinality of this relationship
	Type *string `json:"type,omitempty"`

	// Cardinality of this relationship
	TypeN *string `json:"type__n,omitempty"`
}

// ExtrasRelationshipsBulkPartialUpdateJSONBody defines parameters for ExtrasRelationshipsBulkPartialUpdate.
type ExtrasRelationshipsBulkPartialUpdateJSONBody PatchedRelationship

// ExtrasRelationshipsCreateJSONBody defines parameters for ExtrasRelationshipsCreate.
type ExtrasRelationshipsCreateJSONBody Relationship

// ExtrasRelationshipsBulkUpdateJSONBody defines parameters for ExtrasRelationshipsBulkUpdate.
type ExtrasRelationshipsBulkUpdateJSONBody Relationship

// ExtrasRelationshipsPartialUpdateJSONBody defines parameters for ExtrasRelationshipsPartialUpdate.
type ExtrasRelationshipsPartialUpdateJSONBody PatchedRelationship

// ExtrasRelationshipsUpdateJSONBody defines parameters for ExtrasRelationshipsUpdate.
type ExtrasRelationshipsUpdateJSONBody Relationship

// ExtrasScheduledJobsListParams defines parameters for ExtrasScheduledJobsList.
type ExtrasScheduledJobsListParams struct {
	FirstRun *time.Time            `json:"first_run,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Job (slug)
	JobModel *[]string `json:"job_model,omitempty"`

	// Job (slug)
	JobModelN *[]string `json:"job_model__n,omitempty"`

	// Job (ID)
	JobModelId *[]openapi_types.UUID `json:"job_model_id,omitempty"`

	// Job (ID)
	JobModelIdN *[]openapi_types.UUID `json:"job_model_id__n,omitempty"`
	LastRun     *time.Time            `json:"last_run,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q                *string `json:"q,omitempty"`
	TotalRunCount    *[]int  `json:"total_run_count,omitempty"`
	TotalRunCountGt  *[]int  `json:"total_run_count__gt,omitempty"`
	TotalRunCountGte *[]int  `json:"total_run_count__gte,omitempty"`
	TotalRunCountLt  *[]int  `json:"total_run_count__lt,omitempty"`
	TotalRunCountLte *[]int  `json:"total_run_count__lte,omitempty"`
	TotalRunCountN   *[]int  `json:"total_run_count__n,omitempty"`
}

// ExtrasScheduledJobsApproveCreateParams defines parameters for ExtrasScheduledJobsApproveCreate.
type ExtrasScheduledJobsApproveCreateParams struct {
	// force execution even if start time has passed
	Force *bool `json:"force,omitempty"`
}

// ExtrasSecretsGroupsAssociationsListParams defines parameters for ExtrasSecretsGroupsAssociationsList.
type ExtrasSecretsGroupsAssociationsListParams struct {
	AccessType  *[]string `json:"access_type,omitempty"`
	AccessTypeN *[]string `json:"access_type__n,omitempty"`

	// Group (slug)
	Group *[]string `json:"group,omitempty"`

	// Group (slug)
	GroupN *[]string `json:"group__n,omitempty"`

	// Group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Group (ID)
	GroupIdN *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Secret (slug)
	Secret *[]string `json:"secret,omitempty"`

	// Secret (slug)
	SecretN *[]string `json:"secret__n,omitempty"`

	// Secret (ID)
	SecretId *[]openapi_types.UUID `json:"secret_id,omitempty"`

	// Secret (ID)
	SecretIdN   *[]openapi_types.UUID `json:"secret_id__n,omitempty"`
	SecretType  *[]string             `json:"secret_type,omitempty"`
	SecretTypeN *[]string             `json:"secret_type__n,omitempty"`
}

// ExtrasSecretsGroupsAssociationsBulkPartialUpdateJSONBody defines parameters for ExtrasSecretsGroupsAssociationsBulkPartialUpdate.
type ExtrasSecretsGroupsAssociationsBulkPartialUpdateJSONBody PatchedWritableSecretsGroupAssociation

// ExtrasSecretsGroupsAssociationsCreateJSONBody defines parameters for ExtrasSecretsGroupsAssociationsCreate.
type ExtrasSecretsGroupsAssociationsCreateJSONBody WritableSecretsGroupAssociation

// ExtrasSecretsGroupsAssociationsBulkUpdateJSONBody defines parameters for ExtrasSecretsGroupsAssociationsBulkUpdate.
type ExtrasSecretsGroupsAssociationsBulkUpdateJSONBody WritableSecretsGroupAssociation

// ExtrasSecretsGroupsAssociationsPartialUpdateJSONBody defines parameters for ExtrasSecretsGroupsAssociationsPartialUpdate.
type ExtrasSecretsGroupsAssociationsPartialUpdateJSONBody PatchedWritableSecretsGroupAssociation

// ExtrasSecretsGroupsAssociationsUpdateJSONBody defines parameters for ExtrasSecretsGroupsAssociationsUpdate.
type ExtrasSecretsGroupsAssociationsUpdateJSONBody WritableSecretsGroupAssociation

// ExtrasSecretsGroupsListParams defines parameters for ExtrasSecretsGroupsList.
type ExtrasSecretsGroupsListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// ExtrasSecretsGroupsBulkPartialUpdateJSONBody defines parameters for ExtrasSecretsGroupsBulkPartialUpdate.
type ExtrasSecretsGroupsBulkPartialUpdateJSONBody PatchedSecretsGroup

// ExtrasSecretsGroupsCreateJSONBody defines parameters for ExtrasSecretsGroupsCreate.
type ExtrasSecretsGroupsCreateJSONBody SecretsGroup

// ExtrasSecretsGroupsBulkUpdateJSONBody defines parameters for ExtrasSecretsGroupsBulkUpdate.
type ExtrasSecretsGroupsBulkUpdateJSONBody SecretsGroup

// ExtrasSecretsGroupsPartialUpdateJSONBody defines parameters for ExtrasSecretsGroupsPartialUpdate.
type ExtrasSecretsGroupsPartialUpdateJSONBody PatchedSecretsGroup

// ExtrasSecretsGroupsUpdateJSONBody defines parameters for ExtrasSecretsGroupsUpdate.
type ExtrasSecretsGroupsUpdateJSONBody SecretsGroup

// ExtrasSecretsListParams defines parameters for ExtrasSecretsList.
type ExtrasSecretsListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset       *int      `json:"offset,omitempty"`
	Provider     *[]string `json:"provider,omitempty"`
	ProviderIc   *[]string `json:"provider__ic,omitempty"`
	ProviderIe   *[]string `json:"provider__ie,omitempty"`
	ProviderIew  *[]string `json:"provider__iew,omitempty"`
	ProviderIre  *[]string `json:"provider__ire,omitempty"`
	ProviderIsw  *[]string `json:"provider__isw,omitempty"`
	ProviderN    *[]string `json:"provider__n,omitempty"`
	ProviderNic  *[]string `json:"provider__nic,omitempty"`
	ProviderNie  *[]string `json:"provider__nie,omitempty"`
	ProviderNiew *[]string `json:"provider__niew,omitempty"`
	ProviderNire *[]string `json:"provider__nire,omitempty"`
	ProviderNisw *[]string `json:"provider__nisw,omitempty"`
	ProviderNre  *[]string `json:"provider__nre,omitempty"`
	ProviderRe   *[]string `json:"provider__re,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// ExtrasSecretsBulkPartialUpdateJSONBody defines parameters for ExtrasSecretsBulkPartialUpdate.
type ExtrasSecretsBulkPartialUpdateJSONBody PatchedSecret

// ExtrasSecretsCreateJSONBody defines parameters for ExtrasSecretsCreate.
type ExtrasSecretsCreateJSONBody Secret

// ExtrasSecretsBulkUpdateJSONBody defines parameters for ExtrasSecretsBulkUpdate.
type ExtrasSecretsBulkUpdateJSONBody Secret

// ExtrasSecretsPartialUpdateJSONBody defines parameters for ExtrasSecretsPartialUpdate.
type ExtrasSecretsPartialUpdateJSONBody PatchedSecret

// ExtrasSecretsUpdateJSONBody defines parameters for ExtrasSecretsUpdate.
type ExtrasSecretsUpdateJSONBody Secret

// ExtrasStatusesListParams defines parameters for ExtrasStatusesList.
type ExtrasStatusesListParams struct {
	Color          *[]string             `json:"color,omitempty"`
	ColorIc        *[]string             `json:"color__ic,omitempty"`
	ColorIe        *[]string             `json:"color__ie,omitempty"`
	ColorIew       *[]string             `json:"color__iew,omitempty"`
	ColorIre       *[]string             `json:"color__ire,omitempty"`
	ColorIsw       *[]string             `json:"color__isw,omitempty"`
	ColorN         *[]string             `json:"color__n,omitempty"`
	ColorNic       *[]string             `json:"color__nic,omitempty"`
	ColorNie       *[]string             `json:"color__nie,omitempty"`
	ColorNiew      *[]string             `json:"color__niew,omitempty"`
	ColorNire      *[]string             `json:"color__nire,omitempty"`
	ColorNisw      *[]string             `json:"color__nisw,omitempty"`
	ColorNre       *[]string             `json:"color__nre,omitempty"`
	ColorRe        *[]string             `json:"color__re,omitempty"`
	ContentTypes   *[]int                `json:"content_types,omitempty"`
	ContentTypesN  *[]int                `json:"content_types__n,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// ExtrasStatusesBulkPartialUpdateJSONBody defines parameters for ExtrasStatusesBulkPartialUpdate.
type ExtrasStatusesBulkPartialUpdateJSONBody PatchedStatus

// ExtrasStatusesCreateJSONBody defines parameters for ExtrasStatusesCreate.
type ExtrasStatusesCreateJSONBody Status

// ExtrasStatusesBulkUpdateJSONBody defines parameters for ExtrasStatusesBulkUpdate.
type ExtrasStatusesBulkUpdateJSONBody Status

// ExtrasStatusesPartialUpdateJSONBody defines parameters for ExtrasStatusesPartialUpdate.
type ExtrasStatusesPartialUpdateJSONBody PatchedStatus

// ExtrasStatusesUpdateJSONBody defines parameters for ExtrasStatusesUpdate.
type ExtrasStatusesUpdateJSONBody Status

// ExtrasTagsListParams defines parameters for ExtrasTagsList.
type ExtrasTagsListParams struct {
	Color          *[]string             `json:"color,omitempty"`
	ColorIc        *[]string             `json:"color__ic,omitempty"`
	ColorIe        *[]string             `json:"color__ie,omitempty"`
	ColorIew       *[]string             `json:"color__iew,omitempty"`
	ColorIre       *[]string             `json:"color__ire,omitempty"`
	ColorIsw       *[]string             `json:"color__isw,omitempty"`
	ColorN         *[]string             `json:"color__n,omitempty"`
	ColorNic       *[]string             `json:"color__nic,omitempty"`
	ColorNie       *[]string             `json:"color__nie,omitempty"`
	ColorNiew      *[]string             `json:"color__niew,omitempty"`
	ColorNire      *[]string             `json:"color__nire,omitempty"`
	ColorNisw      *[]string             `json:"color__nisw,omitempty"`
	ColorNre       *[]string             `json:"color__nre,omitempty"`
	ColorRe        *[]string             `json:"color__re,omitempty"`
	ContentTypes   *[]int                `json:"content_types,omitempty"`
	ContentTypesN  *[]int                `json:"content_types__n,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// ExtrasTagsBulkPartialUpdateJSONBody defines parameters for ExtrasTagsBulkPartialUpdate.
type ExtrasTagsBulkPartialUpdateJSONBody PatchedTagSerializerVersion13

// ExtrasTagsCreateJSONBody defines parameters for ExtrasTagsCreate.
type ExtrasTagsCreateJSONBody TagSerializerVersion13

// ExtrasTagsBulkUpdateJSONBody defines parameters for ExtrasTagsBulkUpdate.
type ExtrasTagsBulkUpdateJSONBody TagSerializerVersion13

// ExtrasTagsPartialUpdateJSONBody defines parameters for ExtrasTagsPartialUpdate.
type ExtrasTagsPartialUpdateJSONBody PatchedTagSerializerVersion13

// ExtrasTagsUpdateJSONBody defines parameters for ExtrasTagsUpdate.
type ExtrasTagsUpdateJSONBody TagSerializerVersion13

// ExtrasWebhooksListParams defines parameters for ExtrasWebhooksList.
type ExtrasWebhooksListParams struct {
	ContentTypes  *[]int `json:"content_types,omitempty"`
	ContentTypesN *[]int `json:"content_types__n,omitempty"`
	Enabled       *bool  `json:"enabled,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset         *int      `json:"offset,omitempty"`
	PayloadUrl     *[]string `json:"payload_url,omitempty"`
	PayloadUrlIc   *[]string `json:"payload_url__ic,omitempty"`
	PayloadUrlIe   *[]string `json:"payload_url__ie,omitempty"`
	PayloadUrlIew  *[]string `json:"payload_url__iew,omitempty"`
	PayloadUrlIre  *[]string `json:"payload_url__ire,omitempty"`
	PayloadUrlIsw  *[]string `json:"payload_url__isw,omitempty"`
	PayloadUrlN    *[]string `json:"payload_url__n,omitempty"`
	PayloadUrlNic  *[]string `json:"payload_url__nic,omitempty"`
	PayloadUrlNie  *[]string `json:"payload_url__nie,omitempty"`
	PayloadUrlNiew *[]string `json:"payload_url__niew,omitempty"`
	PayloadUrlNire *[]string `json:"payload_url__nire,omitempty"`
	PayloadUrlNisw *[]string `json:"payload_url__nisw,omitempty"`
	PayloadUrlNre  *[]string `json:"payload_url__nre,omitempty"`
	PayloadUrlRe   *[]string `json:"payload_url__re,omitempty"`

	// Search
	Q          *string `json:"q,omitempty"`
	TypeCreate *bool   `json:"type_create,omitempty"`
	TypeDelete *bool   `json:"type_delete,omitempty"`
	TypeUpdate *bool   `json:"type_update,omitempty"`
}

// ExtrasWebhooksBulkPartialUpdateJSONBody defines parameters for ExtrasWebhooksBulkPartialUpdate.
type ExtrasWebhooksBulkPartialUpdateJSONBody PatchedWebhook

// ExtrasWebhooksCreateJSONBody defines parameters for ExtrasWebhooksCreate.
type ExtrasWebhooksCreateJSONBody Webhook

// ExtrasWebhooksBulkUpdateJSONBody defines parameters for ExtrasWebhooksBulkUpdate.
type ExtrasWebhooksBulkUpdateJSONBody Webhook

// ExtrasWebhooksPartialUpdateJSONBody defines parameters for ExtrasWebhooksPartialUpdate.
type ExtrasWebhooksPartialUpdateJSONBody PatchedWebhook

// ExtrasWebhooksUpdateJSONBody defines parameters for ExtrasWebhooksUpdate.
type ExtrasWebhooksUpdateJSONBody Webhook

// GraphqlCreateJSONBody defines parameters for GraphqlCreate.
type GraphqlCreateJSONBody GraphQLAPI

// IpamAggregatesListParams defines parameters for IpamAggregatesList.
type IpamAggregatesListParams struct {
	Created      *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte   *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte   *openapi_types.Date   `json:"created__lte,omitempty"`
	DateAdded    *[]openapi_types.Date `json:"date_added,omitempty"`
	DateAddedGt  *[]openapi_types.Date `json:"date_added__gt,omitempty"`
	DateAddedGte *[]openapi_types.Date `json:"date_added__gte,omitempty"`
	DateAddedLt  *[]openapi_types.Date `json:"date_added__lt,omitempty"`
	DateAddedLte *[]openapi_types.Date `json:"date_added__lte,omitempty"`
	DateAddedN   *[]openapi_types.Date `json:"date_added__n,omitempty"`

	// Family
	Family         *float32              `json:"family,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Prefix
	Prefix *string `json:"prefix,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// RIR (slug)
	Rir *[]string `json:"rir,omitempty"`

	// RIR (slug)
	RirN *[]string `json:"rir__n,omitempty"`

	// RIR (ID)
	RirId *[]openapi_types.UUID `json:"rir_id,omitempty"`

	// RIR (ID)
	RirIdN *[]openapi_types.UUID `json:"rir_id__n,omitempty"`
	Tag    *[]string             `json:"tag,omitempty"`
	TagN   *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
}

// IpamAggregatesBulkPartialUpdateJSONBody defines parameters for IpamAggregatesBulkPartialUpdate.
type IpamAggregatesBulkPartialUpdateJSONBody PatchedWritableAggregate

// IpamAggregatesCreateJSONBody defines parameters for IpamAggregatesCreate.
type IpamAggregatesCreateJSONBody WritableAggregate

// IpamAggregatesBulkUpdateJSONBody defines parameters for IpamAggregatesBulkUpdate.
type IpamAggregatesBulkUpdateJSONBody WritableAggregate

// IpamAggregatesPartialUpdateJSONBody defines parameters for IpamAggregatesPartialUpdate.
type IpamAggregatesPartialUpdateJSONBody PatchedWritableAggregate

// IpamAggregatesUpdateJSONBody defines parameters for IpamAggregatesUpdate.
type IpamAggregatesUpdateJSONBody WritableAggregate

// IpamIpAddressesListParams defines parameters for IpamIpAddressesList.
type IpamIpAddressesListParams struct {
	// Address
	Address *[]string `json:"address,omitempty"`

	// Is assigned to an interface
	AssignedToInterface *bool               `json:"assigned_to_interface,omitempty"`
	Created             *openapi_types.Date `json:"created,omitempty"`
	CreatedGte          *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte          *openapi_types.Date `json:"created__lte,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (ID)
	DeviceId    *[]openapi_types.UUID `json:"device_id,omitempty"`
	DnsName     *[]string             `json:"dns_name,omitempty"`
	DnsNameIc   *[]string             `json:"dns_name__ic,omitempty"`
	DnsNameIe   *[]string             `json:"dns_name__ie,omitempty"`
	DnsNameIew  *[]string             `json:"dns_name__iew,omitempty"`
	DnsNameIre  *[]string             `json:"dns_name__ire,omitempty"`
	DnsNameIsw  *[]string             `json:"dns_name__isw,omitempty"`
	DnsNameN    *[]string             `json:"dns_name__n,omitempty"`
	DnsNameNic  *[]string             `json:"dns_name__nic,omitempty"`
	DnsNameNie  *[]string             `json:"dns_name__nie,omitempty"`
	DnsNameNiew *[]string             `json:"dns_name__niew,omitempty"`
	DnsNameNire *[]string             `json:"dns_name__nire,omitempty"`
	DnsNameNisw *[]string             `json:"dns_name__nisw,omitempty"`
	DnsNameNre  *[]string             `json:"dns_name__nre,omitempty"`
	DnsNameRe   *[]string             `json:"dns_name__re,omitempty"`

	// Family
	Family *float32              `json:"family,omitempty"`
	Id     *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc   *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe   *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew  *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre  *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw  *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN    *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic  *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie  *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre  *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe   *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Interface (name)
	Interface *[]string `json:"interface,omitempty"`

	// Interface (name)
	InterfaceN *[]string `json:"interface__n,omitempty"`

	// Interface (ID)
	InterfaceId *[]openapi_types.UUID `json:"interface_id,omitempty"`

	// Interface (ID)
	InterfaceIdN   *[]openapi_types.UUID `json:"interface_id__n,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Mask length
	MaskLength *float32 `json:"mask_length,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Parent prefix
	Parent *string `json:"parent,omitempty"`

	// VRF (RD)
	PresentInVrf *string `json:"present_in_vrf,omitempty"`

	// VRF
	PresentInVrfId *openapi_types.UUID `json:"present_in_vrf_id,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// The functional role of this IP
	Role *[]string `json:"role,omitempty"`

	// The functional role of this IP
	RoleN   *[]string             `json:"role__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`

	// Virtual machine (name)
	VirtualMachine *[]string `json:"virtual_machine,omitempty"`

	// Virtual machine (ID)
	VirtualMachineId *[]openapi_types.UUID `json:"virtual_machine_id,omitempty"`

	// VM interface (name)
	Vminterface *[]string `json:"vminterface,omitempty"`

	// VM interface (name)
	VminterfaceN *[]string `json:"vminterface__n,omitempty"`

	// VM interface (ID)
	VminterfaceId *[]openapi_types.UUID `json:"vminterface_id,omitempty"`

	// VM interface (ID)
	VminterfaceIdN *[]openapi_types.UUID `json:"vminterface_id__n,omitempty"`

	// VRF (RD)
	Vrf *[]string `json:"vrf,omitempty"`

	// VRF (RD)
	VrfN *[]string `json:"vrf__n,omitempty"`

	// VRF
	VrfId *[]openapi_types.UUID `json:"vrf_id,omitempty"`

	// VRF
	VrfIdN *[]openapi_types.UUID `json:"vrf_id__n,omitempty"`
}

// IpamIpAddressesBulkPartialUpdateJSONBody defines parameters for IpamIpAddressesBulkPartialUpdate.
type IpamIpAddressesBulkPartialUpdateJSONBody PatchedWritableIPAddress

// IpamIpAddressesCreateJSONBody defines parameters for IpamIpAddressesCreate.
type IpamIpAddressesCreateJSONBody WritableIPAddress

// IpamIpAddressesBulkUpdateJSONBody defines parameters for IpamIpAddressesBulkUpdate.
type IpamIpAddressesBulkUpdateJSONBody WritableIPAddress

// IpamIpAddressesPartialUpdateJSONBody defines parameters for IpamIpAddressesPartialUpdate.
type IpamIpAddressesPartialUpdateJSONBody PatchedWritableIPAddress

// IpamIpAddressesUpdateJSONBody defines parameters for IpamIpAddressesUpdate.
type IpamIpAddressesUpdateJSONBody WritableIPAddress

// IpamPrefixesListParams defines parameters for IpamPrefixesList.
type IpamPrefixesListParams struct {
	// Prefixes which contain this prefix or IP
	Contains   *string             `json:"contains,omitempty"`
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Family
	Family         *float32              `json:"family,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	IsPool         *bool                 `json:"is_pool,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// mask_length
	MaskLength *float32 `json:"mask_length,omitempty"`

	// mask_length__gte
	MaskLengthGte *float32 `json:"mask_length__gte,omitempty"`

	// mask_length__lte
	MaskLengthLte *float32 `json:"mask_length__lte,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Prefix
	Prefix *string `json:"prefix,omitempty"`

	// VRF (RD)
	PresentInVrf *string `json:"present_in_vrf,omitempty"`

	// VRF
	PresentInVrfId *openapi_types.UUID `json:"present_in_vrf_id,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role (ID)
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role (ID)
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`

	// VLAN (ID)
	VlanId *[]openapi_types.UUID `json:"vlan_id,omitempty"`

	// VLAN (ID)
	VlanIdN *[]openapi_types.UUID `json:"vlan_id__n,omitempty"`

	// VLAN number (1-4095)
	VlanVid *int `json:"vlan_vid,omitempty"`

	// VRF (RD)
	Vrf *[]string `json:"vrf,omitempty"`

	// VRF (RD)
	VrfN *[]string `json:"vrf__n,omitempty"`

	// VRF
	VrfId *[]openapi_types.UUID `json:"vrf_id,omitempty"`

	// VRF
	VrfIdN *[]openapi_types.UUID `json:"vrf_id__n,omitempty"`

	// Within prefix
	Within *string `json:"within,omitempty"`

	// Within and including prefix
	WithinInclude *string `json:"within_include,omitempty"`
}

// IpamPrefixesBulkPartialUpdateJSONBody defines parameters for IpamPrefixesBulkPartialUpdate.
type IpamPrefixesBulkPartialUpdateJSONBody PatchedWritablePrefix

// IpamPrefixesCreateJSONBody defines parameters for IpamPrefixesCreate.
type IpamPrefixesCreateJSONBody WritablePrefix

// IpamPrefixesBulkUpdateJSONBody defines parameters for IpamPrefixesBulkUpdate.
type IpamPrefixesBulkUpdateJSONBody WritablePrefix

// IpamPrefixesPartialUpdateJSONBody defines parameters for IpamPrefixesPartialUpdate.
type IpamPrefixesPartialUpdateJSONBody PatchedWritablePrefix

// IpamPrefixesUpdateJSONBody defines parameters for IpamPrefixesUpdate.
type IpamPrefixesUpdateJSONBody WritablePrefix

// IpamPrefixesAvailableIpsListParams defines parameters for IpamPrefixesAvailableIpsList.
type IpamPrefixesAvailableIpsListParams struct {
	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`
}

// IpamPrefixesAvailableIpsCreateJSONBody defines parameters for IpamPrefixesAvailableIpsCreate.
type IpamPrefixesAvailableIpsCreateJSONBody []AvailableIP

// IpamPrefixesAvailableIpsCreateParams defines parameters for IpamPrefixesAvailableIpsCreate.
type IpamPrefixesAvailableIpsCreateParams struct {
	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`
}

// IpamPrefixesAvailablePrefixesListParams defines parameters for IpamPrefixesAvailablePrefixesList.
type IpamPrefixesAvailablePrefixesListParams struct {
	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`
}

// IpamPrefixesAvailablePrefixesCreateJSONBody defines parameters for IpamPrefixesAvailablePrefixesCreate.
type IpamPrefixesAvailablePrefixesCreateJSONBody PrefixLength

// IpamRirsListParams defines parameters for IpamRirsList.
type IpamRirsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	IsPrivate       *bool                 `json:"is_private,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// IpamRirsBulkPartialUpdateJSONBody defines parameters for IpamRirsBulkPartialUpdate.
type IpamRirsBulkPartialUpdateJSONBody PatchedRIR

// IpamRirsCreateJSONBody defines parameters for IpamRirsCreate.
type IpamRirsCreateJSONBody RIR

// IpamRirsBulkUpdateJSONBody defines parameters for IpamRirsBulkUpdate.
type IpamRirsBulkUpdateJSONBody RIR

// IpamRirsPartialUpdateJSONBody defines parameters for IpamRirsPartialUpdate.
type IpamRirsPartialUpdateJSONBody PatchedRIR

// IpamRirsUpdateJSONBody defines parameters for IpamRirsUpdate.
type IpamRirsUpdateJSONBody RIR

// IpamRolesListParams defines parameters for IpamRolesList.
type IpamRolesListParams struct {
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// IpamRolesBulkPartialUpdateJSONBody defines parameters for IpamRolesBulkPartialUpdate.
type IpamRolesBulkPartialUpdateJSONBody PatchedRole

// IpamRolesCreateJSONBody defines parameters for IpamRolesCreate.
type IpamRolesCreateJSONBody Role

// IpamRolesBulkUpdateJSONBody defines parameters for IpamRolesBulkUpdate.
type IpamRolesBulkUpdateJSONBody Role

// IpamRolesPartialUpdateJSONBody defines parameters for IpamRolesPartialUpdate.
type IpamRolesPartialUpdateJSONBody PatchedRole

// IpamRolesUpdateJSONBody defines parameters for IpamRolesUpdate.
type IpamRolesUpdateJSONBody Role

// IpamRouteTargetsListParams defines parameters for IpamRouteTargetsList.
type IpamRouteTargetsListParams struct {
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Export VRF (RD)
	ExportingVrf *[]string `json:"exporting_vrf,omitempty"`

	// Export VRF (RD)
	ExportingVrfN *[]string `json:"exporting_vrf__n,omitempty"`

	// Exporting VRF
	ExportingVrfId *[]openapi_types.UUID `json:"exporting_vrf_id,omitempty"`

	// Exporting VRF
	ExportingVrfIdN *[]openapi_types.UUID `json:"exporting_vrf_id__n,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Import VRF (RD)
	ImportingVrf *[]string `json:"importing_vrf,omitempty"`

	// Import VRF (RD)
	ImportingVrfN *[]string `json:"importing_vrf__n,omitempty"`

	// Importing VRF
	ImportingVrfId *[]openapi_types.UUID `json:"importing_vrf_id,omitempty"`

	// Importing VRF
	ImportingVrfIdN *[]openapi_types.UUID `json:"importing_vrf_id__n,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q    *string   `json:"q,omitempty"`
	Tag  *[]string `json:"tag,omitempty"`
	TagN *[]string `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
}

// IpamRouteTargetsBulkPartialUpdateJSONBody defines parameters for IpamRouteTargetsBulkPartialUpdate.
type IpamRouteTargetsBulkPartialUpdateJSONBody PatchedWritableRouteTarget

// IpamRouteTargetsCreateJSONBody defines parameters for IpamRouteTargetsCreate.
type IpamRouteTargetsCreateJSONBody WritableRouteTarget

// IpamRouteTargetsBulkUpdateJSONBody defines parameters for IpamRouteTargetsBulkUpdate.
type IpamRouteTargetsBulkUpdateJSONBody WritableRouteTarget

// IpamRouteTargetsPartialUpdateJSONBody defines parameters for IpamRouteTargetsPartialUpdate.
type IpamRouteTargetsPartialUpdateJSONBody PatchedWritableRouteTarget

// IpamRouteTargetsUpdateJSONBody defines parameters for IpamRouteTargetsUpdate.
type IpamRouteTargetsUpdateJSONBody WritableRouteTarget

// IpamServicesListParams defines parameters for IpamServicesList.
type IpamServicesListParams struct {
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Device (name)
	Device *[]string `json:"device,omitempty"`

	// Device (name)
	DeviceN *[]string `json:"device__n,omitempty"`

	// Device (ID)
	DeviceId *[]openapi_types.UUID `json:"device_id,omitempty"`

	// Device (ID)
	DeviceIdN      *[]openapi_types.UUID `json:"device_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset    *int     `json:"offset,omitempty"`
	Port      *float32 `json:"port,omitempty"`
	Protocol  *string  `json:"protocol,omitempty"`
	ProtocolN *string  `json:"protocol__n,omitempty"`

	// Search
	Q    *string   `json:"q,omitempty"`
	Tag  *[]string `json:"tag,omitempty"`
	TagN *[]string `json:"tag__n,omitempty"`

	// Virtual machine (name)
	VirtualMachine *[]string `json:"virtual_machine,omitempty"`

	// Virtual machine (name)
	VirtualMachineN *[]string `json:"virtual_machine__n,omitempty"`

	// Virtual machine (ID)
	VirtualMachineId *[]openapi_types.UUID `json:"virtual_machine_id,omitempty"`

	// Virtual machine (ID)
	VirtualMachineIdN *[]openapi_types.UUID `json:"virtual_machine_id__n,omitempty"`
}

// IpamServicesBulkPartialUpdateJSONBody defines parameters for IpamServicesBulkPartialUpdate.
type IpamServicesBulkPartialUpdateJSONBody PatchedWritableService

// IpamServicesCreateJSONBody defines parameters for IpamServicesCreate.
type IpamServicesCreateJSONBody WritableService

// IpamServicesBulkUpdateJSONBody defines parameters for IpamServicesBulkUpdate.
type IpamServicesBulkUpdateJSONBody WritableService

// IpamServicesPartialUpdateJSONBody defines parameters for IpamServicesPartialUpdate.
type IpamServicesPartialUpdateJSONBody PatchedWritableService

// IpamServicesUpdateJSONBody defines parameters for IpamServicesUpdate.
type IpamServicesUpdateJSONBody WritableService

// IpamVlanGroupsListParams defines parameters for IpamVlanGroupsList.
type IpamVlanGroupsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN  *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Slug     *[]string             `json:"slug,omitempty"`
	SlugIc   *[]string             `json:"slug__ic,omitempty"`
	SlugIe   *[]string             `json:"slug__ie,omitempty"`
	SlugIew  *[]string             `json:"slug__iew,omitempty"`
	SlugIre  *[]string             `json:"slug__ire,omitempty"`
	SlugIsw  *[]string             `json:"slug__isw,omitempty"`
	SlugN    *[]string             `json:"slug__n,omitempty"`
	SlugNic  *[]string             `json:"slug__nic,omitempty"`
	SlugNie  *[]string             `json:"slug__nie,omitempty"`
	SlugNiew *[]string             `json:"slug__niew,omitempty"`
	SlugNire *[]string             `json:"slug__nire,omitempty"`
	SlugNisw *[]string             `json:"slug__nisw,omitempty"`
	SlugNre  *[]string             `json:"slug__nre,omitempty"`
	SlugRe   *[]string             `json:"slug__re,omitempty"`
}

// IpamVlanGroupsBulkPartialUpdateJSONBody defines parameters for IpamVlanGroupsBulkPartialUpdate.
type IpamVlanGroupsBulkPartialUpdateJSONBody PatchedWritableVLANGroup

// IpamVlanGroupsCreateJSONBody defines parameters for IpamVlanGroupsCreate.
type IpamVlanGroupsCreateJSONBody WritableVLANGroup

// IpamVlanGroupsBulkUpdateJSONBody defines parameters for IpamVlanGroupsBulkUpdate.
type IpamVlanGroupsBulkUpdateJSONBody WritableVLANGroup

// IpamVlanGroupsPartialUpdateJSONBody defines parameters for IpamVlanGroupsPartialUpdate.
type IpamVlanGroupsPartialUpdateJSONBody PatchedWritableVLANGroup

// IpamVlanGroupsUpdateJSONBody defines parameters for IpamVlanGroupsUpdate.
type IpamVlanGroupsUpdateJSONBody WritableVLANGroup

// IpamVlansListParams defines parameters for IpamVlansList.
type IpamVlansListParams struct {
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Group
	Group *[]string `json:"group,omitempty"`

	// Group
	GroupN *[]string `json:"group__n,omitempty"`

	// Group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Group (ID)
	GroupIdN       *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role (ID)
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role (ID)
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
	Vid       *[]int                `json:"vid,omitempty"`
	VidGt     *[]int                `json:"vid__gt,omitempty"`
	VidGte    *[]int                `json:"vid__gte,omitempty"`
	VidLt     *[]int                `json:"vid__lt,omitempty"`
	VidLte    *[]int                `json:"vid__lte,omitempty"`
	VidN      *[]int                `json:"vid__n,omitempty"`
}

// IpamVlansBulkPartialUpdateJSONBody defines parameters for IpamVlansBulkPartialUpdate.
type IpamVlansBulkPartialUpdateJSONBody PatchedWritableVLAN

// IpamVlansCreateJSONBody defines parameters for IpamVlansCreate.
type IpamVlansCreateJSONBody WritableVLAN

// IpamVlansBulkUpdateJSONBody defines parameters for IpamVlansBulkUpdate.
type IpamVlansBulkUpdateJSONBody WritableVLAN

// IpamVlansPartialUpdateJSONBody defines parameters for IpamVlansPartialUpdate.
type IpamVlansPartialUpdateJSONBody PatchedWritableVLAN

// IpamVlansUpdateJSONBody defines parameters for IpamVlansUpdate.
type IpamVlansUpdateJSONBody WritableVLAN

// IpamVrfsListParams defines parameters for IpamVrfsList.
type IpamVrfsListParams struct {
	Created       *openapi_types.Date `json:"created,omitempty"`
	CreatedGte    *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte    *openapi_types.Date `json:"created__lte,omitempty"`
	EnforceUnique *bool               `json:"enforce_unique,omitempty"`

	// Export target (name)
	ExportTarget *[]string `json:"export_target,omitempty"`

	// Export target (name)
	ExportTargetN *[]string `json:"export_target__n,omitempty"`

	// Export target
	ExportTargetId *[]openapi_types.UUID `json:"export_target_id,omitempty"`

	// Export target
	ExportTargetIdN *[]openapi_types.UUID `json:"export_target_id__n,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Import target (name)
	ImportTarget *[]string `json:"import_target,omitempty"`

	// Import target (name)
	ImportTargetN *[]string `json:"import_target__n,omitempty"`

	// Import target
	ImportTargetId *[]openapi_types.UUID `json:"import_target_id,omitempty"`

	// Import target
	ImportTargetIdN *[]openapi_types.UUID `json:"import_target_id__n,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q      *string   `json:"q,omitempty"`
	Rd     *[]string `json:"rd,omitempty"`
	RdIc   *[]string `json:"rd__ic,omitempty"`
	RdIe   *[]string `json:"rd__ie,omitempty"`
	RdIew  *[]string `json:"rd__iew,omitempty"`
	RdIre  *[]string `json:"rd__ire,omitempty"`
	RdIsw  *[]string `json:"rd__isw,omitempty"`
	RdN    *[]string `json:"rd__n,omitempty"`
	RdNic  *[]string `json:"rd__nic,omitempty"`
	RdNie  *[]string `json:"rd__nie,omitempty"`
	RdNiew *[]string `json:"rd__niew,omitempty"`
	RdNire *[]string `json:"rd__nire,omitempty"`
	RdNisw *[]string `json:"rd__nisw,omitempty"`
	RdNre  *[]string `json:"rd__nre,omitempty"`
	RdRe   *[]string `json:"rd__re,omitempty"`
	Tag    *[]string `json:"tag,omitempty"`
	TagN   *[]string `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
}

// IpamVrfsBulkPartialUpdateJSONBody defines parameters for IpamVrfsBulkPartialUpdate.
type IpamVrfsBulkPartialUpdateJSONBody PatchedWritableVRF

// IpamVrfsCreateJSONBody defines parameters for IpamVrfsCreate.
type IpamVrfsCreateJSONBody WritableVRF

// IpamVrfsBulkUpdateJSONBody defines parameters for IpamVrfsBulkUpdate.
type IpamVrfsBulkUpdateJSONBody WritableVRF

// IpamVrfsPartialUpdateJSONBody defines parameters for IpamVrfsPartialUpdate.
type IpamVrfsPartialUpdateJSONBody PatchedWritableVRF

// IpamVrfsUpdateJSONBody defines parameters for IpamVrfsUpdate.
type IpamVrfsUpdateJSONBody WritableVRF

// SwaggerJsonRetrieveParams defines parameters for SwaggerJsonRetrieve.
type SwaggerJsonRetrieveParams struct {
	Lang *SwaggerJsonRetrieveParamsLang `json:"lang,omitempty"`
}

// SwaggerJsonRetrieveParamsLang defines parameters for SwaggerJsonRetrieve.
type SwaggerJsonRetrieveParamsLang string

// SwaggerYamlRetrieveParams defines parameters for SwaggerYamlRetrieve.
type SwaggerYamlRetrieveParams struct {
	Lang *SwaggerYamlRetrieveParamsLang `json:"lang,omitempty"`
}

// SwaggerYamlRetrieveParamsLang defines parameters for SwaggerYamlRetrieve.
type SwaggerYamlRetrieveParamsLang string

// SwaggerRetrieveParams defines parameters for SwaggerRetrieve.
type SwaggerRetrieveParams struct {
	Format *SwaggerRetrieveParamsFormat `json:"format,omitempty"`
	Lang   *SwaggerRetrieveParamsLang   `json:"lang,omitempty"`
}

// SwaggerRetrieveParamsFormat defines parameters for SwaggerRetrieve.
type SwaggerRetrieveParamsFormat string

// SwaggerRetrieveParamsLang defines parameters for SwaggerRetrieve.
type SwaggerRetrieveParamsLang string

// TenancyTenantGroupsListParams defines parameters for TenancyTenantGroupsList.
type TenancyTenantGroupsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Tenant group group (slug)
	Parent *[]string `json:"parent,omitempty"`

	// Tenant group group (slug)
	ParentN *[]string `json:"parent__n,omitempty"`

	// Tenant group (ID)
	ParentId *[]openapi_types.UUID `json:"parent_id,omitempty"`

	// Tenant group (ID)
	ParentIdN *[]openapi_types.UUID `json:"parent_id__n,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// TenancyTenantGroupsBulkPartialUpdateJSONBody defines parameters for TenancyTenantGroupsBulkPartialUpdate.
type TenancyTenantGroupsBulkPartialUpdateJSONBody PatchedWritableTenantGroup

// TenancyTenantGroupsCreateJSONBody defines parameters for TenancyTenantGroupsCreate.
type TenancyTenantGroupsCreateJSONBody WritableTenantGroup

// TenancyTenantGroupsBulkUpdateJSONBody defines parameters for TenancyTenantGroupsBulkUpdate.
type TenancyTenantGroupsBulkUpdateJSONBody WritableTenantGroup

// TenancyTenantGroupsPartialUpdateJSONBody defines parameters for TenancyTenantGroupsPartialUpdate.
type TenancyTenantGroupsPartialUpdateJSONBody PatchedWritableTenantGroup

// TenancyTenantGroupsUpdateJSONBody defines parameters for TenancyTenantGroupsUpdate.
type TenancyTenantGroupsUpdateJSONBody WritableTenantGroup

// TenancyTenantsListParams defines parameters for TenancyTenantsList.
type TenancyTenantsListParams struct {
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Tenant group (slug)
	Group *[]openapi_types.UUID `json:"group,omitempty"`

	// Tenant group (slug)
	GroupN *[]openapi_types.UUID `json:"group__n,omitempty"`

	// Tenant group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Tenant group (ID)
	GroupIdN       *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
	Tag      *[]string `json:"tag,omitempty"`
	TagN     *[]string `json:"tag__n,omitempty"`
}

// TenancyTenantsBulkPartialUpdateJSONBody defines parameters for TenancyTenantsBulkPartialUpdate.
type TenancyTenantsBulkPartialUpdateJSONBody PatchedWritableTenant

// TenancyTenantsCreateJSONBody defines parameters for TenancyTenantsCreate.
type TenancyTenantsCreateJSONBody WritableTenant

// TenancyTenantsBulkUpdateJSONBody defines parameters for TenancyTenantsBulkUpdate.
type TenancyTenantsBulkUpdateJSONBody WritableTenant

// TenancyTenantsPartialUpdateJSONBody defines parameters for TenancyTenantsPartialUpdate.
type TenancyTenantsPartialUpdateJSONBody PatchedWritableTenant

// TenancyTenantsUpdateJSONBody defines parameters for TenancyTenantsUpdate.
type TenancyTenantsUpdateJSONBody WritableTenant

// UsersGroupsListParams defines parameters for UsersGroupsList.
type UsersGroupsListParams struct {
	Id    *[]int `json:"id,omitempty"`
	IdGt  *[]int `json:"id__gt,omitempty"`
	IdGte *[]int `json:"id__gte,omitempty"`
	IdLt  *[]int `json:"id__lt,omitempty"`
	IdLte *[]int `json:"id__lte,omitempty"`
	IdN   *[]int `json:"id__n,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`
}

// UsersGroupsBulkPartialUpdateJSONBody defines parameters for UsersGroupsBulkPartialUpdate.
type UsersGroupsBulkPartialUpdateJSONBody PatchedGroup

// UsersGroupsCreateJSONBody defines parameters for UsersGroupsCreate.
type UsersGroupsCreateJSONBody Group

// UsersGroupsBulkUpdateJSONBody defines parameters for UsersGroupsBulkUpdate.
type UsersGroupsBulkUpdateJSONBody Group

// UsersGroupsPartialUpdateJSONBody defines parameters for UsersGroupsPartialUpdate.
type UsersGroupsPartialUpdateJSONBody PatchedGroup

// UsersGroupsUpdateJSONBody defines parameters for UsersGroupsUpdate.
type UsersGroupsUpdateJSONBody Group

// UsersPermissionsListParams defines parameters for UsersPermissionsList.
type UsersPermissionsListParams struct {
	Enabled *bool `json:"enabled,omitempty"`

	// Group (name)
	Group *[]string `json:"group,omitempty"`

	// Group (name)
	GroupN *[]string `json:"group__n,omitempty"`

	// Group
	GroupId *[]int `json:"group_id,omitempty"`

	// Group
	GroupIdN *[]int                `json:"group_id__n,omitempty"`
	Id       *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc     *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe     *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew    *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre    *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw    *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN      *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic    *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie    *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew   *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire   *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw   *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre    *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe     *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit        *int      `json:"limit,omitempty"`
	Name         *[]string `json:"name,omitempty"`
	NameIc       *[]string `json:"name__ic,omitempty"`
	NameIe       *[]string `json:"name__ie,omitempty"`
	NameIew      *[]string `json:"name__iew,omitempty"`
	NameIre      *[]string `json:"name__ire,omitempty"`
	NameIsw      *[]string `json:"name__isw,omitempty"`
	NameN        *[]string `json:"name__n,omitempty"`
	NameNic      *[]string `json:"name__nic,omitempty"`
	NameNie      *[]string `json:"name__nie,omitempty"`
	NameNiew     *[]string `json:"name__niew,omitempty"`
	NameNire     *[]string `json:"name__nire,omitempty"`
	NameNisw     *[]string `json:"name__nisw,omitempty"`
	NameNre      *[]string `json:"name__nre,omitempty"`
	NameRe       *[]string `json:"name__re,omitempty"`
	ObjectTypes  *[]int    `json:"object_types,omitempty"`
	ObjectTypesN *[]int    `json:"object_types__n,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// User (name)
	User *[]string `json:"user,omitempty"`

	// User (name)
	UserN *[]string `json:"user__n,omitempty"`

	// User
	UserId *[]openapi_types.UUID `json:"user_id,omitempty"`

	// User
	UserIdN *[]openapi_types.UUID `json:"user_id__n,omitempty"`
}

// UsersPermissionsBulkPartialUpdateJSONBody defines parameters for UsersPermissionsBulkPartialUpdate.
type UsersPermissionsBulkPartialUpdateJSONBody PatchedWritableObjectPermission

// UsersPermissionsCreateJSONBody defines parameters for UsersPermissionsCreate.
type UsersPermissionsCreateJSONBody WritableObjectPermission

// UsersPermissionsBulkUpdateJSONBody defines parameters for UsersPermissionsBulkUpdate.
type UsersPermissionsBulkUpdateJSONBody WritableObjectPermission

// UsersPermissionsPartialUpdateJSONBody defines parameters for UsersPermissionsPartialUpdate.
type UsersPermissionsPartialUpdateJSONBody PatchedWritableObjectPermission

// UsersPermissionsUpdateJSONBody defines parameters for UsersPermissionsUpdate.
type UsersPermissionsUpdateJSONBody WritableObjectPermission

// UsersTokensListParams defines parameters for UsersTokensList.
type UsersTokensListParams struct {
	Created    *[]time.Time          `json:"created,omitempty"`
	CreatedGt  *[]time.Time          `json:"created__gt,omitempty"`
	CreatedGte *[]time.Time          `json:"created__gte,omitempty"`
	CreatedLt  *[]time.Time          `json:"created__lt,omitempty"`
	CreatedLte *[]time.Time          `json:"created__lte,omitempty"`
	CreatedN   *[]time.Time          `json:"created__n,omitempty"`
	Expires    *[]time.Time          `json:"expires,omitempty"`
	ExpiresGt  *[]time.Time          `json:"expires__gt,omitempty"`
	ExpiresGte *[]time.Time          `json:"expires__gte,omitempty"`
	ExpiresLt  *[]time.Time          `json:"expires__lt,omitempty"`
	ExpiresLte *[]time.Time          `json:"expires__lte,omitempty"`
	ExpiresN   *[]time.Time          `json:"expires__n,omitempty"`
	Id         *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc       *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe       *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew      *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre      *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw      *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN        *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic      *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie      *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew     *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire     *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw     *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre      *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe       *[]openapi_types.UUID `json:"id__re,omitempty"`
	Key        *[]string             `json:"key,omitempty"`
	KeyIc      *[]string             `json:"key__ic,omitempty"`
	KeyIe      *[]string             `json:"key__ie,omitempty"`
	KeyIew     *[]string             `json:"key__iew,omitempty"`
	KeyIre     *[]string             `json:"key__ire,omitempty"`
	KeyIsw     *[]string             `json:"key__isw,omitempty"`
	KeyN       *[]string             `json:"key__n,omitempty"`
	KeyNic     *[]string             `json:"key__nic,omitempty"`
	KeyNie     *[]string             `json:"key__nie,omitempty"`
	KeyNiew    *[]string             `json:"key__niew,omitempty"`
	KeyNire    *[]string             `json:"key__nire,omitempty"`
	KeyNisw    *[]string             `json:"key__nisw,omitempty"`
	KeyNre     *[]string             `json:"key__nre,omitempty"`
	KeyRe      *[]string             `json:"key__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q            *string `json:"q,omitempty"`
	WriteEnabled *bool   `json:"write_enabled,omitempty"`
}

// UsersTokensBulkPartialUpdateJSONBody defines parameters for UsersTokensBulkPartialUpdate.
type UsersTokensBulkPartialUpdateJSONBody PatchedToken

// UsersTokensCreateJSONBody defines parameters for UsersTokensCreate.
type UsersTokensCreateJSONBody Token

// UsersTokensBulkUpdateJSONBody defines parameters for UsersTokensBulkUpdate.
type UsersTokensBulkUpdateJSONBody Token

// UsersTokensPartialUpdateJSONBody defines parameters for UsersTokensPartialUpdate.
type UsersTokensPartialUpdateJSONBody PatchedToken

// UsersTokensUpdateJSONBody defines parameters for UsersTokensUpdate.
type UsersTokensUpdateJSONBody Token

// UsersUsersListParams defines parameters for UsersUsersList.
type UsersUsersListParams struct {
	Email         *[]string `json:"email,omitempty"`
	EmailIc       *[]string `json:"email__ic,omitempty"`
	EmailIe       *[]string `json:"email__ie,omitempty"`
	EmailIew      *[]string `json:"email__iew,omitempty"`
	EmailIre      *[]string `json:"email__ire,omitempty"`
	EmailIsw      *[]string `json:"email__isw,omitempty"`
	EmailN        *[]string `json:"email__n,omitempty"`
	EmailNic      *[]string `json:"email__nic,omitempty"`
	EmailNie      *[]string `json:"email__nie,omitempty"`
	EmailNiew     *[]string `json:"email__niew,omitempty"`
	EmailNire     *[]string `json:"email__nire,omitempty"`
	EmailNisw     *[]string `json:"email__nisw,omitempty"`
	EmailNre      *[]string `json:"email__nre,omitempty"`
	EmailRe       *[]string `json:"email__re,omitempty"`
	FirstName     *[]string `json:"first_name,omitempty"`
	FirstNameIc   *[]string `json:"first_name__ic,omitempty"`
	FirstNameIe   *[]string `json:"first_name__ie,omitempty"`
	FirstNameIew  *[]string `json:"first_name__iew,omitempty"`
	FirstNameIre  *[]string `json:"first_name__ire,omitempty"`
	FirstNameIsw  *[]string `json:"first_name__isw,omitempty"`
	FirstNameN    *[]string `json:"first_name__n,omitempty"`
	FirstNameNic  *[]string `json:"first_name__nic,omitempty"`
	FirstNameNie  *[]string `json:"first_name__nie,omitempty"`
	FirstNameNiew *[]string `json:"first_name__niew,omitempty"`
	FirstNameNire *[]string `json:"first_name__nire,omitempty"`
	FirstNameNisw *[]string `json:"first_name__nisw,omitempty"`
	FirstNameNre  *[]string `json:"first_name__nre,omitempty"`
	FirstNameRe   *[]string `json:"first_name__re,omitempty"`

	// Group (name)
	Group *[]string `json:"group,omitempty"`

	// Group (name)
	GroupN *[]string `json:"group__n,omitempty"`

	// Group
	GroupId *[]int `json:"group_id,omitempty"`

	// Group
	GroupIdN     *[]int                `json:"group_id__n,omitempty"`
	Id           *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc         *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe         *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew        *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre        *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw        *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN          *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic        *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie        *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew       *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire       *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw       *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre        *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe         *[]openapi_types.UUID `json:"id__re,omitempty"`
	IsActive     *bool                 `json:"is_active,omitempty"`
	IsStaff      *bool                 `json:"is_staff,omitempty"`
	LastName     *[]string             `json:"last_name,omitempty"`
	LastNameIc   *[]string             `json:"last_name__ic,omitempty"`
	LastNameIe   *[]string             `json:"last_name__ie,omitempty"`
	LastNameIew  *[]string             `json:"last_name__iew,omitempty"`
	LastNameIre  *[]string             `json:"last_name__ire,omitempty"`
	LastNameIsw  *[]string             `json:"last_name__isw,omitempty"`
	LastNameN    *[]string             `json:"last_name__n,omitempty"`
	LastNameNic  *[]string             `json:"last_name__nic,omitempty"`
	LastNameNie  *[]string             `json:"last_name__nie,omitempty"`
	LastNameNiew *[]string             `json:"last_name__niew,omitempty"`
	LastNameNire *[]string             `json:"last_name__nire,omitempty"`
	LastNameNisw *[]string             `json:"last_name__nisw,omitempty"`
	LastNameNre  *[]string             `json:"last_name__nre,omitempty"`
	LastNameRe   *[]string             `json:"last_name__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q            *string   `json:"q,omitempty"`
	Username     *[]string `json:"username,omitempty"`
	UsernameIc   *[]string `json:"username__ic,omitempty"`
	UsernameIe   *[]string `json:"username__ie,omitempty"`
	UsernameIew  *[]string `json:"username__iew,omitempty"`
	UsernameIre  *[]string `json:"username__ire,omitempty"`
	UsernameIsw  *[]string `json:"username__isw,omitempty"`
	UsernameN    *[]string `json:"username__n,omitempty"`
	UsernameNic  *[]string `json:"username__nic,omitempty"`
	UsernameNie  *[]string `json:"username__nie,omitempty"`
	UsernameNiew *[]string `json:"username__niew,omitempty"`
	UsernameNire *[]string `json:"username__nire,omitempty"`
	UsernameNisw *[]string `json:"username__nisw,omitempty"`
	UsernameNre  *[]string `json:"username__nre,omitempty"`
	UsernameRe   *[]string `json:"username__re,omitempty"`
}

// UsersUsersBulkPartialUpdateJSONBody defines parameters for UsersUsersBulkPartialUpdate.
type UsersUsersBulkPartialUpdateJSONBody PatchedWritableUser

// UsersUsersCreateJSONBody defines parameters for UsersUsersCreate.
type UsersUsersCreateJSONBody WritableUser

// UsersUsersBulkUpdateJSONBody defines parameters for UsersUsersBulkUpdate.
type UsersUsersBulkUpdateJSONBody WritableUser

// UsersUsersPartialUpdateJSONBody defines parameters for UsersUsersPartialUpdate.
type UsersUsersPartialUpdateJSONBody PatchedWritableUser

// UsersUsersUpdateJSONBody defines parameters for UsersUsersUpdate.
type UsersUsersUpdateJSONBody WritableUser

// VirtualizationClusterGroupsListParams defines parameters for VirtualizationClusterGroupsList.
type VirtualizationClusterGroupsListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// VirtualizationClusterGroupsBulkPartialUpdateJSONBody defines parameters for VirtualizationClusterGroupsBulkPartialUpdate.
type VirtualizationClusterGroupsBulkPartialUpdateJSONBody PatchedClusterGroup

// VirtualizationClusterGroupsCreateJSONBody defines parameters for VirtualizationClusterGroupsCreate.
type VirtualizationClusterGroupsCreateJSONBody ClusterGroup

// VirtualizationClusterGroupsBulkUpdateJSONBody defines parameters for VirtualizationClusterGroupsBulkUpdate.
type VirtualizationClusterGroupsBulkUpdateJSONBody ClusterGroup

// VirtualizationClusterGroupsPartialUpdateJSONBody defines parameters for VirtualizationClusterGroupsPartialUpdate.
type VirtualizationClusterGroupsPartialUpdateJSONBody PatchedClusterGroup

// VirtualizationClusterGroupsUpdateJSONBody defines parameters for VirtualizationClusterGroupsUpdate.
type VirtualizationClusterGroupsUpdateJSONBody ClusterGroup

// VirtualizationClusterTypesListParams defines parameters for VirtualizationClusterTypesList.
type VirtualizationClusterTypesListParams struct {
	Created         *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte      *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte      *openapi_types.Date   `json:"created__lte,omitempty"`
	Description     *[]string             `json:"description,omitempty"`
	DescriptionIc   *[]string             `json:"description__ic,omitempty"`
	DescriptionIe   *[]string             `json:"description__ie,omitempty"`
	DescriptionIew  *[]string             `json:"description__iew,omitempty"`
	DescriptionIre  *[]string             `json:"description__ire,omitempty"`
	DescriptionIsw  *[]string             `json:"description__isw,omitempty"`
	DescriptionN    *[]string             `json:"description__n,omitempty"`
	DescriptionNic  *[]string             `json:"description__nic,omitempty"`
	DescriptionNie  *[]string             `json:"description__nie,omitempty"`
	DescriptionNiew *[]string             `json:"description__niew,omitempty"`
	DescriptionNire *[]string             `json:"description__nire,omitempty"`
	DescriptionNisw *[]string             `json:"description__nisw,omitempty"`
	DescriptionNre  *[]string             `json:"description__nre,omitempty"`
	DescriptionRe   *[]string             `json:"description__re,omitempty"`
	Id              *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc            *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe            *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew           *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre           *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw           *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN             *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic           *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie           *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew          *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire          *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw          *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre           *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe            *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated     *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte  *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte  *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q        *string   `json:"q,omitempty"`
	Slug     *[]string `json:"slug,omitempty"`
	SlugIc   *[]string `json:"slug__ic,omitempty"`
	SlugIe   *[]string `json:"slug__ie,omitempty"`
	SlugIew  *[]string `json:"slug__iew,omitempty"`
	SlugIre  *[]string `json:"slug__ire,omitempty"`
	SlugIsw  *[]string `json:"slug__isw,omitempty"`
	SlugN    *[]string `json:"slug__n,omitempty"`
	SlugNic  *[]string `json:"slug__nic,omitempty"`
	SlugNie  *[]string `json:"slug__nie,omitempty"`
	SlugNiew *[]string `json:"slug__niew,omitempty"`
	SlugNire *[]string `json:"slug__nire,omitempty"`
	SlugNisw *[]string `json:"slug__nisw,omitempty"`
	SlugNre  *[]string `json:"slug__nre,omitempty"`
	SlugRe   *[]string `json:"slug__re,omitempty"`
}

// VirtualizationClusterTypesBulkPartialUpdateJSONBody defines parameters for VirtualizationClusterTypesBulkPartialUpdate.
type VirtualizationClusterTypesBulkPartialUpdateJSONBody PatchedClusterType

// VirtualizationClusterTypesCreateJSONBody defines parameters for VirtualizationClusterTypesCreate.
type VirtualizationClusterTypesCreateJSONBody ClusterType

// VirtualizationClusterTypesBulkUpdateJSONBody defines parameters for VirtualizationClusterTypesBulkUpdate.
type VirtualizationClusterTypesBulkUpdateJSONBody ClusterType

// VirtualizationClusterTypesPartialUpdateJSONBody defines parameters for VirtualizationClusterTypesPartialUpdate.
type VirtualizationClusterTypesPartialUpdateJSONBody PatchedClusterType

// VirtualizationClusterTypesUpdateJSONBody defines parameters for VirtualizationClusterTypesUpdate.
type VirtualizationClusterTypesUpdateJSONBody ClusterType

// VirtualizationClustersListParams defines parameters for VirtualizationClustersList.
type VirtualizationClustersListParams struct {
	Created    *openapi_types.Date `json:"created,omitempty"`
	CreatedGte *openapi_types.Date `json:"created__gte,omitempty"`
	CreatedLte *openapi_types.Date `json:"created__lte,omitempty"`

	// Parent group (slug)
	Group *[]string `json:"group,omitempty"`

	// Parent group (slug)
	GroupN *[]string `json:"group__n,omitempty"`

	// Parent group (ID)
	GroupId *[]openapi_types.UUID `json:"group_id,omitempty"`

	// Parent group (ID)
	GroupIdN       *[]openapi_types.UUID `json:"group_id__n,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit    *int      `json:"limit,omitempty"`
	Name     *[]string `json:"name,omitempty"`
	NameIc   *[]string `json:"name__ic,omitempty"`
	NameIe   *[]string `json:"name__ie,omitempty"`
	NameIew  *[]string `json:"name__iew,omitempty"`
	NameIre  *[]string `json:"name__ire,omitempty"`
	NameIsw  *[]string `json:"name__isw,omitempty"`
	NameN    *[]string `json:"name__n,omitempty"`
	NameNic  *[]string `json:"name__nic,omitempty"`
	NameNie  *[]string `json:"name__nie,omitempty"`
	NameNiew *[]string `json:"name__niew,omitempty"`
	NameNire *[]string `json:"name__nire,omitempty"`
	NameNisw *[]string `json:"name__nisw,omitempty"`
	NameNre  *[]string `json:"name__nre,omitempty"`
	NameRe   *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`

	// Cluster type (slug)
	Type *[]string `json:"type,omitempty"`

	// Cluster type (slug)
	TypeN *[]string `json:"type__n,omitempty"`

	// Cluster type (ID)
	TypeId *[]openapi_types.UUID `json:"type_id,omitempty"`

	// Cluster type (ID)
	TypeIdN *[]openapi_types.UUID `json:"type_id__n,omitempty"`
}

// VirtualizationClustersBulkPartialUpdateJSONBody defines parameters for VirtualizationClustersBulkPartialUpdate.
type VirtualizationClustersBulkPartialUpdateJSONBody PatchedWritableCluster

// VirtualizationClustersCreateJSONBody defines parameters for VirtualizationClustersCreate.
type VirtualizationClustersCreateJSONBody WritableCluster

// VirtualizationClustersBulkUpdateJSONBody defines parameters for VirtualizationClustersBulkUpdate.
type VirtualizationClustersBulkUpdateJSONBody WritableCluster

// VirtualizationClustersPartialUpdateJSONBody defines parameters for VirtualizationClustersPartialUpdate.
type VirtualizationClustersPartialUpdateJSONBody PatchedWritableCluster

// VirtualizationClustersUpdateJSONBody defines parameters for VirtualizationClustersUpdate.
type VirtualizationClustersUpdateJSONBody WritableCluster

// VirtualizationInterfacesListParams defines parameters for VirtualizationInterfacesList.
type VirtualizationInterfacesListParams struct {
	// Cluster
	Cluster *[]string `json:"cluster,omitempty"`

	// Cluster
	ClusterN *[]string `json:"cluster__n,omitempty"`

	// Cluster (ID)
	ClusterId *[]openapi_types.UUID `json:"cluster_id,omitempty"`

	// Cluster (ID)
	ClusterIdN *[]openapi_types.UUID `json:"cluster_id__n,omitempty"`
	Enabled    *bool                 `json:"enabled,omitempty"`
	Id         *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc       *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe       *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew      *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre      *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw      *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN        *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic      *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie      *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew     *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire     *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw     *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre      *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe       *[]openapi_types.UUID `json:"id__re,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// MAC address
	MacAddress *[]string `json:"mac_address,omitempty"`

	// MAC address
	MacAddressIc *[]string `json:"mac_address__ic,omitempty"`

	// MAC address
	MacAddressIe *[]string `json:"mac_address__ie,omitempty"`

	// MAC address
	MacAddressIew *[]string `json:"mac_address__iew,omitempty"`

	// MAC address
	MacAddressIre *[]string `json:"mac_address__ire,omitempty"`

	// MAC address
	MacAddressIsw *[]string `json:"mac_address__isw,omitempty"`

	// MAC address
	MacAddressN *[]string `json:"mac_address__n,omitempty"`

	// MAC address
	MacAddressNic *[]string `json:"mac_address__nic,omitempty"`

	// MAC address
	MacAddressNie *[]string `json:"mac_address__nie,omitempty"`

	// MAC address
	MacAddressNiew *[]string `json:"mac_address__niew,omitempty"`

	// MAC address
	MacAddressNire *[]string `json:"mac_address__nire,omitempty"`

	// MAC address
	MacAddressNisw *[]string `json:"mac_address__nisw,omitempty"`

	// MAC address
	MacAddressNre *[]string `json:"mac_address__nre,omitempty"`

	// MAC address
	MacAddressRe *[]string `json:"mac_address__re,omitempty"`
	Mtu          *[]int    `json:"mtu,omitempty"`
	MtuGt        *[]int    `json:"mtu__gt,omitempty"`
	MtuGte       *[]int    `json:"mtu__gte,omitempty"`
	MtuLt        *[]int    `json:"mtu__lt,omitempty"`
	MtuLte       *[]int    `json:"mtu__lte,omitempty"`
	MtuN         *[]int    `json:"mtu__n,omitempty"`
	Name         *[]string `json:"name,omitempty"`
	NameIc       *[]string `json:"name__ic,omitempty"`
	NameIe       *[]string `json:"name__ie,omitempty"`
	NameIew      *[]string `json:"name__iew,omitempty"`
	NameIre      *[]string `json:"name__ire,omitempty"`
	NameIsw      *[]string `json:"name__isw,omitempty"`
	NameN        *[]string `json:"name__n,omitempty"`
	NameNic      *[]string `json:"name__nic,omitempty"`
	NameNie      *[]string `json:"name__nie,omitempty"`
	NameNiew     *[]string `json:"name__niew,omitempty"`
	NameNire     *[]string `json:"name__nire,omitempty"`
	NameNisw     *[]string `json:"name__nisw,omitempty"`
	NameNre      *[]string `json:"name__nre,omitempty"`
	NameRe       *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Search
	Q    *string   `json:"q,omitempty"`
	Tag  *[]string `json:"tag,omitempty"`
	TagN *[]string `json:"tag__n,omitempty"`

	// Virtual machine
	VirtualMachine *[]string `json:"virtual_machine,omitempty"`

	// Virtual machine
	VirtualMachineN *[]string `json:"virtual_machine__n,omitempty"`

	// Virtual machine (ID)
	VirtualMachineId *[]openapi_types.UUID `json:"virtual_machine_id,omitempty"`

	// Virtual machine (ID)
	VirtualMachineIdN *[]openapi_types.UUID `json:"virtual_machine_id__n,omitempty"`
}

// VirtualizationInterfacesBulkPartialUpdateJSONBody defines parameters for VirtualizationInterfacesBulkPartialUpdate.
type VirtualizationInterfacesBulkPartialUpdateJSONBody PatchedWritableVMInterface

// VirtualizationInterfacesCreateJSONBody defines parameters for VirtualizationInterfacesCreate.
type VirtualizationInterfacesCreateJSONBody WritableVMInterface

// VirtualizationInterfacesBulkUpdateJSONBody defines parameters for VirtualizationInterfacesBulkUpdate.
type VirtualizationInterfacesBulkUpdateJSONBody WritableVMInterface

// VirtualizationInterfacesPartialUpdateJSONBody defines parameters for VirtualizationInterfacesPartialUpdate.
type VirtualizationInterfacesPartialUpdateJSONBody PatchedWritableVMInterface

// VirtualizationInterfacesUpdateJSONBody defines parameters for VirtualizationInterfacesUpdate.
type VirtualizationInterfacesUpdateJSONBody WritableVMInterface

// VirtualizationVirtualMachinesListParams defines parameters for VirtualizationVirtualMachinesList.
type VirtualizationVirtualMachinesListParams struct {
	Cluster  *openapi_types.UUID `json:"cluster,omitempty"`
	ClusterN *openapi_types.UUID `json:"cluster__n,omitempty"`

	// Cluster group (slug)
	ClusterGroup *[]string `json:"cluster_group,omitempty"`

	// Cluster group (slug)
	ClusterGroupN *[]string `json:"cluster_group__n,omitempty"`

	// Cluster group (ID)
	ClusterGroupId *[]openapi_types.UUID `json:"cluster_group_id,omitempty"`

	// Cluster group (ID)
	ClusterGroupIdN *[]openapi_types.UUID `json:"cluster_group_id__n,omitempty"`

	// Cluster (ID)
	ClusterId *[]openapi_types.UUID `json:"cluster_id,omitempty"`

	// Cluster (ID)
	ClusterIdN *[]openapi_types.UUID `json:"cluster_id__n,omitempty"`

	// Cluster type (slug)
	ClusterType *[]string `json:"cluster_type,omitempty"`

	// Cluster type (slug)
	ClusterTypeN *[]string `json:"cluster_type__n,omitempty"`

	// Cluster type (ID)
	ClusterTypeId *[]openapi_types.UUID `json:"cluster_type_id,omitempty"`

	// Cluster type (ID)
	ClusterTypeIdN *[]openapi_types.UUID `json:"cluster_type_id__n,omitempty"`
	Created        *openapi_types.Date   `json:"created,omitempty"`
	CreatedGte     *openapi_types.Date   `json:"created__gte,omitempty"`
	CreatedLte     *openapi_types.Date   `json:"created__lte,omitempty"`
	Disk           *[]int                `json:"disk,omitempty"`
	DiskGt         *[]int                `json:"disk__gt,omitempty"`
	DiskGte        *[]int                `json:"disk__gte,omitempty"`
	DiskLt         *[]int                `json:"disk__lt,omitempty"`
	DiskLte        *[]int                `json:"disk__lte,omitempty"`
	DiskN          *[]int                `json:"disk__n,omitempty"`

	// Has a primary IP
	HasPrimaryIp   *bool                 `json:"has_primary_ip,omitempty"`
	Id             *[]openapi_types.UUID `json:"id,omitempty"`
	IdIc           *[]openapi_types.UUID `json:"id__ic,omitempty"`
	IdIe           *[]openapi_types.UUID `json:"id__ie,omitempty"`
	IdIew          *[]openapi_types.UUID `json:"id__iew,omitempty"`
	IdIre          *[]openapi_types.UUID `json:"id__ire,omitempty"`
	IdIsw          *[]openapi_types.UUID `json:"id__isw,omitempty"`
	IdN            *[]openapi_types.UUID `json:"id__n,omitempty"`
	IdNic          *[]openapi_types.UUID `json:"id__nic,omitempty"`
	IdNie          *[]openapi_types.UUID `json:"id__nie,omitempty"`
	IdNiew         *[]openapi_types.UUID `json:"id__niew,omitempty"`
	IdNire         *[]openapi_types.UUID `json:"id__nire,omitempty"`
	IdNisw         *[]openapi_types.UUID `json:"id__nisw,omitempty"`
	IdNre          *[]openapi_types.UUID `json:"id__nre,omitempty"`
	IdRe           *[]openapi_types.UUID `json:"id__re,omitempty"`
	LastUpdated    *time.Time            `json:"last_updated,omitempty"`
	LastUpdatedGte *time.Time            `json:"last_updated__gte,omitempty"`
	LastUpdatedLte *time.Time            `json:"last_updated__lte,omitempty"`

	// Number of results to return per page.
	Limit *int `json:"limit,omitempty"`

	// Has local config context data
	LocalContextData *bool `json:"local_context_data,omitempty"`

	// Schema (slug)
	LocalContextSchema *[]string `json:"local_context_schema,omitempty"`

	// Schema (slug)
	LocalContextSchemaN *[]string `json:"local_context_schema__n,omitempty"`

	// Schema (ID)
	LocalContextSchemaId *[]openapi_types.UUID `json:"local_context_schema_id,omitempty"`

	// Schema (ID)
	LocalContextSchemaIdN *[]openapi_types.UUID `json:"local_context_schema_id__n,omitempty"`

	// MAC address
	MacAddress *[]string `json:"mac_address,omitempty"`

	// MAC address
	MacAddressIc *[]string `json:"mac_address__ic,omitempty"`

	// MAC address
	MacAddressIe *[]string `json:"mac_address__ie,omitempty"`

	// MAC address
	MacAddressIew *[]string `json:"mac_address__iew,omitempty"`

	// MAC address
	MacAddressIre *[]string `json:"mac_address__ire,omitempty"`

	// MAC address
	MacAddressIsw *[]string `json:"mac_address__isw,omitempty"`

	// MAC address
	MacAddressN *[]string `json:"mac_address__n,omitempty"`

	// MAC address
	MacAddressNic *[]string `json:"mac_address__nic,omitempty"`

	// MAC address
	MacAddressNie *[]string `json:"mac_address__nie,omitempty"`

	// MAC address
	MacAddressNiew *[]string `json:"mac_address__niew,omitempty"`

	// MAC address
	MacAddressNire *[]string `json:"mac_address__nire,omitempty"`

	// MAC address
	MacAddressNisw *[]string `json:"mac_address__nisw,omitempty"`

	// MAC address
	MacAddressNre *[]string `json:"mac_address__nre,omitempty"`

	// MAC address
	MacAddressRe *[]string `json:"mac_address__re,omitempty"`
	Memory       *[]int    `json:"memory,omitempty"`
	MemoryGt     *[]int    `json:"memory__gt,omitempty"`
	MemoryGte    *[]int    `json:"memory__gte,omitempty"`
	MemoryLt     *[]int    `json:"memory__lt,omitempty"`
	MemoryLte    *[]int    `json:"memory__lte,omitempty"`
	MemoryN      *[]int    `json:"memory__n,omitempty"`
	Name         *[]string `json:"name,omitempty"`
	NameIc       *[]string `json:"name__ic,omitempty"`
	NameIe       *[]string `json:"name__ie,omitempty"`
	NameIew      *[]string `json:"name__iew,omitempty"`
	NameIre      *[]string `json:"name__ire,omitempty"`
	NameIsw      *[]string `json:"name__isw,omitempty"`
	NameN        *[]string `json:"name__n,omitempty"`
	NameNic      *[]string `json:"name__nic,omitempty"`
	NameNie      *[]string `json:"name__nie,omitempty"`
	NameNiew     *[]string `json:"name__niew,omitempty"`
	NameNire     *[]string `json:"name__nire,omitempty"`
	NameNisw     *[]string `json:"name__nisw,omitempty"`
	NameNre      *[]string `json:"name__nre,omitempty"`
	NameRe       *[]string `json:"name__re,omitempty"`

	// The initial index from which to return the results.
	Offset *int `json:"offset,omitempty"`

	// Platform (slug)
	Platform *[]string `json:"platform,omitempty"`

	// Platform (slug)
	PlatformN *[]string `json:"platform__n,omitempty"`

	// Platform (ID)
	PlatformId *[]openapi_types.UUID `json:"platform_id,omitempty"`

	// Platform (ID)
	PlatformIdN *[]openapi_types.UUID `json:"platform_id__n,omitempty"`

	// Search
	Q *string `json:"q,omitempty"`

	// Region (slug)
	Region *[]openapi_types.UUID `json:"region,omitempty"`

	// Region (slug)
	RegionN *[]openapi_types.UUID `json:"region__n,omitempty"`

	// Region (ID)
	RegionId *[]openapi_types.UUID `json:"region_id,omitempty"`

	// Region (ID)
	RegionIdN *[]openapi_types.UUID `json:"region_id__n,omitempty"`

	// Role (slug)
	Role *[]string `json:"role,omitempty"`

	// Role (slug)
	RoleN *[]string `json:"role__n,omitempty"`

	// Role (ID)
	RoleId *[]openapi_types.UUID `json:"role_id,omitempty"`

	// Role (ID)
	RoleIdN *[]openapi_types.UUID `json:"role_id__n,omitempty"`

	// Site (slug)
	Site *[]string `json:"site,omitempty"`

	// Site (slug)
	SiteN *[]string `json:"site__n,omitempty"`

	// Site (ID)
	SiteId *[]openapi_types.UUID `json:"site_id,omitempty"`

	// Site (ID)
	SiteIdN *[]openapi_types.UUID `json:"site_id__n,omitempty"`
	Status  *[]openapi_types.UUID `json:"status,omitempty"`
	StatusN *[]openapi_types.UUID `json:"status__n,omitempty"`
	Tag     *[]string             `json:"tag,omitempty"`
	TagN    *[]string             `json:"tag__n,omitempty"`

	// Tenant (slug)
	Tenant *[]string `json:"tenant,omitempty"`

	// Tenant (slug)
	TenantN *[]string `json:"tenant__n,omitempty"`

	// Tenant Group (slug)
	TenantGroup *[]openapi_types.UUID `json:"tenant_group,omitempty"`

	// Tenant Group (slug)
	TenantGroupN *[]openapi_types.UUID `json:"tenant_group__n,omitempty"`

	// Tenant Group (ID)
	TenantGroupId *[]openapi_types.UUID `json:"tenant_group_id,omitempty"`

	// Tenant Group (ID)
	TenantGroupIdN *[]openapi_types.UUID `json:"tenant_group_id__n,omitempty"`

	// Tenant (ID)
	TenantId *[]openapi_types.UUID `json:"tenant_id,omitempty"`

	// Tenant (ID)
	TenantIdN *[]openapi_types.UUID `json:"tenant_id__n,omitempty"`
	Vcpus     *[]int                `json:"vcpus,omitempty"`
	VcpusGt   *[]int                `json:"vcpus__gt,omitempty"`
	VcpusGte  *[]int                `json:"vcpus__gte,omitempty"`
	VcpusLt   *[]int                `json:"vcpus__lt,omitempty"`
	VcpusLte  *[]int                `json:"vcpus__lte,omitempty"`
	VcpusN    *[]int                `json:"vcpus__n,omitempty"`
}

// VirtualizationVirtualMachinesBulkPartialUpdateJSONBody defines parameters for VirtualizationVirtualMachinesBulkPartialUpdate.
type VirtualizationVirtualMachinesBulkPartialUpdateJSONBody PatchedWritableVirtualMachineWithConfigContext

// VirtualizationVirtualMachinesCreateJSONBody defines parameters for VirtualizationVirtualMachinesCreate.
type VirtualizationVirtualMachinesCreateJSONBody WritableVirtualMachineWithConfigContext

// VirtualizationVirtualMachinesBulkUpdateJSONBody defines parameters for VirtualizationVirtualMachinesBulkUpdate.
type VirtualizationVirtualMachinesBulkUpdateJSONBody WritableVirtualMachineWithConfigContext

// VirtualizationVirtualMachinesPartialUpdateJSONBody defines parameters for VirtualizationVirtualMachinesPartialUpdate.
type VirtualizationVirtualMachinesPartialUpdateJSONBody PatchedWritableVirtualMachineWithConfigContext

// VirtualizationVirtualMachinesUpdateJSONBody defines parameters for VirtualizationVirtualMachinesUpdate.
type VirtualizationVirtualMachinesUpdateJSONBody WritableVirtualMachineWithConfigContext

// CircuitsCircuitTerminationsBulkPartialUpdateJSONRequestBody defines body for CircuitsCircuitTerminationsBulkPartialUpdate for application/json ContentType.
type CircuitsCircuitTerminationsBulkPartialUpdateJSONRequestBody CircuitsCircuitTerminationsBulkPartialUpdateJSONBody

// CircuitsCircuitTerminationsCreateJSONRequestBody defines body for CircuitsCircuitTerminationsCreate for application/json ContentType.
type CircuitsCircuitTerminationsCreateJSONRequestBody CircuitsCircuitTerminationsCreateJSONBody

// CircuitsCircuitTerminationsBulkUpdateJSONRequestBody defines body for CircuitsCircuitTerminationsBulkUpdate for application/json ContentType.
type CircuitsCircuitTerminationsBulkUpdateJSONRequestBody CircuitsCircuitTerminationsBulkUpdateJSONBody

// CircuitsCircuitTerminationsPartialUpdateJSONRequestBody defines body for CircuitsCircuitTerminationsPartialUpdate for application/json ContentType.
type CircuitsCircuitTerminationsPartialUpdateJSONRequestBody CircuitsCircuitTerminationsPartialUpdateJSONBody

// CircuitsCircuitTerminationsUpdateJSONRequestBody defines body for CircuitsCircuitTerminationsUpdate for application/json ContentType.
type CircuitsCircuitTerminationsUpdateJSONRequestBody CircuitsCircuitTerminationsUpdateJSONBody

// CircuitsCircuitTypesBulkPartialUpdateJSONRequestBody defines body for CircuitsCircuitTypesBulkPartialUpdate for application/json ContentType.
type CircuitsCircuitTypesBulkPartialUpdateJSONRequestBody CircuitsCircuitTypesBulkPartialUpdateJSONBody

// CircuitsCircuitTypesCreateJSONRequestBody defines body for CircuitsCircuitTypesCreate for application/json ContentType.
type CircuitsCircuitTypesCreateJSONRequestBody CircuitsCircuitTypesCreateJSONBody

// CircuitsCircuitTypesBulkUpdateJSONRequestBody defines body for CircuitsCircuitTypesBulkUpdate for application/json ContentType.
type CircuitsCircuitTypesBulkUpdateJSONRequestBody CircuitsCircuitTypesBulkUpdateJSONBody

// CircuitsCircuitTypesPartialUpdateJSONRequestBody defines body for CircuitsCircuitTypesPartialUpdate for application/json ContentType.
type CircuitsCircuitTypesPartialUpdateJSONRequestBody CircuitsCircuitTypesPartialUpdateJSONBody

// CircuitsCircuitTypesUpdateJSONRequestBody defines body for CircuitsCircuitTypesUpdate for application/json ContentType.
type CircuitsCircuitTypesUpdateJSONRequestBody CircuitsCircuitTypesUpdateJSONBody

// CircuitsCircuitsBulkPartialUpdateJSONRequestBody defines body for CircuitsCircuitsBulkPartialUpdate for application/json ContentType.
type CircuitsCircuitsBulkPartialUpdateJSONRequestBody CircuitsCircuitsBulkPartialUpdateJSONBody

// CircuitsCircuitsCreateJSONRequestBody defines body for CircuitsCircuitsCreate for application/json ContentType.
type CircuitsCircuitsCreateJSONRequestBody CircuitsCircuitsCreateJSONBody

// CircuitsCircuitsBulkUpdateJSONRequestBody defines body for CircuitsCircuitsBulkUpdate for application/json ContentType.
type CircuitsCircuitsBulkUpdateJSONRequestBody CircuitsCircuitsBulkUpdateJSONBody

// CircuitsCircuitsPartialUpdateJSONRequestBody defines body for CircuitsCircuitsPartialUpdate for application/json ContentType.
type CircuitsCircuitsPartialUpdateJSONRequestBody CircuitsCircuitsPartialUpdateJSONBody

// CircuitsCircuitsUpdateJSONRequestBody defines body for CircuitsCircuitsUpdate for application/json ContentType.
type CircuitsCircuitsUpdateJSONRequestBody CircuitsCircuitsUpdateJSONBody

// CircuitsProviderNetworksBulkPartialUpdateJSONRequestBody defines body for CircuitsProviderNetworksBulkPartialUpdate for application/json ContentType.
type CircuitsProviderNetworksBulkPartialUpdateJSONRequestBody CircuitsProviderNetworksBulkPartialUpdateJSONBody

// CircuitsProviderNetworksCreateJSONRequestBody defines body for CircuitsProviderNetworksCreate for application/json ContentType.
type CircuitsProviderNetworksCreateJSONRequestBody CircuitsProviderNetworksCreateJSONBody

// CircuitsProviderNetworksBulkUpdateJSONRequestBody defines body for CircuitsProviderNetworksBulkUpdate for application/json ContentType.
type CircuitsProviderNetworksBulkUpdateJSONRequestBody CircuitsProviderNetworksBulkUpdateJSONBody

// CircuitsProviderNetworksPartialUpdateJSONRequestBody defines body for CircuitsProviderNetworksPartialUpdate for application/json ContentType.
type CircuitsProviderNetworksPartialUpdateJSONRequestBody CircuitsProviderNetworksPartialUpdateJSONBody

// CircuitsProviderNetworksUpdateJSONRequestBody defines body for CircuitsProviderNetworksUpdate for application/json ContentType.
type CircuitsProviderNetworksUpdateJSONRequestBody CircuitsProviderNetworksUpdateJSONBody

// CircuitsProvidersBulkPartialUpdateJSONRequestBody defines body for CircuitsProvidersBulkPartialUpdate for application/json ContentType.
type CircuitsProvidersBulkPartialUpdateJSONRequestBody CircuitsProvidersBulkPartialUpdateJSONBody

// CircuitsProvidersCreateJSONRequestBody defines body for CircuitsProvidersCreate for application/json ContentType.
type CircuitsProvidersCreateJSONRequestBody CircuitsProvidersCreateJSONBody

// CircuitsProvidersBulkUpdateJSONRequestBody defines body for CircuitsProvidersBulkUpdate for application/json ContentType.
type CircuitsProvidersBulkUpdateJSONRequestBody CircuitsProvidersBulkUpdateJSONBody

// CircuitsProvidersPartialUpdateJSONRequestBody defines body for CircuitsProvidersPartialUpdate for application/json ContentType.
type CircuitsProvidersPartialUpdateJSONRequestBody CircuitsProvidersPartialUpdateJSONBody

// CircuitsProvidersUpdateJSONRequestBody defines body for CircuitsProvidersUpdate for application/json ContentType.
type CircuitsProvidersUpdateJSONRequestBody CircuitsProvidersUpdateJSONBody

// DcimCablesBulkPartialUpdateJSONRequestBody defines body for DcimCablesBulkPartialUpdate for application/json ContentType.
type DcimCablesBulkPartialUpdateJSONRequestBody DcimCablesBulkPartialUpdateJSONBody

// DcimCablesCreateJSONRequestBody defines body for DcimCablesCreate for application/json ContentType.
type DcimCablesCreateJSONRequestBody DcimCablesCreateJSONBody

// DcimCablesBulkUpdateJSONRequestBody defines body for DcimCablesBulkUpdate for application/json ContentType.
type DcimCablesBulkUpdateJSONRequestBody DcimCablesBulkUpdateJSONBody

// DcimCablesPartialUpdateJSONRequestBody defines body for DcimCablesPartialUpdate for application/json ContentType.
type DcimCablesPartialUpdateJSONRequestBody DcimCablesPartialUpdateJSONBody

// DcimCablesUpdateJSONRequestBody defines body for DcimCablesUpdate for application/json ContentType.
type DcimCablesUpdateJSONRequestBody DcimCablesUpdateJSONBody

// DcimConsolePortTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimConsolePortTemplatesBulkPartialUpdate for application/json ContentType.
type DcimConsolePortTemplatesBulkPartialUpdateJSONRequestBody DcimConsolePortTemplatesBulkPartialUpdateJSONBody

// DcimConsolePortTemplatesCreateJSONRequestBody defines body for DcimConsolePortTemplatesCreate for application/json ContentType.
type DcimConsolePortTemplatesCreateJSONRequestBody DcimConsolePortTemplatesCreateJSONBody

// DcimConsolePortTemplatesBulkUpdateJSONRequestBody defines body for DcimConsolePortTemplatesBulkUpdate for application/json ContentType.
type DcimConsolePortTemplatesBulkUpdateJSONRequestBody DcimConsolePortTemplatesBulkUpdateJSONBody

// DcimConsolePortTemplatesPartialUpdateJSONRequestBody defines body for DcimConsolePortTemplatesPartialUpdate for application/json ContentType.
type DcimConsolePortTemplatesPartialUpdateJSONRequestBody DcimConsolePortTemplatesPartialUpdateJSONBody

// DcimConsolePortTemplatesUpdateJSONRequestBody defines body for DcimConsolePortTemplatesUpdate for application/json ContentType.
type DcimConsolePortTemplatesUpdateJSONRequestBody DcimConsolePortTemplatesUpdateJSONBody

// DcimConsolePortsBulkPartialUpdateJSONRequestBody defines body for DcimConsolePortsBulkPartialUpdate for application/json ContentType.
type DcimConsolePortsBulkPartialUpdateJSONRequestBody DcimConsolePortsBulkPartialUpdateJSONBody

// DcimConsolePortsCreateJSONRequestBody defines body for DcimConsolePortsCreate for application/json ContentType.
type DcimConsolePortsCreateJSONRequestBody DcimConsolePortsCreateJSONBody

// DcimConsolePortsBulkUpdateJSONRequestBody defines body for DcimConsolePortsBulkUpdate for application/json ContentType.
type DcimConsolePortsBulkUpdateJSONRequestBody DcimConsolePortsBulkUpdateJSONBody

// DcimConsolePortsPartialUpdateJSONRequestBody defines body for DcimConsolePortsPartialUpdate for application/json ContentType.
type DcimConsolePortsPartialUpdateJSONRequestBody DcimConsolePortsPartialUpdateJSONBody

// DcimConsolePortsUpdateJSONRequestBody defines body for DcimConsolePortsUpdate for application/json ContentType.
type DcimConsolePortsUpdateJSONRequestBody DcimConsolePortsUpdateJSONBody

// DcimConsoleServerPortTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimConsoleServerPortTemplatesBulkPartialUpdate for application/json ContentType.
type DcimConsoleServerPortTemplatesBulkPartialUpdateJSONRequestBody DcimConsoleServerPortTemplatesBulkPartialUpdateJSONBody

// DcimConsoleServerPortTemplatesCreateJSONRequestBody defines body for DcimConsoleServerPortTemplatesCreate for application/json ContentType.
type DcimConsoleServerPortTemplatesCreateJSONRequestBody DcimConsoleServerPortTemplatesCreateJSONBody

// DcimConsoleServerPortTemplatesBulkUpdateJSONRequestBody defines body for DcimConsoleServerPortTemplatesBulkUpdate for application/json ContentType.
type DcimConsoleServerPortTemplatesBulkUpdateJSONRequestBody DcimConsoleServerPortTemplatesBulkUpdateJSONBody

// DcimConsoleServerPortTemplatesPartialUpdateJSONRequestBody defines body for DcimConsoleServerPortTemplatesPartialUpdate for application/json ContentType.
type DcimConsoleServerPortTemplatesPartialUpdateJSONRequestBody DcimConsoleServerPortTemplatesPartialUpdateJSONBody

// DcimConsoleServerPortTemplatesUpdateJSONRequestBody defines body for DcimConsoleServerPortTemplatesUpdate for application/json ContentType.
type DcimConsoleServerPortTemplatesUpdateJSONRequestBody DcimConsoleServerPortTemplatesUpdateJSONBody

// DcimConsoleServerPortsBulkPartialUpdateJSONRequestBody defines body for DcimConsoleServerPortsBulkPartialUpdate for application/json ContentType.
type DcimConsoleServerPortsBulkPartialUpdateJSONRequestBody DcimConsoleServerPortsBulkPartialUpdateJSONBody

// DcimConsoleServerPortsCreateJSONRequestBody defines body for DcimConsoleServerPortsCreate for application/json ContentType.
type DcimConsoleServerPortsCreateJSONRequestBody DcimConsoleServerPortsCreateJSONBody

// DcimConsoleServerPortsBulkUpdateJSONRequestBody defines body for DcimConsoleServerPortsBulkUpdate for application/json ContentType.
type DcimConsoleServerPortsBulkUpdateJSONRequestBody DcimConsoleServerPortsBulkUpdateJSONBody

// DcimConsoleServerPortsPartialUpdateJSONRequestBody defines body for DcimConsoleServerPortsPartialUpdate for application/json ContentType.
type DcimConsoleServerPortsPartialUpdateJSONRequestBody DcimConsoleServerPortsPartialUpdateJSONBody

// DcimConsoleServerPortsUpdateJSONRequestBody defines body for DcimConsoleServerPortsUpdate for application/json ContentType.
type DcimConsoleServerPortsUpdateJSONRequestBody DcimConsoleServerPortsUpdateJSONBody

// DcimDeviceBayTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimDeviceBayTemplatesBulkPartialUpdate for application/json ContentType.
type DcimDeviceBayTemplatesBulkPartialUpdateJSONRequestBody DcimDeviceBayTemplatesBulkPartialUpdateJSONBody

// DcimDeviceBayTemplatesCreateJSONRequestBody defines body for DcimDeviceBayTemplatesCreate for application/json ContentType.
type DcimDeviceBayTemplatesCreateJSONRequestBody DcimDeviceBayTemplatesCreateJSONBody

// DcimDeviceBayTemplatesBulkUpdateJSONRequestBody defines body for DcimDeviceBayTemplatesBulkUpdate for application/json ContentType.
type DcimDeviceBayTemplatesBulkUpdateJSONRequestBody DcimDeviceBayTemplatesBulkUpdateJSONBody

// DcimDeviceBayTemplatesPartialUpdateJSONRequestBody defines body for DcimDeviceBayTemplatesPartialUpdate for application/json ContentType.
type DcimDeviceBayTemplatesPartialUpdateJSONRequestBody DcimDeviceBayTemplatesPartialUpdateJSONBody

// DcimDeviceBayTemplatesUpdateJSONRequestBody defines body for DcimDeviceBayTemplatesUpdate for application/json ContentType.
type DcimDeviceBayTemplatesUpdateJSONRequestBody DcimDeviceBayTemplatesUpdateJSONBody

// DcimDeviceBaysBulkPartialUpdateJSONRequestBody defines body for DcimDeviceBaysBulkPartialUpdate for application/json ContentType.
type DcimDeviceBaysBulkPartialUpdateJSONRequestBody DcimDeviceBaysBulkPartialUpdateJSONBody

// DcimDeviceBaysCreateJSONRequestBody defines body for DcimDeviceBaysCreate for application/json ContentType.
type DcimDeviceBaysCreateJSONRequestBody DcimDeviceBaysCreateJSONBody

// DcimDeviceBaysBulkUpdateJSONRequestBody defines body for DcimDeviceBaysBulkUpdate for application/json ContentType.
type DcimDeviceBaysBulkUpdateJSONRequestBody DcimDeviceBaysBulkUpdateJSONBody

// DcimDeviceBaysPartialUpdateJSONRequestBody defines body for DcimDeviceBaysPartialUpdate for application/json ContentType.
type DcimDeviceBaysPartialUpdateJSONRequestBody DcimDeviceBaysPartialUpdateJSONBody

// DcimDeviceBaysUpdateJSONRequestBody defines body for DcimDeviceBaysUpdate for application/json ContentType.
type DcimDeviceBaysUpdateJSONRequestBody DcimDeviceBaysUpdateJSONBody

// DcimDeviceRolesBulkPartialUpdateJSONRequestBody defines body for DcimDeviceRolesBulkPartialUpdate for application/json ContentType.
type DcimDeviceRolesBulkPartialUpdateJSONRequestBody DcimDeviceRolesBulkPartialUpdateJSONBody

// DcimDeviceRolesCreateJSONRequestBody defines body for DcimDeviceRolesCreate for application/json ContentType.
type DcimDeviceRolesCreateJSONRequestBody DcimDeviceRolesCreateJSONBody

// DcimDeviceRolesBulkUpdateJSONRequestBody defines body for DcimDeviceRolesBulkUpdate for application/json ContentType.
type DcimDeviceRolesBulkUpdateJSONRequestBody DcimDeviceRolesBulkUpdateJSONBody

// DcimDeviceRolesPartialUpdateJSONRequestBody defines body for DcimDeviceRolesPartialUpdate for application/json ContentType.
type DcimDeviceRolesPartialUpdateJSONRequestBody DcimDeviceRolesPartialUpdateJSONBody

// DcimDeviceRolesUpdateJSONRequestBody defines body for DcimDeviceRolesUpdate for application/json ContentType.
type DcimDeviceRolesUpdateJSONRequestBody DcimDeviceRolesUpdateJSONBody

// DcimDeviceTypesBulkPartialUpdateJSONRequestBody defines body for DcimDeviceTypesBulkPartialUpdate for application/json ContentType.
type DcimDeviceTypesBulkPartialUpdateJSONRequestBody DcimDeviceTypesBulkPartialUpdateJSONBody

// DcimDeviceTypesCreateJSONRequestBody defines body for DcimDeviceTypesCreate for application/json ContentType.
type DcimDeviceTypesCreateJSONRequestBody DcimDeviceTypesCreateJSONBody

// DcimDeviceTypesBulkUpdateJSONRequestBody defines body for DcimDeviceTypesBulkUpdate for application/json ContentType.
type DcimDeviceTypesBulkUpdateJSONRequestBody DcimDeviceTypesBulkUpdateJSONBody

// DcimDeviceTypesPartialUpdateJSONRequestBody defines body for DcimDeviceTypesPartialUpdate for application/json ContentType.
type DcimDeviceTypesPartialUpdateJSONRequestBody DcimDeviceTypesPartialUpdateJSONBody

// DcimDeviceTypesUpdateJSONRequestBody defines body for DcimDeviceTypesUpdate for application/json ContentType.
type DcimDeviceTypesUpdateJSONRequestBody DcimDeviceTypesUpdateJSONBody

// DcimDevicesBulkPartialUpdateJSONRequestBody defines body for DcimDevicesBulkPartialUpdate for application/json ContentType.
type DcimDevicesBulkPartialUpdateJSONRequestBody DcimDevicesBulkPartialUpdateJSONBody

// DcimDevicesCreateJSONRequestBody defines body for DcimDevicesCreate for application/json ContentType.
type DcimDevicesCreateJSONRequestBody DcimDevicesCreateJSONBody

// DcimDevicesBulkUpdateJSONRequestBody defines body for DcimDevicesBulkUpdate for application/json ContentType.
type DcimDevicesBulkUpdateJSONRequestBody DcimDevicesBulkUpdateJSONBody

// DcimDevicesPartialUpdateJSONRequestBody defines body for DcimDevicesPartialUpdate for application/json ContentType.
type DcimDevicesPartialUpdateJSONRequestBody DcimDevicesPartialUpdateJSONBody

// DcimDevicesUpdateJSONRequestBody defines body for DcimDevicesUpdate for application/json ContentType.
type DcimDevicesUpdateJSONRequestBody DcimDevicesUpdateJSONBody

// DcimFrontPortTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimFrontPortTemplatesBulkPartialUpdate for application/json ContentType.
type DcimFrontPortTemplatesBulkPartialUpdateJSONRequestBody DcimFrontPortTemplatesBulkPartialUpdateJSONBody

// DcimFrontPortTemplatesCreateJSONRequestBody defines body for DcimFrontPortTemplatesCreate for application/json ContentType.
type DcimFrontPortTemplatesCreateJSONRequestBody DcimFrontPortTemplatesCreateJSONBody

// DcimFrontPortTemplatesBulkUpdateJSONRequestBody defines body for DcimFrontPortTemplatesBulkUpdate for application/json ContentType.
type DcimFrontPortTemplatesBulkUpdateJSONRequestBody DcimFrontPortTemplatesBulkUpdateJSONBody

// DcimFrontPortTemplatesPartialUpdateJSONRequestBody defines body for DcimFrontPortTemplatesPartialUpdate for application/json ContentType.
type DcimFrontPortTemplatesPartialUpdateJSONRequestBody DcimFrontPortTemplatesPartialUpdateJSONBody

// DcimFrontPortTemplatesUpdateJSONRequestBody defines body for DcimFrontPortTemplatesUpdate for application/json ContentType.
type DcimFrontPortTemplatesUpdateJSONRequestBody DcimFrontPortTemplatesUpdateJSONBody

// DcimFrontPortsBulkPartialUpdateJSONRequestBody defines body for DcimFrontPortsBulkPartialUpdate for application/json ContentType.
type DcimFrontPortsBulkPartialUpdateJSONRequestBody DcimFrontPortsBulkPartialUpdateJSONBody

// DcimFrontPortsCreateJSONRequestBody defines body for DcimFrontPortsCreate for application/json ContentType.
type DcimFrontPortsCreateJSONRequestBody DcimFrontPortsCreateJSONBody

// DcimFrontPortsBulkUpdateJSONRequestBody defines body for DcimFrontPortsBulkUpdate for application/json ContentType.
type DcimFrontPortsBulkUpdateJSONRequestBody DcimFrontPortsBulkUpdateJSONBody

// DcimFrontPortsPartialUpdateJSONRequestBody defines body for DcimFrontPortsPartialUpdate for application/json ContentType.
type DcimFrontPortsPartialUpdateJSONRequestBody DcimFrontPortsPartialUpdateJSONBody

// DcimFrontPortsUpdateJSONRequestBody defines body for DcimFrontPortsUpdate for application/json ContentType.
type DcimFrontPortsUpdateJSONRequestBody DcimFrontPortsUpdateJSONBody

// DcimInterfaceTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimInterfaceTemplatesBulkPartialUpdate for application/json ContentType.
type DcimInterfaceTemplatesBulkPartialUpdateJSONRequestBody DcimInterfaceTemplatesBulkPartialUpdateJSONBody

// DcimInterfaceTemplatesCreateJSONRequestBody defines body for DcimInterfaceTemplatesCreate for application/json ContentType.
type DcimInterfaceTemplatesCreateJSONRequestBody DcimInterfaceTemplatesCreateJSONBody

// DcimInterfaceTemplatesBulkUpdateJSONRequestBody defines body for DcimInterfaceTemplatesBulkUpdate for application/json ContentType.
type DcimInterfaceTemplatesBulkUpdateJSONRequestBody DcimInterfaceTemplatesBulkUpdateJSONBody

// DcimInterfaceTemplatesPartialUpdateJSONRequestBody defines body for DcimInterfaceTemplatesPartialUpdate for application/json ContentType.
type DcimInterfaceTemplatesPartialUpdateJSONRequestBody DcimInterfaceTemplatesPartialUpdateJSONBody

// DcimInterfaceTemplatesUpdateJSONRequestBody defines body for DcimInterfaceTemplatesUpdate for application/json ContentType.
type DcimInterfaceTemplatesUpdateJSONRequestBody DcimInterfaceTemplatesUpdateJSONBody

// DcimInterfacesBulkPartialUpdateJSONRequestBody defines body for DcimInterfacesBulkPartialUpdate for application/json ContentType.
type DcimInterfacesBulkPartialUpdateJSONRequestBody DcimInterfacesBulkPartialUpdateJSONBody

// DcimInterfacesCreateJSONRequestBody defines body for DcimInterfacesCreate for application/json ContentType.
type DcimInterfacesCreateJSONRequestBody DcimInterfacesCreateJSONBody

// DcimInterfacesBulkUpdateJSONRequestBody defines body for DcimInterfacesBulkUpdate for application/json ContentType.
type DcimInterfacesBulkUpdateJSONRequestBody DcimInterfacesBulkUpdateJSONBody

// DcimInterfacesPartialUpdateJSONRequestBody defines body for DcimInterfacesPartialUpdate for application/json ContentType.
type DcimInterfacesPartialUpdateJSONRequestBody DcimInterfacesPartialUpdateJSONBody

// DcimInterfacesUpdateJSONRequestBody defines body for DcimInterfacesUpdate for application/json ContentType.
type DcimInterfacesUpdateJSONRequestBody DcimInterfacesUpdateJSONBody

// DcimInventoryItemsBulkPartialUpdateJSONRequestBody defines body for DcimInventoryItemsBulkPartialUpdate for application/json ContentType.
type DcimInventoryItemsBulkPartialUpdateJSONRequestBody DcimInventoryItemsBulkPartialUpdateJSONBody

// DcimInventoryItemsCreateJSONRequestBody defines body for DcimInventoryItemsCreate for application/json ContentType.
type DcimInventoryItemsCreateJSONRequestBody DcimInventoryItemsCreateJSONBody

// DcimInventoryItemsBulkUpdateJSONRequestBody defines body for DcimInventoryItemsBulkUpdate for application/json ContentType.
type DcimInventoryItemsBulkUpdateJSONRequestBody DcimInventoryItemsBulkUpdateJSONBody

// DcimInventoryItemsPartialUpdateJSONRequestBody defines body for DcimInventoryItemsPartialUpdate for application/json ContentType.
type DcimInventoryItemsPartialUpdateJSONRequestBody DcimInventoryItemsPartialUpdateJSONBody

// DcimInventoryItemsUpdateJSONRequestBody defines body for DcimInventoryItemsUpdate for application/json ContentType.
type DcimInventoryItemsUpdateJSONRequestBody DcimInventoryItemsUpdateJSONBody

// DcimManufacturersBulkPartialUpdateJSONRequestBody defines body for DcimManufacturersBulkPartialUpdate for application/json ContentType.
type DcimManufacturersBulkPartialUpdateJSONRequestBody DcimManufacturersBulkPartialUpdateJSONBody

// DcimManufacturersCreateJSONRequestBody defines body for DcimManufacturersCreate for application/json ContentType.
type DcimManufacturersCreateJSONRequestBody DcimManufacturersCreateJSONBody

// DcimManufacturersBulkUpdateJSONRequestBody defines body for DcimManufacturersBulkUpdate for application/json ContentType.
type DcimManufacturersBulkUpdateJSONRequestBody DcimManufacturersBulkUpdateJSONBody

// DcimManufacturersPartialUpdateJSONRequestBody defines body for DcimManufacturersPartialUpdate for application/json ContentType.
type DcimManufacturersPartialUpdateJSONRequestBody DcimManufacturersPartialUpdateJSONBody

// DcimManufacturersUpdateJSONRequestBody defines body for DcimManufacturersUpdate for application/json ContentType.
type DcimManufacturersUpdateJSONRequestBody DcimManufacturersUpdateJSONBody

// DcimPlatformsBulkPartialUpdateJSONRequestBody defines body for DcimPlatformsBulkPartialUpdate for application/json ContentType.
type DcimPlatformsBulkPartialUpdateJSONRequestBody DcimPlatformsBulkPartialUpdateJSONBody

// DcimPlatformsCreateJSONRequestBody defines body for DcimPlatformsCreate for application/json ContentType.
type DcimPlatformsCreateJSONRequestBody DcimPlatformsCreateJSONBody

// DcimPlatformsBulkUpdateJSONRequestBody defines body for DcimPlatformsBulkUpdate for application/json ContentType.
type DcimPlatformsBulkUpdateJSONRequestBody DcimPlatformsBulkUpdateJSONBody

// DcimPlatformsPartialUpdateJSONRequestBody defines body for DcimPlatformsPartialUpdate for application/json ContentType.
type DcimPlatformsPartialUpdateJSONRequestBody DcimPlatformsPartialUpdateJSONBody

// DcimPlatformsUpdateJSONRequestBody defines body for DcimPlatformsUpdate for application/json ContentType.
type DcimPlatformsUpdateJSONRequestBody DcimPlatformsUpdateJSONBody

// DcimPowerFeedsBulkPartialUpdateJSONRequestBody defines body for DcimPowerFeedsBulkPartialUpdate for application/json ContentType.
type DcimPowerFeedsBulkPartialUpdateJSONRequestBody DcimPowerFeedsBulkPartialUpdateJSONBody

// DcimPowerFeedsCreateJSONRequestBody defines body for DcimPowerFeedsCreate for application/json ContentType.
type DcimPowerFeedsCreateJSONRequestBody DcimPowerFeedsCreateJSONBody

// DcimPowerFeedsBulkUpdateJSONRequestBody defines body for DcimPowerFeedsBulkUpdate for application/json ContentType.
type DcimPowerFeedsBulkUpdateJSONRequestBody DcimPowerFeedsBulkUpdateJSONBody

// DcimPowerFeedsPartialUpdateJSONRequestBody defines body for DcimPowerFeedsPartialUpdate for application/json ContentType.
type DcimPowerFeedsPartialUpdateJSONRequestBody DcimPowerFeedsPartialUpdateJSONBody

// DcimPowerFeedsUpdateJSONRequestBody defines body for DcimPowerFeedsUpdate for application/json ContentType.
type DcimPowerFeedsUpdateJSONRequestBody DcimPowerFeedsUpdateJSONBody

// DcimPowerOutletTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimPowerOutletTemplatesBulkPartialUpdate for application/json ContentType.
type DcimPowerOutletTemplatesBulkPartialUpdateJSONRequestBody DcimPowerOutletTemplatesBulkPartialUpdateJSONBody

// DcimPowerOutletTemplatesCreateJSONRequestBody defines body for DcimPowerOutletTemplatesCreate for application/json ContentType.
type DcimPowerOutletTemplatesCreateJSONRequestBody DcimPowerOutletTemplatesCreateJSONBody

// DcimPowerOutletTemplatesBulkUpdateJSONRequestBody defines body for DcimPowerOutletTemplatesBulkUpdate for application/json ContentType.
type DcimPowerOutletTemplatesBulkUpdateJSONRequestBody DcimPowerOutletTemplatesBulkUpdateJSONBody

// DcimPowerOutletTemplatesPartialUpdateJSONRequestBody defines body for DcimPowerOutletTemplatesPartialUpdate for application/json ContentType.
type DcimPowerOutletTemplatesPartialUpdateJSONRequestBody DcimPowerOutletTemplatesPartialUpdateJSONBody

// DcimPowerOutletTemplatesUpdateJSONRequestBody defines body for DcimPowerOutletTemplatesUpdate for application/json ContentType.
type DcimPowerOutletTemplatesUpdateJSONRequestBody DcimPowerOutletTemplatesUpdateJSONBody

// DcimPowerOutletsBulkPartialUpdateJSONRequestBody defines body for DcimPowerOutletsBulkPartialUpdate for application/json ContentType.
type DcimPowerOutletsBulkPartialUpdateJSONRequestBody DcimPowerOutletsBulkPartialUpdateJSONBody

// DcimPowerOutletsCreateJSONRequestBody defines body for DcimPowerOutletsCreate for application/json ContentType.
type DcimPowerOutletsCreateJSONRequestBody DcimPowerOutletsCreateJSONBody

// DcimPowerOutletsBulkUpdateJSONRequestBody defines body for DcimPowerOutletsBulkUpdate for application/json ContentType.
type DcimPowerOutletsBulkUpdateJSONRequestBody DcimPowerOutletsBulkUpdateJSONBody

// DcimPowerOutletsPartialUpdateJSONRequestBody defines body for DcimPowerOutletsPartialUpdate for application/json ContentType.
type DcimPowerOutletsPartialUpdateJSONRequestBody DcimPowerOutletsPartialUpdateJSONBody

// DcimPowerOutletsUpdateJSONRequestBody defines body for DcimPowerOutletsUpdate for application/json ContentType.
type DcimPowerOutletsUpdateJSONRequestBody DcimPowerOutletsUpdateJSONBody

// DcimPowerPanelsBulkPartialUpdateJSONRequestBody defines body for DcimPowerPanelsBulkPartialUpdate for application/json ContentType.
type DcimPowerPanelsBulkPartialUpdateJSONRequestBody DcimPowerPanelsBulkPartialUpdateJSONBody

// DcimPowerPanelsCreateJSONRequestBody defines body for DcimPowerPanelsCreate for application/json ContentType.
type DcimPowerPanelsCreateJSONRequestBody DcimPowerPanelsCreateJSONBody

// DcimPowerPanelsBulkUpdateJSONRequestBody defines body for DcimPowerPanelsBulkUpdate for application/json ContentType.
type DcimPowerPanelsBulkUpdateJSONRequestBody DcimPowerPanelsBulkUpdateJSONBody

// DcimPowerPanelsPartialUpdateJSONRequestBody defines body for DcimPowerPanelsPartialUpdate for application/json ContentType.
type DcimPowerPanelsPartialUpdateJSONRequestBody DcimPowerPanelsPartialUpdateJSONBody

// DcimPowerPanelsUpdateJSONRequestBody defines body for DcimPowerPanelsUpdate for application/json ContentType.
type DcimPowerPanelsUpdateJSONRequestBody DcimPowerPanelsUpdateJSONBody

// DcimPowerPortTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimPowerPortTemplatesBulkPartialUpdate for application/json ContentType.
type DcimPowerPortTemplatesBulkPartialUpdateJSONRequestBody DcimPowerPortTemplatesBulkPartialUpdateJSONBody

// DcimPowerPortTemplatesCreateJSONRequestBody defines body for DcimPowerPortTemplatesCreate for application/json ContentType.
type DcimPowerPortTemplatesCreateJSONRequestBody DcimPowerPortTemplatesCreateJSONBody

// DcimPowerPortTemplatesBulkUpdateJSONRequestBody defines body for DcimPowerPortTemplatesBulkUpdate for application/json ContentType.
type DcimPowerPortTemplatesBulkUpdateJSONRequestBody DcimPowerPortTemplatesBulkUpdateJSONBody

// DcimPowerPortTemplatesPartialUpdateJSONRequestBody defines body for DcimPowerPortTemplatesPartialUpdate for application/json ContentType.
type DcimPowerPortTemplatesPartialUpdateJSONRequestBody DcimPowerPortTemplatesPartialUpdateJSONBody

// DcimPowerPortTemplatesUpdateJSONRequestBody defines body for DcimPowerPortTemplatesUpdate for application/json ContentType.
type DcimPowerPortTemplatesUpdateJSONRequestBody DcimPowerPortTemplatesUpdateJSONBody

// DcimPowerPortsBulkPartialUpdateJSONRequestBody defines body for DcimPowerPortsBulkPartialUpdate for application/json ContentType.
type DcimPowerPortsBulkPartialUpdateJSONRequestBody DcimPowerPortsBulkPartialUpdateJSONBody

// DcimPowerPortsCreateJSONRequestBody defines body for DcimPowerPortsCreate for application/json ContentType.
type DcimPowerPortsCreateJSONRequestBody DcimPowerPortsCreateJSONBody

// DcimPowerPortsBulkUpdateJSONRequestBody defines body for DcimPowerPortsBulkUpdate for application/json ContentType.
type DcimPowerPortsBulkUpdateJSONRequestBody DcimPowerPortsBulkUpdateJSONBody

// DcimPowerPortsPartialUpdateJSONRequestBody defines body for DcimPowerPortsPartialUpdate for application/json ContentType.
type DcimPowerPortsPartialUpdateJSONRequestBody DcimPowerPortsPartialUpdateJSONBody

// DcimPowerPortsUpdateJSONRequestBody defines body for DcimPowerPortsUpdate for application/json ContentType.
type DcimPowerPortsUpdateJSONRequestBody DcimPowerPortsUpdateJSONBody

// DcimRackGroupsBulkPartialUpdateJSONRequestBody defines body for DcimRackGroupsBulkPartialUpdate for application/json ContentType.
type DcimRackGroupsBulkPartialUpdateJSONRequestBody DcimRackGroupsBulkPartialUpdateJSONBody

// DcimRackGroupsCreateJSONRequestBody defines body for DcimRackGroupsCreate for application/json ContentType.
type DcimRackGroupsCreateJSONRequestBody DcimRackGroupsCreateJSONBody

// DcimRackGroupsBulkUpdateJSONRequestBody defines body for DcimRackGroupsBulkUpdate for application/json ContentType.
type DcimRackGroupsBulkUpdateJSONRequestBody DcimRackGroupsBulkUpdateJSONBody

// DcimRackGroupsPartialUpdateJSONRequestBody defines body for DcimRackGroupsPartialUpdate for application/json ContentType.
type DcimRackGroupsPartialUpdateJSONRequestBody DcimRackGroupsPartialUpdateJSONBody

// DcimRackGroupsUpdateJSONRequestBody defines body for DcimRackGroupsUpdate for application/json ContentType.
type DcimRackGroupsUpdateJSONRequestBody DcimRackGroupsUpdateJSONBody

// DcimRackReservationsBulkPartialUpdateJSONRequestBody defines body for DcimRackReservationsBulkPartialUpdate for application/json ContentType.
type DcimRackReservationsBulkPartialUpdateJSONRequestBody DcimRackReservationsBulkPartialUpdateJSONBody

// DcimRackReservationsCreateJSONRequestBody defines body for DcimRackReservationsCreate for application/json ContentType.
type DcimRackReservationsCreateJSONRequestBody DcimRackReservationsCreateJSONBody

// DcimRackReservationsBulkUpdateJSONRequestBody defines body for DcimRackReservationsBulkUpdate for application/json ContentType.
type DcimRackReservationsBulkUpdateJSONRequestBody DcimRackReservationsBulkUpdateJSONBody

// DcimRackReservationsPartialUpdateJSONRequestBody defines body for DcimRackReservationsPartialUpdate for application/json ContentType.
type DcimRackReservationsPartialUpdateJSONRequestBody DcimRackReservationsPartialUpdateJSONBody

// DcimRackReservationsUpdateJSONRequestBody defines body for DcimRackReservationsUpdate for application/json ContentType.
type DcimRackReservationsUpdateJSONRequestBody DcimRackReservationsUpdateJSONBody

// DcimRackRolesBulkPartialUpdateJSONRequestBody defines body for DcimRackRolesBulkPartialUpdate for application/json ContentType.
type DcimRackRolesBulkPartialUpdateJSONRequestBody DcimRackRolesBulkPartialUpdateJSONBody

// DcimRackRolesCreateJSONRequestBody defines body for DcimRackRolesCreate for application/json ContentType.
type DcimRackRolesCreateJSONRequestBody DcimRackRolesCreateJSONBody

// DcimRackRolesBulkUpdateJSONRequestBody defines body for DcimRackRolesBulkUpdate for application/json ContentType.
type DcimRackRolesBulkUpdateJSONRequestBody DcimRackRolesBulkUpdateJSONBody

// DcimRackRolesPartialUpdateJSONRequestBody defines body for DcimRackRolesPartialUpdate for application/json ContentType.
type DcimRackRolesPartialUpdateJSONRequestBody DcimRackRolesPartialUpdateJSONBody

// DcimRackRolesUpdateJSONRequestBody defines body for DcimRackRolesUpdate for application/json ContentType.
type DcimRackRolesUpdateJSONRequestBody DcimRackRolesUpdateJSONBody

// DcimRacksBulkPartialUpdateJSONRequestBody defines body for DcimRacksBulkPartialUpdate for application/json ContentType.
type DcimRacksBulkPartialUpdateJSONRequestBody DcimRacksBulkPartialUpdateJSONBody

// DcimRacksCreateJSONRequestBody defines body for DcimRacksCreate for application/json ContentType.
type DcimRacksCreateJSONRequestBody DcimRacksCreateJSONBody

// DcimRacksBulkUpdateJSONRequestBody defines body for DcimRacksBulkUpdate for application/json ContentType.
type DcimRacksBulkUpdateJSONRequestBody DcimRacksBulkUpdateJSONBody

// DcimRacksPartialUpdateJSONRequestBody defines body for DcimRacksPartialUpdate for application/json ContentType.
type DcimRacksPartialUpdateJSONRequestBody DcimRacksPartialUpdateJSONBody

// DcimRacksUpdateJSONRequestBody defines body for DcimRacksUpdate for application/json ContentType.
type DcimRacksUpdateJSONRequestBody DcimRacksUpdateJSONBody

// DcimRearPortTemplatesBulkPartialUpdateJSONRequestBody defines body for DcimRearPortTemplatesBulkPartialUpdate for application/json ContentType.
type DcimRearPortTemplatesBulkPartialUpdateJSONRequestBody DcimRearPortTemplatesBulkPartialUpdateJSONBody

// DcimRearPortTemplatesCreateJSONRequestBody defines body for DcimRearPortTemplatesCreate for application/json ContentType.
type DcimRearPortTemplatesCreateJSONRequestBody DcimRearPortTemplatesCreateJSONBody

// DcimRearPortTemplatesBulkUpdateJSONRequestBody defines body for DcimRearPortTemplatesBulkUpdate for application/json ContentType.
type DcimRearPortTemplatesBulkUpdateJSONRequestBody DcimRearPortTemplatesBulkUpdateJSONBody

// DcimRearPortTemplatesPartialUpdateJSONRequestBody defines body for DcimRearPortTemplatesPartialUpdate for application/json ContentType.
type DcimRearPortTemplatesPartialUpdateJSONRequestBody DcimRearPortTemplatesPartialUpdateJSONBody

// DcimRearPortTemplatesUpdateJSONRequestBody defines body for DcimRearPortTemplatesUpdate for application/json ContentType.
type DcimRearPortTemplatesUpdateJSONRequestBody DcimRearPortTemplatesUpdateJSONBody

// DcimRearPortsBulkPartialUpdateJSONRequestBody defines body for DcimRearPortsBulkPartialUpdate for application/json ContentType.
type DcimRearPortsBulkPartialUpdateJSONRequestBody DcimRearPortsBulkPartialUpdateJSONBody

// DcimRearPortsCreateJSONRequestBody defines body for DcimRearPortsCreate for application/json ContentType.
type DcimRearPortsCreateJSONRequestBody DcimRearPortsCreateJSONBody

// DcimRearPortsBulkUpdateJSONRequestBody defines body for DcimRearPortsBulkUpdate for application/json ContentType.
type DcimRearPortsBulkUpdateJSONRequestBody DcimRearPortsBulkUpdateJSONBody

// DcimRearPortsPartialUpdateJSONRequestBody defines body for DcimRearPortsPartialUpdate for application/json ContentType.
type DcimRearPortsPartialUpdateJSONRequestBody DcimRearPortsPartialUpdateJSONBody

// DcimRearPortsUpdateJSONRequestBody defines body for DcimRearPortsUpdate for application/json ContentType.
type DcimRearPortsUpdateJSONRequestBody DcimRearPortsUpdateJSONBody

// DcimRegionsBulkPartialUpdateJSONRequestBody defines body for DcimRegionsBulkPartialUpdate for application/json ContentType.
type DcimRegionsBulkPartialUpdateJSONRequestBody DcimRegionsBulkPartialUpdateJSONBody

// DcimRegionsCreateJSONRequestBody defines body for DcimRegionsCreate for application/json ContentType.
type DcimRegionsCreateJSONRequestBody DcimRegionsCreateJSONBody

// DcimRegionsBulkUpdateJSONRequestBody defines body for DcimRegionsBulkUpdate for application/json ContentType.
type DcimRegionsBulkUpdateJSONRequestBody DcimRegionsBulkUpdateJSONBody

// DcimRegionsPartialUpdateJSONRequestBody defines body for DcimRegionsPartialUpdate for application/json ContentType.
type DcimRegionsPartialUpdateJSONRequestBody DcimRegionsPartialUpdateJSONBody

// DcimRegionsUpdateJSONRequestBody defines body for DcimRegionsUpdate for application/json ContentType.
type DcimRegionsUpdateJSONRequestBody DcimRegionsUpdateJSONBody

// DcimSitesBulkPartialUpdateJSONRequestBody defines body for DcimSitesBulkPartialUpdate for application/json ContentType.
type DcimSitesBulkPartialUpdateJSONRequestBody DcimSitesBulkPartialUpdateJSONBody

// DcimSitesCreateJSONRequestBody defines body for DcimSitesCreate for application/json ContentType.
type DcimSitesCreateJSONRequestBody DcimSitesCreateJSONBody

// DcimSitesBulkUpdateJSONRequestBody defines body for DcimSitesBulkUpdate for application/json ContentType.
type DcimSitesBulkUpdateJSONRequestBody DcimSitesBulkUpdateJSONBody

// DcimSitesPartialUpdateJSONRequestBody defines body for DcimSitesPartialUpdate for application/json ContentType.
type DcimSitesPartialUpdateJSONRequestBody DcimSitesPartialUpdateJSONBody

// DcimSitesUpdateJSONRequestBody defines body for DcimSitesUpdate for application/json ContentType.
type DcimSitesUpdateJSONRequestBody DcimSitesUpdateJSONBody

// DcimVirtualChassisBulkPartialUpdateJSONRequestBody defines body for DcimVirtualChassisBulkPartialUpdate for application/json ContentType.
type DcimVirtualChassisBulkPartialUpdateJSONRequestBody DcimVirtualChassisBulkPartialUpdateJSONBody

// DcimVirtualChassisCreateJSONRequestBody defines body for DcimVirtualChassisCreate for application/json ContentType.
type DcimVirtualChassisCreateJSONRequestBody DcimVirtualChassisCreateJSONBody

// DcimVirtualChassisBulkUpdateJSONRequestBody defines body for DcimVirtualChassisBulkUpdate for application/json ContentType.
type DcimVirtualChassisBulkUpdateJSONRequestBody DcimVirtualChassisBulkUpdateJSONBody

// DcimVirtualChassisPartialUpdateJSONRequestBody defines body for DcimVirtualChassisPartialUpdate for application/json ContentType.
type DcimVirtualChassisPartialUpdateJSONRequestBody DcimVirtualChassisPartialUpdateJSONBody

// DcimVirtualChassisUpdateJSONRequestBody defines body for DcimVirtualChassisUpdate for application/json ContentType.
type DcimVirtualChassisUpdateJSONRequestBody DcimVirtualChassisUpdateJSONBody

// ExtrasComputedFieldsBulkPartialUpdateJSONRequestBody defines body for ExtrasComputedFieldsBulkPartialUpdate for application/json ContentType.
type ExtrasComputedFieldsBulkPartialUpdateJSONRequestBody ExtrasComputedFieldsBulkPartialUpdateJSONBody

// ExtrasComputedFieldsCreateJSONRequestBody defines body for ExtrasComputedFieldsCreate for application/json ContentType.
type ExtrasComputedFieldsCreateJSONRequestBody ExtrasComputedFieldsCreateJSONBody

// ExtrasComputedFieldsBulkUpdateJSONRequestBody defines body for ExtrasComputedFieldsBulkUpdate for application/json ContentType.
type ExtrasComputedFieldsBulkUpdateJSONRequestBody ExtrasComputedFieldsBulkUpdateJSONBody

// ExtrasComputedFieldsPartialUpdateJSONRequestBody defines body for ExtrasComputedFieldsPartialUpdate for application/json ContentType.
type ExtrasComputedFieldsPartialUpdateJSONRequestBody ExtrasComputedFieldsPartialUpdateJSONBody

// ExtrasComputedFieldsUpdateJSONRequestBody defines body for ExtrasComputedFieldsUpdate for application/json ContentType.
type ExtrasComputedFieldsUpdateJSONRequestBody ExtrasComputedFieldsUpdateJSONBody

// ExtrasConfigContextSchemasBulkPartialUpdateJSONRequestBody defines body for ExtrasConfigContextSchemasBulkPartialUpdate for application/json ContentType.
type ExtrasConfigContextSchemasBulkPartialUpdateJSONRequestBody ExtrasConfigContextSchemasBulkPartialUpdateJSONBody

// ExtrasConfigContextSchemasCreateJSONRequestBody defines body for ExtrasConfigContextSchemasCreate for application/json ContentType.
type ExtrasConfigContextSchemasCreateJSONRequestBody ExtrasConfigContextSchemasCreateJSONBody

// ExtrasConfigContextSchemasBulkUpdateJSONRequestBody defines body for ExtrasConfigContextSchemasBulkUpdate for application/json ContentType.
type ExtrasConfigContextSchemasBulkUpdateJSONRequestBody ExtrasConfigContextSchemasBulkUpdateJSONBody

// ExtrasConfigContextSchemasPartialUpdateJSONRequestBody defines body for ExtrasConfigContextSchemasPartialUpdate for application/json ContentType.
type ExtrasConfigContextSchemasPartialUpdateJSONRequestBody ExtrasConfigContextSchemasPartialUpdateJSONBody

// ExtrasConfigContextSchemasUpdateJSONRequestBody defines body for ExtrasConfigContextSchemasUpdate for application/json ContentType.
type ExtrasConfigContextSchemasUpdateJSONRequestBody ExtrasConfigContextSchemasUpdateJSONBody

// ExtrasConfigContextsBulkPartialUpdateJSONRequestBody defines body for ExtrasConfigContextsBulkPartialUpdate for application/json ContentType.
type ExtrasConfigContextsBulkPartialUpdateJSONRequestBody ExtrasConfigContextsBulkPartialUpdateJSONBody

// ExtrasConfigContextsCreateJSONRequestBody defines body for ExtrasConfigContextsCreate for application/json ContentType.
type ExtrasConfigContextsCreateJSONRequestBody ExtrasConfigContextsCreateJSONBody

// ExtrasConfigContextsBulkUpdateJSONRequestBody defines body for ExtrasConfigContextsBulkUpdate for application/json ContentType.
type ExtrasConfigContextsBulkUpdateJSONRequestBody ExtrasConfigContextsBulkUpdateJSONBody

// ExtrasConfigContextsPartialUpdateJSONRequestBody defines body for ExtrasConfigContextsPartialUpdate for application/json ContentType.
type ExtrasConfigContextsPartialUpdateJSONRequestBody ExtrasConfigContextsPartialUpdateJSONBody

// ExtrasConfigContextsUpdateJSONRequestBody defines body for ExtrasConfigContextsUpdate for application/json ContentType.
type ExtrasConfigContextsUpdateJSONRequestBody ExtrasConfigContextsUpdateJSONBody

// ExtrasCustomFieldChoicesBulkPartialUpdateJSONRequestBody defines body for ExtrasCustomFieldChoicesBulkPartialUpdate for application/json ContentType.
type ExtrasCustomFieldChoicesBulkPartialUpdateJSONRequestBody ExtrasCustomFieldChoicesBulkPartialUpdateJSONBody

// ExtrasCustomFieldChoicesCreateJSONRequestBody defines body for ExtrasCustomFieldChoicesCreate for application/json ContentType.
type ExtrasCustomFieldChoicesCreateJSONRequestBody ExtrasCustomFieldChoicesCreateJSONBody

// ExtrasCustomFieldChoicesBulkUpdateJSONRequestBody defines body for ExtrasCustomFieldChoicesBulkUpdate for application/json ContentType.
type ExtrasCustomFieldChoicesBulkUpdateJSONRequestBody ExtrasCustomFieldChoicesBulkUpdateJSONBody

// ExtrasCustomFieldChoicesPartialUpdateJSONRequestBody defines body for ExtrasCustomFieldChoicesPartialUpdate for application/json ContentType.
type ExtrasCustomFieldChoicesPartialUpdateJSONRequestBody ExtrasCustomFieldChoicesPartialUpdateJSONBody

// ExtrasCustomFieldChoicesUpdateJSONRequestBody defines body for ExtrasCustomFieldChoicesUpdate for application/json ContentType.
type ExtrasCustomFieldChoicesUpdateJSONRequestBody ExtrasCustomFieldChoicesUpdateJSONBody

// ExtrasCustomFieldsBulkPartialUpdateJSONRequestBody defines body for ExtrasCustomFieldsBulkPartialUpdate for application/json ContentType.
type ExtrasCustomFieldsBulkPartialUpdateJSONRequestBody ExtrasCustomFieldsBulkPartialUpdateJSONBody

// ExtrasCustomFieldsCreateJSONRequestBody defines body for ExtrasCustomFieldsCreate for application/json ContentType.
type ExtrasCustomFieldsCreateJSONRequestBody ExtrasCustomFieldsCreateJSONBody

// ExtrasCustomFieldsBulkUpdateJSONRequestBody defines body for ExtrasCustomFieldsBulkUpdate for application/json ContentType.
type ExtrasCustomFieldsBulkUpdateJSONRequestBody ExtrasCustomFieldsBulkUpdateJSONBody

// ExtrasCustomFieldsPartialUpdateJSONRequestBody defines body for ExtrasCustomFieldsPartialUpdate for application/json ContentType.
type ExtrasCustomFieldsPartialUpdateJSONRequestBody ExtrasCustomFieldsPartialUpdateJSONBody

// ExtrasCustomFieldsUpdateJSONRequestBody defines body for ExtrasCustomFieldsUpdate for application/json ContentType.
type ExtrasCustomFieldsUpdateJSONRequestBody ExtrasCustomFieldsUpdateJSONBody

// ExtrasCustomLinksBulkPartialUpdateJSONRequestBody defines body for ExtrasCustomLinksBulkPartialUpdate for application/json ContentType.
type ExtrasCustomLinksBulkPartialUpdateJSONRequestBody ExtrasCustomLinksBulkPartialUpdateJSONBody

// ExtrasCustomLinksCreateJSONRequestBody defines body for ExtrasCustomLinksCreate for application/json ContentType.
type ExtrasCustomLinksCreateJSONRequestBody ExtrasCustomLinksCreateJSONBody

// ExtrasCustomLinksBulkUpdateJSONRequestBody defines body for ExtrasCustomLinksBulkUpdate for application/json ContentType.
type ExtrasCustomLinksBulkUpdateJSONRequestBody ExtrasCustomLinksBulkUpdateJSONBody

// ExtrasCustomLinksPartialUpdateJSONRequestBody defines body for ExtrasCustomLinksPartialUpdate for application/json ContentType.
type ExtrasCustomLinksPartialUpdateJSONRequestBody ExtrasCustomLinksPartialUpdateJSONBody

// ExtrasCustomLinksUpdateJSONRequestBody defines body for ExtrasCustomLinksUpdate for application/json ContentType.
type ExtrasCustomLinksUpdateJSONRequestBody ExtrasCustomLinksUpdateJSONBody

// ExtrasDynamicGroupsBulkPartialUpdateJSONRequestBody defines body for ExtrasDynamicGroupsBulkPartialUpdate for application/json ContentType.
type ExtrasDynamicGroupsBulkPartialUpdateJSONRequestBody ExtrasDynamicGroupsBulkPartialUpdateJSONBody

// ExtrasDynamicGroupsCreateJSONRequestBody defines body for ExtrasDynamicGroupsCreate for application/json ContentType.
type ExtrasDynamicGroupsCreateJSONRequestBody ExtrasDynamicGroupsCreateJSONBody

// ExtrasDynamicGroupsBulkUpdateJSONRequestBody defines body for ExtrasDynamicGroupsBulkUpdate for application/json ContentType.
type ExtrasDynamicGroupsBulkUpdateJSONRequestBody ExtrasDynamicGroupsBulkUpdateJSONBody

// ExtrasDynamicGroupsPartialUpdateJSONRequestBody defines body for ExtrasDynamicGroupsPartialUpdate for application/json ContentType.
type ExtrasDynamicGroupsPartialUpdateJSONRequestBody ExtrasDynamicGroupsPartialUpdateJSONBody

// ExtrasDynamicGroupsUpdateJSONRequestBody defines body for ExtrasDynamicGroupsUpdate for application/json ContentType.
type ExtrasDynamicGroupsUpdateJSONRequestBody ExtrasDynamicGroupsUpdateJSONBody

// ExtrasExportTemplatesBulkPartialUpdateJSONRequestBody defines body for ExtrasExportTemplatesBulkPartialUpdate for application/json ContentType.
type ExtrasExportTemplatesBulkPartialUpdateJSONRequestBody ExtrasExportTemplatesBulkPartialUpdateJSONBody

// ExtrasExportTemplatesCreateJSONRequestBody defines body for ExtrasExportTemplatesCreate for application/json ContentType.
type ExtrasExportTemplatesCreateJSONRequestBody ExtrasExportTemplatesCreateJSONBody

// ExtrasExportTemplatesBulkUpdateJSONRequestBody defines body for ExtrasExportTemplatesBulkUpdate for application/json ContentType.
type ExtrasExportTemplatesBulkUpdateJSONRequestBody ExtrasExportTemplatesBulkUpdateJSONBody

// ExtrasExportTemplatesPartialUpdateJSONRequestBody defines body for ExtrasExportTemplatesPartialUpdate for application/json ContentType.
type ExtrasExportTemplatesPartialUpdateJSONRequestBody ExtrasExportTemplatesPartialUpdateJSONBody

// ExtrasExportTemplatesUpdateJSONRequestBody defines body for ExtrasExportTemplatesUpdate for application/json ContentType.
type ExtrasExportTemplatesUpdateJSONRequestBody ExtrasExportTemplatesUpdateJSONBody

// ExtrasGitRepositoriesBulkPartialUpdateJSONRequestBody defines body for ExtrasGitRepositoriesBulkPartialUpdate for application/json ContentType.
type ExtrasGitRepositoriesBulkPartialUpdateJSONRequestBody ExtrasGitRepositoriesBulkPartialUpdateJSONBody

// ExtrasGitRepositoriesCreateJSONRequestBody defines body for ExtrasGitRepositoriesCreate for application/json ContentType.
type ExtrasGitRepositoriesCreateJSONRequestBody ExtrasGitRepositoriesCreateJSONBody

// ExtrasGitRepositoriesBulkUpdateJSONRequestBody defines body for ExtrasGitRepositoriesBulkUpdate for application/json ContentType.
type ExtrasGitRepositoriesBulkUpdateJSONRequestBody ExtrasGitRepositoriesBulkUpdateJSONBody

// ExtrasGitRepositoriesPartialUpdateJSONRequestBody defines body for ExtrasGitRepositoriesPartialUpdate for application/json ContentType.
type ExtrasGitRepositoriesPartialUpdateJSONRequestBody ExtrasGitRepositoriesPartialUpdateJSONBody

// ExtrasGitRepositoriesUpdateJSONRequestBody defines body for ExtrasGitRepositoriesUpdate for application/json ContentType.
type ExtrasGitRepositoriesUpdateJSONRequestBody ExtrasGitRepositoriesUpdateJSONBody

// ExtrasGitRepositoriesSyncCreateJSONRequestBody defines body for ExtrasGitRepositoriesSyncCreate for application/json ContentType.
type ExtrasGitRepositoriesSyncCreateJSONRequestBody ExtrasGitRepositoriesSyncCreateJSONBody

// ExtrasGraphqlQueriesBulkPartialUpdateJSONRequestBody defines body for ExtrasGraphqlQueriesBulkPartialUpdate for application/json ContentType.
type ExtrasGraphqlQueriesBulkPartialUpdateJSONRequestBody ExtrasGraphqlQueriesBulkPartialUpdateJSONBody

// ExtrasGraphqlQueriesCreateJSONRequestBody defines body for ExtrasGraphqlQueriesCreate for application/json ContentType.
type ExtrasGraphqlQueriesCreateJSONRequestBody ExtrasGraphqlQueriesCreateJSONBody

// ExtrasGraphqlQueriesBulkUpdateJSONRequestBody defines body for ExtrasGraphqlQueriesBulkUpdate for application/json ContentType.
type ExtrasGraphqlQueriesBulkUpdateJSONRequestBody ExtrasGraphqlQueriesBulkUpdateJSONBody

// ExtrasGraphqlQueriesPartialUpdateJSONRequestBody defines body for ExtrasGraphqlQueriesPartialUpdate for application/json ContentType.
type ExtrasGraphqlQueriesPartialUpdateJSONRequestBody ExtrasGraphqlQueriesPartialUpdateJSONBody

// ExtrasGraphqlQueriesUpdateJSONRequestBody defines body for ExtrasGraphqlQueriesUpdate for application/json ContentType.
type ExtrasGraphqlQueriesUpdateJSONRequestBody ExtrasGraphqlQueriesUpdateJSONBody

// ExtrasGraphqlQueriesRunCreateJSONRequestBody defines body for ExtrasGraphqlQueriesRunCreate for application/json ContentType.
type ExtrasGraphqlQueriesRunCreateJSONRequestBody ExtrasGraphqlQueriesRunCreateJSONBody

// ExtrasImageAttachmentsBulkPartialUpdateJSONRequestBody defines body for ExtrasImageAttachmentsBulkPartialUpdate for application/json ContentType.
type ExtrasImageAttachmentsBulkPartialUpdateJSONRequestBody ExtrasImageAttachmentsBulkPartialUpdateJSONBody

// ExtrasImageAttachmentsCreateJSONRequestBody defines body for ExtrasImageAttachmentsCreate for application/json ContentType.
type ExtrasImageAttachmentsCreateJSONRequestBody ExtrasImageAttachmentsCreateJSONBody

// ExtrasImageAttachmentsBulkUpdateJSONRequestBody defines body for ExtrasImageAttachmentsBulkUpdate for application/json ContentType.
type ExtrasImageAttachmentsBulkUpdateJSONRequestBody ExtrasImageAttachmentsBulkUpdateJSONBody

// ExtrasImageAttachmentsPartialUpdateJSONRequestBody defines body for ExtrasImageAttachmentsPartialUpdate for application/json ContentType.
type ExtrasImageAttachmentsPartialUpdateJSONRequestBody ExtrasImageAttachmentsPartialUpdateJSONBody

// ExtrasImageAttachmentsUpdateJSONRequestBody defines body for ExtrasImageAttachmentsUpdate for application/json ContentType.
type ExtrasImageAttachmentsUpdateJSONRequestBody ExtrasImageAttachmentsUpdateJSONBody

// ExtrasJobResultsBulkPartialUpdateJSONRequestBody defines body for ExtrasJobResultsBulkPartialUpdate for application/json ContentType.
type ExtrasJobResultsBulkPartialUpdateJSONRequestBody ExtrasJobResultsBulkPartialUpdateJSONBody

// ExtrasJobResultsCreateJSONRequestBody defines body for ExtrasJobResultsCreate for application/json ContentType.
type ExtrasJobResultsCreateJSONRequestBody ExtrasJobResultsCreateJSONBody

// ExtrasJobResultsBulkUpdateJSONRequestBody defines body for ExtrasJobResultsBulkUpdate for application/json ContentType.
type ExtrasJobResultsBulkUpdateJSONRequestBody ExtrasJobResultsBulkUpdateJSONBody

// ExtrasJobResultsPartialUpdateJSONRequestBody defines body for ExtrasJobResultsPartialUpdate for application/json ContentType.
type ExtrasJobResultsPartialUpdateJSONRequestBody ExtrasJobResultsPartialUpdateJSONBody

// ExtrasJobResultsUpdateJSONRequestBody defines body for ExtrasJobResultsUpdate for application/json ContentType.
type ExtrasJobResultsUpdateJSONRequestBody ExtrasJobResultsUpdateJSONBody

// ExtrasJobsBulkPartialUpdateJSONRequestBody defines body for ExtrasJobsBulkPartialUpdate for application/json ContentType.
type ExtrasJobsBulkPartialUpdateJSONRequestBody ExtrasJobsBulkPartialUpdateJSONBody

// ExtrasJobsBulkUpdateJSONRequestBody defines body for ExtrasJobsBulkUpdate for application/json ContentType.
type ExtrasJobsBulkUpdateJSONRequestBody ExtrasJobsBulkUpdateJSONBody

// ExtrasJobsRunDeprecatedJSONRequestBody defines body for ExtrasJobsRunDeprecated for application/json ContentType.
type ExtrasJobsRunDeprecatedJSONRequestBody ExtrasJobsRunDeprecatedJSONBody

// ExtrasJobsPartialUpdateJSONRequestBody defines body for ExtrasJobsPartialUpdate for application/json ContentType.
type ExtrasJobsPartialUpdateJSONRequestBody ExtrasJobsPartialUpdateJSONBody

// ExtrasJobsUpdateJSONRequestBody defines body for ExtrasJobsUpdate for application/json ContentType.
type ExtrasJobsUpdateJSONRequestBody ExtrasJobsUpdateJSONBody

// ExtrasJobsRunCreateJSONRequestBody defines body for ExtrasJobsRunCreate for application/json ContentType.
type ExtrasJobsRunCreateJSONRequestBody ExtrasJobsRunCreateJSONBody

// ExtrasRelationshipAssociationsBulkPartialUpdateJSONRequestBody defines body for ExtrasRelationshipAssociationsBulkPartialUpdate for application/json ContentType.
type ExtrasRelationshipAssociationsBulkPartialUpdateJSONRequestBody ExtrasRelationshipAssociationsBulkPartialUpdateJSONBody

// ExtrasRelationshipAssociationsCreateJSONRequestBody defines body for ExtrasRelationshipAssociationsCreate for application/json ContentType.
type ExtrasRelationshipAssociationsCreateJSONRequestBody ExtrasRelationshipAssociationsCreateJSONBody

// ExtrasRelationshipAssociationsBulkUpdateJSONRequestBody defines body for ExtrasRelationshipAssociationsBulkUpdate for application/json ContentType.
type ExtrasRelationshipAssociationsBulkUpdateJSONRequestBody ExtrasRelationshipAssociationsBulkUpdateJSONBody

// ExtrasRelationshipAssociationsPartialUpdateJSONRequestBody defines body for ExtrasRelationshipAssociationsPartialUpdate for application/json ContentType.
type ExtrasRelationshipAssociationsPartialUpdateJSONRequestBody ExtrasRelationshipAssociationsPartialUpdateJSONBody

// ExtrasRelationshipAssociationsUpdateJSONRequestBody defines body for ExtrasRelationshipAssociationsUpdate for application/json ContentType.
type ExtrasRelationshipAssociationsUpdateJSONRequestBody ExtrasRelationshipAssociationsUpdateJSONBody

// ExtrasRelationshipsBulkPartialUpdateJSONRequestBody defines body for ExtrasRelationshipsBulkPartialUpdate for application/json ContentType.
type ExtrasRelationshipsBulkPartialUpdateJSONRequestBody ExtrasRelationshipsBulkPartialUpdateJSONBody

// ExtrasRelationshipsCreateJSONRequestBody defines body for ExtrasRelationshipsCreate for application/json ContentType.
type ExtrasRelationshipsCreateJSONRequestBody ExtrasRelationshipsCreateJSONBody

// ExtrasRelationshipsBulkUpdateJSONRequestBody defines body for ExtrasRelationshipsBulkUpdate for application/json ContentType.
type ExtrasRelationshipsBulkUpdateJSONRequestBody ExtrasRelationshipsBulkUpdateJSONBody

// ExtrasRelationshipsPartialUpdateJSONRequestBody defines body for ExtrasRelationshipsPartialUpdate for application/json ContentType.
type ExtrasRelationshipsPartialUpdateJSONRequestBody ExtrasRelationshipsPartialUpdateJSONBody

// ExtrasRelationshipsUpdateJSONRequestBody defines body for ExtrasRelationshipsUpdate for application/json ContentType.
type ExtrasRelationshipsUpdateJSONRequestBody ExtrasRelationshipsUpdateJSONBody

// ExtrasSecretsGroupsAssociationsBulkPartialUpdateJSONRequestBody defines body for ExtrasSecretsGroupsAssociationsBulkPartialUpdate for application/json ContentType.
type ExtrasSecretsGroupsAssociationsBulkPartialUpdateJSONRequestBody ExtrasSecretsGroupsAssociationsBulkPartialUpdateJSONBody

// ExtrasSecretsGroupsAssociationsCreateJSONRequestBody defines body for ExtrasSecretsGroupsAssociationsCreate for application/json ContentType.
type ExtrasSecretsGroupsAssociationsCreateJSONRequestBody ExtrasSecretsGroupsAssociationsCreateJSONBody

// ExtrasSecretsGroupsAssociationsBulkUpdateJSONRequestBody defines body for ExtrasSecretsGroupsAssociationsBulkUpdate for application/json ContentType.
type ExtrasSecretsGroupsAssociationsBulkUpdateJSONRequestBody ExtrasSecretsGroupsAssociationsBulkUpdateJSONBody

// ExtrasSecretsGroupsAssociationsPartialUpdateJSONRequestBody defines body for ExtrasSecretsGroupsAssociationsPartialUpdate for application/json ContentType.
type ExtrasSecretsGroupsAssociationsPartialUpdateJSONRequestBody ExtrasSecretsGroupsAssociationsPartialUpdateJSONBody

// ExtrasSecretsGroupsAssociationsUpdateJSONRequestBody defines body for ExtrasSecretsGroupsAssociationsUpdate for application/json ContentType.
type ExtrasSecretsGroupsAssociationsUpdateJSONRequestBody ExtrasSecretsGroupsAssociationsUpdateJSONBody

// ExtrasSecretsGroupsBulkPartialUpdateJSONRequestBody defines body for ExtrasSecretsGroupsBulkPartialUpdate for application/json ContentType.
type ExtrasSecretsGroupsBulkPartialUpdateJSONRequestBody ExtrasSecretsGroupsBulkPartialUpdateJSONBody

// ExtrasSecretsGroupsCreateJSONRequestBody defines body for ExtrasSecretsGroupsCreate for application/json ContentType.
type ExtrasSecretsGroupsCreateJSONRequestBody ExtrasSecretsGroupsCreateJSONBody

// ExtrasSecretsGroupsBulkUpdateJSONRequestBody defines body for ExtrasSecretsGroupsBulkUpdate for application/json ContentType.
type ExtrasSecretsGroupsBulkUpdateJSONRequestBody ExtrasSecretsGroupsBulkUpdateJSONBody

// ExtrasSecretsGroupsPartialUpdateJSONRequestBody defines body for ExtrasSecretsGroupsPartialUpdate for application/json ContentType.
type ExtrasSecretsGroupsPartialUpdateJSONRequestBody ExtrasSecretsGroupsPartialUpdateJSONBody

// ExtrasSecretsGroupsUpdateJSONRequestBody defines body for ExtrasSecretsGroupsUpdate for application/json ContentType.
type ExtrasSecretsGroupsUpdateJSONRequestBody ExtrasSecretsGroupsUpdateJSONBody

// ExtrasSecretsBulkPartialUpdateJSONRequestBody defines body for ExtrasSecretsBulkPartialUpdate for application/json ContentType.
type ExtrasSecretsBulkPartialUpdateJSONRequestBody ExtrasSecretsBulkPartialUpdateJSONBody

// ExtrasSecretsCreateJSONRequestBody defines body for ExtrasSecretsCreate for application/json ContentType.
type ExtrasSecretsCreateJSONRequestBody ExtrasSecretsCreateJSONBody

// ExtrasSecretsBulkUpdateJSONRequestBody defines body for ExtrasSecretsBulkUpdate for application/json ContentType.
type ExtrasSecretsBulkUpdateJSONRequestBody ExtrasSecretsBulkUpdateJSONBody

// ExtrasSecretsPartialUpdateJSONRequestBody defines body for ExtrasSecretsPartialUpdate for application/json ContentType.
type ExtrasSecretsPartialUpdateJSONRequestBody ExtrasSecretsPartialUpdateJSONBody

// ExtrasSecretsUpdateJSONRequestBody defines body for ExtrasSecretsUpdate for application/json ContentType.
type ExtrasSecretsUpdateJSONRequestBody ExtrasSecretsUpdateJSONBody

// ExtrasStatusesBulkPartialUpdateJSONRequestBody defines body for ExtrasStatusesBulkPartialUpdate for application/json ContentType.
type ExtrasStatusesBulkPartialUpdateJSONRequestBody ExtrasStatusesBulkPartialUpdateJSONBody

// ExtrasStatusesCreateJSONRequestBody defines body for ExtrasStatusesCreate for application/json ContentType.
type ExtrasStatusesCreateJSONRequestBody ExtrasStatusesCreateJSONBody

// ExtrasStatusesBulkUpdateJSONRequestBody defines body for ExtrasStatusesBulkUpdate for application/json ContentType.
type ExtrasStatusesBulkUpdateJSONRequestBody ExtrasStatusesBulkUpdateJSONBody

// ExtrasStatusesPartialUpdateJSONRequestBody defines body for ExtrasStatusesPartialUpdate for application/json ContentType.
type ExtrasStatusesPartialUpdateJSONRequestBody ExtrasStatusesPartialUpdateJSONBody

// ExtrasStatusesUpdateJSONRequestBody defines body for ExtrasStatusesUpdate for application/json ContentType.
type ExtrasStatusesUpdateJSONRequestBody ExtrasStatusesUpdateJSONBody

// ExtrasTagsBulkPartialUpdateJSONRequestBody defines body for ExtrasTagsBulkPartialUpdate for application/json ContentType.
type ExtrasTagsBulkPartialUpdateJSONRequestBody ExtrasTagsBulkPartialUpdateJSONBody

// ExtrasTagsCreateJSONRequestBody defines body for ExtrasTagsCreate for application/json ContentType.
type ExtrasTagsCreateJSONRequestBody ExtrasTagsCreateJSONBody

// ExtrasTagsBulkUpdateJSONRequestBody defines body for ExtrasTagsBulkUpdate for application/json ContentType.
type ExtrasTagsBulkUpdateJSONRequestBody ExtrasTagsBulkUpdateJSONBody

// ExtrasTagsPartialUpdateJSONRequestBody defines body for ExtrasTagsPartialUpdate for application/json ContentType.
type ExtrasTagsPartialUpdateJSONRequestBody ExtrasTagsPartialUpdateJSONBody

// ExtrasTagsUpdateJSONRequestBody defines body for ExtrasTagsUpdate for application/json ContentType.
type ExtrasTagsUpdateJSONRequestBody ExtrasTagsUpdateJSONBody

// ExtrasWebhooksBulkPartialUpdateJSONRequestBody defines body for ExtrasWebhooksBulkPartialUpdate for application/json ContentType.
type ExtrasWebhooksBulkPartialUpdateJSONRequestBody ExtrasWebhooksBulkPartialUpdateJSONBody

// ExtrasWebhooksCreateJSONRequestBody defines body for ExtrasWebhooksCreate for application/json ContentType.
type ExtrasWebhooksCreateJSONRequestBody ExtrasWebhooksCreateJSONBody

// ExtrasWebhooksBulkUpdateJSONRequestBody defines body for ExtrasWebhooksBulkUpdate for application/json ContentType.
type ExtrasWebhooksBulkUpdateJSONRequestBody ExtrasWebhooksBulkUpdateJSONBody

// ExtrasWebhooksPartialUpdateJSONRequestBody defines body for ExtrasWebhooksPartialUpdate for application/json ContentType.
type ExtrasWebhooksPartialUpdateJSONRequestBody ExtrasWebhooksPartialUpdateJSONBody

// ExtrasWebhooksUpdateJSONRequestBody defines body for ExtrasWebhooksUpdate for application/json ContentType.
type ExtrasWebhooksUpdateJSONRequestBody ExtrasWebhooksUpdateJSONBody

// GraphqlCreateJSONRequestBody defines body for GraphqlCreate for application/json ContentType.
type GraphqlCreateJSONRequestBody GraphqlCreateJSONBody

// IpamAggregatesBulkPartialUpdateJSONRequestBody defines body for IpamAggregatesBulkPartialUpdate for application/json ContentType.
type IpamAggregatesBulkPartialUpdateJSONRequestBody IpamAggregatesBulkPartialUpdateJSONBody

// IpamAggregatesCreateJSONRequestBody defines body for IpamAggregatesCreate for application/json ContentType.
type IpamAggregatesCreateJSONRequestBody IpamAggregatesCreateJSONBody

// IpamAggregatesBulkUpdateJSONRequestBody defines body for IpamAggregatesBulkUpdate for application/json ContentType.
type IpamAggregatesBulkUpdateJSONRequestBody IpamAggregatesBulkUpdateJSONBody

// IpamAggregatesPartialUpdateJSONRequestBody defines body for IpamAggregatesPartialUpdate for application/json ContentType.
type IpamAggregatesPartialUpdateJSONRequestBody IpamAggregatesPartialUpdateJSONBody

// IpamAggregatesUpdateJSONRequestBody defines body for IpamAggregatesUpdate for application/json ContentType.
type IpamAggregatesUpdateJSONRequestBody IpamAggregatesUpdateJSONBody

// IpamIpAddressesBulkPartialUpdateJSONRequestBody defines body for IpamIpAddressesBulkPartialUpdate for application/json ContentType.
type IpamIpAddressesBulkPartialUpdateJSONRequestBody IpamIpAddressesBulkPartialUpdateJSONBody

// IpamIpAddressesCreateJSONRequestBody defines body for IpamIpAddressesCreate for application/json ContentType.
type IpamIpAddressesCreateJSONRequestBody IpamIpAddressesCreateJSONBody

// IpamIpAddressesBulkUpdateJSONRequestBody defines body for IpamIpAddressesBulkUpdate for application/json ContentType.
type IpamIpAddressesBulkUpdateJSONRequestBody IpamIpAddressesBulkUpdateJSONBody

// IpamIpAddressesPartialUpdateJSONRequestBody defines body for IpamIpAddressesPartialUpdate for application/json ContentType.
type IpamIpAddressesPartialUpdateJSONRequestBody IpamIpAddressesPartialUpdateJSONBody

// IpamIpAddressesUpdateJSONRequestBody defines body for IpamIpAddressesUpdate for application/json ContentType.
type IpamIpAddressesUpdateJSONRequestBody IpamIpAddressesUpdateJSONBody

// IpamPrefixesBulkPartialUpdateJSONRequestBody defines body for IpamPrefixesBulkPartialUpdate for application/json ContentType.
type IpamPrefixesBulkPartialUpdateJSONRequestBody IpamPrefixesBulkPartialUpdateJSONBody

// IpamPrefixesCreateJSONRequestBody defines body for IpamPrefixesCreate for application/json ContentType.
type IpamPrefixesCreateJSONRequestBody IpamPrefixesCreateJSONBody

// IpamPrefixesBulkUpdateJSONRequestBody defines body for IpamPrefixesBulkUpdate for application/json ContentType.
type IpamPrefixesBulkUpdateJSONRequestBody IpamPrefixesBulkUpdateJSONBody

// IpamPrefixesPartialUpdateJSONRequestBody defines body for IpamPrefixesPartialUpdate for application/json ContentType.
type IpamPrefixesPartialUpdateJSONRequestBody IpamPrefixesPartialUpdateJSONBody

// IpamPrefixesUpdateJSONRequestBody defines body for IpamPrefixesUpdate for application/json ContentType.
type IpamPrefixesUpdateJSONRequestBody IpamPrefixesUpdateJSONBody

// IpamPrefixesAvailableIpsCreateJSONRequestBody defines body for IpamPrefixesAvailableIpsCreate for application/json ContentType.
type IpamPrefixesAvailableIpsCreateJSONRequestBody IpamPrefixesAvailableIpsCreateJSONBody

// IpamPrefixesAvailablePrefixesCreateJSONRequestBody defines body for IpamPrefixesAvailablePrefixesCreate for application/json ContentType.
type IpamPrefixesAvailablePrefixesCreateJSONRequestBody IpamPrefixesAvailablePrefixesCreateJSONBody

// IpamRirsBulkPartialUpdateJSONRequestBody defines body for IpamRirsBulkPartialUpdate for application/json ContentType.
type IpamRirsBulkPartialUpdateJSONRequestBody IpamRirsBulkPartialUpdateJSONBody

// IpamRirsCreateJSONRequestBody defines body for IpamRirsCreate for application/json ContentType.
type IpamRirsCreateJSONRequestBody IpamRirsCreateJSONBody

// IpamRirsBulkUpdateJSONRequestBody defines body for IpamRirsBulkUpdate for application/json ContentType.
type IpamRirsBulkUpdateJSONRequestBody IpamRirsBulkUpdateJSONBody

// IpamRirsPartialUpdateJSONRequestBody defines body for IpamRirsPartialUpdate for application/json ContentType.
type IpamRirsPartialUpdateJSONRequestBody IpamRirsPartialUpdateJSONBody

// IpamRirsUpdateJSONRequestBody defines body for IpamRirsUpdate for application/json ContentType.
type IpamRirsUpdateJSONRequestBody IpamRirsUpdateJSONBody

// IpamRolesBulkPartialUpdateJSONRequestBody defines body for IpamRolesBulkPartialUpdate for application/json ContentType.
type IpamRolesBulkPartialUpdateJSONRequestBody IpamRolesBulkPartialUpdateJSONBody

// IpamRolesCreateJSONRequestBody defines body for IpamRolesCreate for application/json ContentType.
type IpamRolesCreateJSONRequestBody IpamRolesCreateJSONBody

// IpamRolesBulkUpdateJSONRequestBody defines body for IpamRolesBulkUpdate for application/json ContentType.
type IpamRolesBulkUpdateJSONRequestBody IpamRolesBulkUpdateJSONBody

// IpamRolesPartialUpdateJSONRequestBody defines body for IpamRolesPartialUpdate for application/json ContentType.
type IpamRolesPartialUpdateJSONRequestBody IpamRolesPartialUpdateJSONBody

// IpamRolesUpdateJSONRequestBody defines body for IpamRolesUpdate for application/json ContentType.
type IpamRolesUpdateJSONRequestBody IpamRolesUpdateJSONBody

// IpamRouteTargetsBulkPartialUpdateJSONRequestBody defines body for IpamRouteTargetsBulkPartialUpdate for application/json ContentType.
type IpamRouteTargetsBulkPartialUpdateJSONRequestBody IpamRouteTargetsBulkPartialUpdateJSONBody

// IpamRouteTargetsCreateJSONRequestBody defines body for IpamRouteTargetsCreate for application/json ContentType.
type IpamRouteTargetsCreateJSONRequestBody IpamRouteTargetsCreateJSONBody

// IpamRouteTargetsBulkUpdateJSONRequestBody defines body for IpamRouteTargetsBulkUpdate for application/json ContentType.
type IpamRouteTargetsBulkUpdateJSONRequestBody IpamRouteTargetsBulkUpdateJSONBody

// IpamRouteTargetsPartialUpdateJSONRequestBody defines body for IpamRouteTargetsPartialUpdate for application/json ContentType.
type IpamRouteTargetsPartialUpdateJSONRequestBody IpamRouteTargetsPartialUpdateJSONBody

// IpamRouteTargetsUpdateJSONRequestBody defines body for IpamRouteTargetsUpdate for application/json ContentType.
type IpamRouteTargetsUpdateJSONRequestBody IpamRouteTargetsUpdateJSONBody

// IpamServicesBulkPartialUpdateJSONRequestBody defines body for IpamServicesBulkPartialUpdate for application/json ContentType.
type IpamServicesBulkPartialUpdateJSONRequestBody IpamServicesBulkPartialUpdateJSONBody

// IpamServicesCreateJSONRequestBody defines body for IpamServicesCreate for application/json ContentType.
type IpamServicesCreateJSONRequestBody IpamServicesCreateJSONBody

// IpamServicesBulkUpdateJSONRequestBody defines body for IpamServicesBulkUpdate for application/json ContentType.
type IpamServicesBulkUpdateJSONRequestBody IpamServicesBulkUpdateJSONBody

// IpamServicesPartialUpdateJSONRequestBody defines body for IpamServicesPartialUpdate for application/json ContentType.
type IpamServicesPartialUpdateJSONRequestBody IpamServicesPartialUpdateJSONBody

// IpamServicesUpdateJSONRequestBody defines body for IpamServicesUpdate for application/json ContentType.
type IpamServicesUpdateJSONRequestBody IpamServicesUpdateJSONBody

// IpamVlanGroupsBulkPartialUpdateJSONRequestBody defines body for IpamVlanGroupsBulkPartialUpdate for application/json ContentType.
type IpamVlanGroupsBulkPartialUpdateJSONRequestBody IpamVlanGroupsBulkPartialUpdateJSONBody

// IpamVlanGroupsCreateJSONRequestBody defines body for IpamVlanGroupsCreate for application/json ContentType.
type IpamVlanGroupsCreateJSONRequestBody IpamVlanGroupsCreateJSONBody

// IpamVlanGroupsBulkUpdateJSONRequestBody defines body for IpamVlanGroupsBulkUpdate for application/json ContentType.
type IpamVlanGroupsBulkUpdateJSONRequestBody IpamVlanGroupsBulkUpdateJSONBody

// IpamVlanGroupsPartialUpdateJSONRequestBody defines body for IpamVlanGroupsPartialUpdate for application/json ContentType.
type IpamVlanGroupsPartialUpdateJSONRequestBody IpamVlanGroupsPartialUpdateJSONBody

// IpamVlanGroupsUpdateJSONRequestBody defines body for IpamVlanGroupsUpdate for application/json ContentType.
type IpamVlanGroupsUpdateJSONRequestBody IpamVlanGroupsUpdateJSONBody

// IpamVlansBulkPartialUpdateJSONRequestBody defines body for IpamVlansBulkPartialUpdate for application/json ContentType.
type IpamVlansBulkPartialUpdateJSONRequestBody IpamVlansBulkPartialUpdateJSONBody

// IpamVlansCreateJSONRequestBody defines body for IpamVlansCreate for application/json ContentType.
type IpamVlansCreateJSONRequestBody IpamVlansCreateJSONBody

// IpamVlansBulkUpdateJSONRequestBody defines body for IpamVlansBulkUpdate for application/json ContentType.
type IpamVlansBulkUpdateJSONRequestBody IpamVlansBulkUpdateJSONBody

// IpamVlansPartialUpdateJSONRequestBody defines body for IpamVlansPartialUpdate for application/json ContentType.
type IpamVlansPartialUpdateJSONRequestBody IpamVlansPartialUpdateJSONBody

// IpamVlansUpdateJSONRequestBody defines body for IpamVlansUpdate for application/json ContentType.
type IpamVlansUpdateJSONRequestBody IpamVlansUpdateJSONBody

// IpamVrfsBulkPartialUpdateJSONRequestBody defines body for IpamVrfsBulkPartialUpdate for application/json ContentType.
type IpamVrfsBulkPartialUpdateJSONRequestBody IpamVrfsBulkPartialUpdateJSONBody

// IpamVrfsCreateJSONRequestBody defines body for IpamVrfsCreate for application/json ContentType.
type IpamVrfsCreateJSONRequestBody IpamVrfsCreateJSONBody

// IpamVrfsBulkUpdateJSONRequestBody defines body for IpamVrfsBulkUpdate for application/json ContentType.
type IpamVrfsBulkUpdateJSONRequestBody IpamVrfsBulkUpdateJSONBody

// IpamVrfsPartialUpdateJSONRequestBody defines body for IpamVrfsPartialUpdate for application/json ContentType.
type IpamVrfsPartialUpdateJSONRequestBody IpamVrfsPartialUpdateJSONBody

// IpamVrfsUpdateJSONRequestBody defines body for IpamVrfsUpdate for application/json ContentType.
type IpamVrfsUpdateJSONRequestBody IpamVrfsUpdateJSONBody

// TenancyTenantGroupsBulkPartialUpdateJSONRequestBody defines body for TenancyTenantGroupsBulkPartialUpdate for application/json ContentType.
type TenancyTenantGroupsBulkPartialUpdateJSONRequestBody TenancyTenantGroupsBulkPartialUpdateJSONBody

// TenancyTenantGroupsCreateJSONRequestBody defines body for TenancyTenantGroupsCreate for application/json ContentType.
type TenancyTenantGroupsCreateJSONRequestBody TenancyTenantGroupsCreateJSONBody

// TenancyTenantGroupsBulkUpdateJSONRequestBody defines body for TenancyTenantGroupsBulkUpdate for application/json ContentType.
type TenancyTenantGroupsBulkUpdateJSONRequestBody TenancyTenantGroupsBulkUpdateJSONBody

// TenancyTenantGroupsPartialUpdateJSONRequestBody defines body for TenancyTenantGroupsPartialUpdate for application/json ContentType.
type TenancyTenantGroupsPartialUpdateJSONRequestBody TenancyTenantGroupsPartialUpdateJSONBody

// TenancyTenantGroupsUpdateJSONRequestBody defines body for TenancyTenantGroupsUpdate for application/json ContentType.
type TenancyTenantGroupsUpdateJSONRequestBody TenancyTenantGroupsUpdateJSONBody

// TenancyTenantsBulkPartialUpdateJSONRequestBody defines body for TenancyTenantsBulkPartialUpdate for application/json ContentType.
type TenancyTenantsBulkPartialUpdateJSONRequestBody TenancyTenantsBulkPartialUpdateJSONBody

// TenancyTenantsCreateJSONRequestBody defines body for TenancyTenantsCreate for application/json ContentType.
type TenancyTenantsCreateJSONRequestBody TenancyTenantsCreateJSONBody

// TenancyTenantsBulkUpdateJSONRequestBody defines body for TenancyTenantsBulkUpdate for application/json ContentType.
type TenancyTenantsBulkUpdateJSONRequestBody TenancyTenantsBulkUpdateJSONBody

// TenancyTenantsPartialUpdateJSONRequestBody defines body for TenancyTenantsPartialUpdate for application/json ContentType.
type TenancyTenantsPartialUpdateJSONRequestBody TenancyTenantsPartialUpdateJSONBody

// TenancyTenantsUpdateJSONRequestBody defines body for TenancyTenantsUpdate for application/json ContentType.
type TenancyTenantsUpdateJSONRequestBody TenancyTenantsUpdateJSONBody

// UsersGroupsBulkPartialUpdateJSONRequestBody defines body for UsersGroupsBulkPartialUpdate for application/json ContentType.
type UsersGroupsBulkPartialUpdateJSONRequestBody UsersGroupsBulkPartialUpdateJSONBody

// UsersGroupsCreateJSONRequestBody defines body for UsersGroupsCreate for application/json ContentType.
type UsersGroupsCreateJSONRequestBody UsersGroupsCreateJSONBody

// UsersGroupsBulkUpdateJSONRequestBody defines body for UsersGroupsBulkUpdate for application/json ContentType.
type UsersGroupsBulkUpdateJSONRequestBody UsersGroupsBulkUpdateJSONBody

// UsersGroupsPartialUpdateJSONRequestBody defines body for UsersGroupsPartialUpdate for application/json ContentType.
type UsersGroupsPartialUpdateJSONRequestBody UsersGroupsPartialUpdateJSONBody

// UsersGroupsUpdateJSONRequestBody defines body for UsersGroupsUpdate for application/json ContentType.
type UsersGroupsUpdateJSONRequestBody UsersGroupsUpdateJSONBody

// UsersPermissionsBulkPartialUpdateJSONRequestBody defines body for UsersPermissionsBulkPartialUpdate for application/json ContentType.
type UsersPermissionsBulkPartialUpdateJSONRequestBody UsersPermissionsBulkPartialUpdateJSONBody

// UsersPermissionsCreateJSONRequestBody defines body for UsersPermissionsCreate for application/json ContentType.
type UsersPermissionsCreateJSONRequestBody UsersPermissionsCreateJSONBody

// UsersPermissionsBulkUpdateJSONRequestBody defines body for UsersPermissionsBulkUpdate for application/json ContentType.
type UsersPermissionsBulkUpdateJSONRequestBody UsersPermissionsBulkUpdateJSONBody

// UsersPermissionsPartialUpdateJSONRequestBody defines body for UsersPermissionsPartialUpdate for application/json ContentType.
type UsersPermissionsPartialUpdateJSONRequestBody UsersPermissionsPartialUpdateJSONBody

// UsersPermissionsUpdateJSONRequestBody defines body for UsersPermissionsUpdate for application/json ContentType.
type UsersPermissionsUpdateJSONRequestBody UsersPermissionsUpdateJSONBody

// UsersTokensBulkPartialUpdateJSONRequestBody defines body for UsersTokensBulkPartialUpdate for application/json ContentType.
type UsersTokensBulkPartialUpdateJSONRequestBody UsersTokensBulkPartialUpdateJSONBody

// UsersTokensCreateJSONRequestBody defines body for UsersTokensCreate for application/json ContentType.
type UsersTokensCreateJSONRequestBody UsersTokensCreateJSONBody

// UsersTokensBulkUpdateJSONRequestBody defines body for UsersTokensBulkUpdate for application/json ContentType.
type UsersTokensBulkUpdateJSONRequestBody UsersTokensBulkUpdateJSONBody

// UsersTokensPartialUpdateJSONRequestBody defines body for UsersTokensPartialUpdate for application/json ContentType.
type UsersTokensPartialUpdateJSONRequestBody UsersTokensPartialUpdateJSONBody

// UsersTokensUpdateJSONRequestBody defines body for UsersTokensUpdate for application/json ContentType.
type UsersTokensUpdateJSONRequestBody UsersTokensUpdateJSONBody

// UsersUsersBulkPartialUpdateJSONRequestBody defines body for UsersUsersBulkPartialUpdate for application/json ContentType.
type UsersUsersBulkPartialUpdateJSONRequestBody UsersUsersBulkPartialUpdateJSONBody

// UsersUsersCreateJSONRequestBody defines body for UsersUsersCreate for application/json ContentType.
type UsersUsersCreateJSONRequestBody UsersUsersCreateJSONBody

// UsersUsersBulkUpdateJSONRequestBody defines body for UsersUsersBulkUpdate for application/json ContentType.
type UsersUsersBulkUpdateJSONRequestBody UsersUsersBulkUpdateJSONBody

// UsersUsersPartialUpdateJSONRequestBody defines body for UsersUsersPartialUpdate for application/json ContentType.
type UsersUsersPartialUpdateJSONRequestBody UsersUsersPartialUpdateJSONBody

// UsersUsersUpdateJSONRequestBody defines body for UsersUsersUpdate for application/json ContentType.
type UsersUsersUpdateJSONRequestBody UsersUsersUpdateJSONBody

// VirtualizationClusterGroupsBulkPartialUpdateJSONRequestBody defines body for VirtualizationClusterGroupsBulkPartialUpdate for application/json ContentType.
type VirtualizationClusterGroupsBulkPartialUpdateJSONRequestBody VirtualizationClusterGroupsBulkPartialUpdateJSONBody

// VirtualizationClusterGroupsCreateJSONRequestBody defines body for VirtualizationClusterGroupsCreate for application/json ContentType.
type VirtualizationClusterGroupsCreateJSONRequestBody VirtualizationClusterGroupsCreateJSONBody

// VirtualizationClusterGroupsBulkUpdateJSONRequestBody defines body for VirtualizationClusterGroupsBulkUpdate for application/json ContentType.
type VirtualizationClusterGroupsBulkUpdateJSONRequestBody VirtualizationClusterGroupsBulkUpdateJSONBody

// VirtualizationClusterGroupsPartialUpdateJSONRequestBody defines body for VirtualizationClusterGroupsPartialUpdate for application/json ContentType.
type VirtualizationClusterGroupsPartialUpdateJSONRequestBody VirtualizationClusterGroupsPartialUpdateJSONBody

// VirtualizationClusterGroupsUpdateJSONRequestBody defines body for VirtualizationClusterGroupsUpdate for application/json ContentType.
type VirtualizationClusterGroupsUpdateJSONRequestBody VirtualizationClusterGroupsUpdateJSONBody

// VirtualizationClusterTypesBulkPartialUpdateJSONRequestBody defines body for VirtualizationClusterTypesBulkPartialUpdate for application/json ContentType.
type VirtualizationClusterTypesBulkPartialUpdateJSONRequestBody VirtualizationClusterTypesBulkPartialUpdateJSONBody

// VirtualizationClusterTypesCreateJSONRequestBody defines body for VirtualizationClusterTypesCreate for application/json ContentType.
type VirtualizationClusterTypesCreateJSONRequestBody VirtualizationClusterTypesCreateJSONBody

// VirtualizationClusterTypesBulkUpdateJSONRequestBody defines body for VirtualizationClusterTypesBulkUpdate for application/json ContentType.
type VirtualizationClusterTypesBulkUpdateJSONRequestBody VirtualizationClusterTypesBulkUpdateJSONBody

// VirtualizationClusterTypesPartialUpdateJSONRequestBody defines body for VirtualizationClusterTypesPartialUpdate for application/json ContentType.
type VirtualizationClusterTypesPartialUpdateJSONRequestBody VirtualizationClusterTypesPartialUpdateJSONBody

// VirtualizationClusterTypesUpdateJSONRequestBody defines body for VirtualizationClusterTypesUpdate for application/json ContentType.
type VirtualizationClusterTypesUpdateJSONRequestBody VirtualizationClusterTypesUpdateJSONBody

// VirtualizationClustersBulkPartialUpdateJSONRequestBody defines body for VirtualizationClustersBulkPartialUpdate for application/json ContentType.
type VirtualizationClustersBulkPartialUpdateJSONRequestBody VirtualizationClustersBulkPartialUpdateJSONBody

// VirtualizationClustersCreateJSONRequestBody defines body for VirtualizationClustersCreate for application/json ContentType.
type VirtualizationClustersCreateJSONRequestBody VirtualizationClustersCreateJSONBody

// VirtualizationClustersBulkUpdateJSONRequestBody defines body for VirtualizationClustersBulkUpdate for application/json ContentType.
type VirtualizationClustersBulkUpdateJSONRequestBody VirtualizationClustersBulkUpdateJSONBody

// VirtualizationClustersPartialUpdateJSONRequestBody defines body for VirtualizationClustersPartialUpdate for application/json ContentType.
type VirtualizationClustersPartialUpdateJSONRequestBody VirtualizationClustersPartialUpdateJSONBody

// VirtualizationClustersUpdateJSONRequestBody defines body for VirtualizationClustersUpdate for application/json ContentType.
type VirtualizationClustersUpdateJSONRequestBody VirtualizationClustersUpdateJSONBody

// VirtualizationInterfacesBulkPartialUpdateJSONRequestBody defines body for VirtualizationInterfacesBulkPartialUpdate for application/json ContentType.
type VirtualizationInterfacesBulkPartialUpdateJSONRequestBody VirtualizationInterfacesBulkPartialUpdateJSONBody

// VirtualizationInterfacesCreateJSONRequestBody defines body for VirtualizationInterfacesCreate for application/json ContentType.
type VirtualizationInterfacesCreateJSONRequestBody VirtualizationInterfacesCreateJSONBody

// VirtualizationInterfacesBulkUpdateJSONRequestBody defines body for VirtualizationInterfacesBulkUpdate for application/json ContentType.
type VirtualizationInterfacesBulkUpdateJSONRequestBody VirtualizationInterfacesBulkUpdateJSONBody

// VirtualizationInterfacesPartialUpdateJSONRequestBody defines body for VirtualizationInterfacesPartialUpdate for application/json ContentType.
type VirtualizationInterfacesPartialUpdateJSONRequestBody VirtualizationInterfacesPartialUpdateJSONBody

// VirtualizationInterfacesUpdateJSONRequestBody defines body for VirtualizationInterfacesUpdate for application/json ContentType.
type VirtualizationInterfacesUpdateJSONRequestBody VirtualizationInterfacesUpdateJSONBody

// VirtualizationVirtualMachinesBulkPartialUpdateJSONRequestBody defines body for VirtualizationVirtualMachinesBulkPartialUpdate for application/json ContentType.
type VirtualizationVirtualMachinesBulkPartialUpdateJSONRequestBody VirtualizationVirtualMachinesBulkPartialUpdateJSONBody

// VirtualizationVirtualMachinesCreateJSONRequestBody defines body for VirtualizationVirtualMachinesCreate for application/json ContentType.
type VirtualizationVirtualMachinesCreateJSONRequestBody VirtualizationVirtualMachinesCreateJSONBody

// VirtualizationVirtualMachinesBulkUpdateJSONRequestBody defines body for VirtualizationVirtualMachinesBulkUpdate for application/json ContentType.
type VirtualizationVirtualMachinesBulkUpdateJSONRequestBody VirtualizationVirtualMachinesBulkUpdateJSONBody

// VirtualizationVirtualMachinesPartialUpdateJSONRequestBody defines body for VirtualizationVirtualMachinesPartialUpdate for application/json ContentType.
type VirtualizationVirtualMachinesPartialUpdateJSONRequestBody VirtualizationVirtualMachinesPartialUpdateJSONBody

// VirtualizationVirtualMachinesUpdateJSONRequestBody defines body for VirtualizationVirtualMachinesUpdate for application/json ContentType.
type VirtualizationVirtualMachinesUpdateJSONRequestBody VirtualizationVirtualMachinesUpdateJSONBody

// Getter for additional properties for Aggregate_CustomFields. Returns the specified
// element and whether it was found
func (a Aggregate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Aggregate_CustomFields
func (a *Aggregate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Aggregate_CustomFields to handle AdditionalProperties
func (a *Aggregate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Aggregate_CustomFields to handle AdditionalProperties
func (a Aggregate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Cable_CustomFields. Returns the specified
// element and whether it was found
func (a Cable_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Cable_CustomFields
func (a *Cable_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Cable_CustomFields to handle AdditionalProperties
func (a *Cable_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Cable_CustomFields to handle AdditionalProperties
func (a Cable_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Cable_TerminationA. Returns the specified
// element and whether it was found
func (a Cable_TerminationA) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Cable_TerminationA
func (a *Cable_TerminationA) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Cable_TerminationA to handle AdditionalProperties
func (a *Cable_TerminationA) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Cable_TerminationA to handle AdditionalProperties
func (a Cable_TerminationA) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Cable_TerminationB. Returns the specified
// element and whether it was found
func (a Cable_TerminationB) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Cable_TerminationB
func (a *Cable_TerminationB) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Cable_TerminationB to handle AdditionalProperties
func (a *Cable_TerminationB) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Cable_TerminationB to handle AdditionalProperties
func (a Cable_TerminationB) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Circuit_CustomFields. Returns the specified
// element and whether it was found
func (a Circuit_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Circuit_CustomFields
func (a *Circuit_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Circuit_CustomFields to handle AdditionalProperties
func (a *Circuit_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Circuit_CustomFields to handle AdditionalProperties
func (a Circuit_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CircuitTermination_CablePeer. Returns the specified
// element and whether it was found
func (a CircuitTermination_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CircuitTermination_CablePeer
func (a *CircuitTermination_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CircuitTermination_CablePeer to handle AdditionalProperties
func (a *CircuitTermination_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CircuitTermination_CablePeer to handle AdditionalProperties
func (a CircuitTermination_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CircuitTermination_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a CircuitTermination_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CircuitTermination_ConnectedEndpoint
func (a *CircuitTermination_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CircuitTermination_ConnectedEndpoint to handle AdditionalProperties
func (a *CircuitTermination_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CircuitTermination_ConnectedEndpoint to handle AdditionalProperties
func (a CircuitTermination_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CircuitType_CustomFields. Returns the specified
// element and whether it was found
func (a CircuitType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CircuitType_CustomFields
func (a *CircuitType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CircuitType_CustomFields to handle AdditionalProperties
func (a *CircuitType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CircuitType_CustomFields to handle AdditionalProperties
func (a CircuitType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Cluster_CustomFields. Returns the specified
// element and whether it was found
func (a Cluster_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Cluster_CustomFields
func (a *Cluster_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Cluster_CustomFields to handle AdditionalProperties
func (a *Cluster_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Cluster_CustomFields to handle AdditionalProperties
func (a Cluster_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ClusterGroup_CustomFields. Returns the specified
// element and whether it was found
func (a ClusterGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ClusterGroup_CustomFields
func (a *ClusterGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ClusterGroup_CustomFields to handle AdditionalProperties
func (a *ClusterGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ClusterGroup_CustomFields to handle AdditionalProperties
func (a ClusterGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ClusterType_CustomFields. Returns the specified
// element and whether it was found
func (a ClusterType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ClusterType_CustomFields
func (a *ClusterType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ClusterType_CustomFields to handle AdditionalProperties
func (a *ClusterType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ClusterType_CustomFields to handle AdditionalProperties
func (a ClusterType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConfigContext_Data. Returns the specified
// element and whether it was found
func (a ConfigContext_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConfigContext_Data
func (a *ConfigContext_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConfigContext_Data to handle AdditionalProperties
func (a *ConfigContext_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConfigContext_Data to handle AdditionalProperties
func (a ConfigContext_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConfigContext_Owner. Returns the specified
// element and whether it was found
func (a ConfigContext_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConfigContext_Owner
func (a *ConfigContext_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConfigContext_Owner to handle AdditionalProperties
func (a *ConfigContext_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConfigContext_Owner to handle AdditionalProperties
func (a ConfigContext_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConfigContextSchema_DataSchema. Returns the specified
// element and whether it was found
func (a ConfigContextSchema_DataSchema) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConfigContextSchema_DataSchema
func (a *ConfigContextSchema_DataSchema) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConfigContextSchema_DataSchema to handle AdditionalProperties
func (a *ConfigContextSchema_DataSchema) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConfigContextSchema_DataSchema to handle AdditionalProperties
func (a ConfigContextSchema_DataSchema) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConfigContextSchema_Owner. Returns the specified
// element and whether it was found
func (a ConfigContextSchema_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConfigContextSchema_Owner
func (a *ConfigContextSchema_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConfigContextSchema_Owner to handle AdditionalProperties
func (a *ConfigContextSchema_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConfigContextSchema_Owner to handle AdditionalProperties
func (a ConfigContextSchema_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsolePort_CablePeer. Returns the specified
// element and whether it was found
func (a ConsolePort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsolePort_CablePeer
func (a *ConsolePort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsolePort_CablePeer to handle AdditionalProperties
func (a *ConsolePort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsolePort_CablePeer to handle AdditionalProperties
func (a ConsolePort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsolePort_ComputedFields. Returns the specified
// element and whether it was found
func (a ConsolePort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsolePort_ComputedFields
func (a *ConsolePort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsolePort_ComputedFields to handle AdditionalProperties
func (a *ConsolePort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsolePort_ComputedFields to handle AdditionalProperties
func (a ConsolePort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsolePort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a ConsolePort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsolePort_ConnectedEndpoint
func (a *ConsolePort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsolePort_ConnectedEndpoint to handle AdditionalProperties
func (a *ConsolePort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsolePort_ConnectedEndpoint to handle AdditionalProperties
func (a ConsolePort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsolePort_CustomFields. Returns the specified
// element and whether it was found
func (a ConsolePort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsolePort_CustomFields
func (a *ConsolePort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsolePort_CustomFields to handle AdditionalProperties
func (a *ConsolePort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsolePort_CustomFields to handle AdditionalProperties
func (a ConsolePort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsolePortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a ConsolePortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsolePortTemplate_CustomFields
func (a *ConsolePortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsolePortTemplate_CustomFields to handle AdditionalProperties
func (a *ConsolePortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsolePortTemplate_CustomFields to handle AdditionalProperties
func (a ConsolePortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsoleServerPort_CablePeer. Returns the specified
// element and whether it was found
func (a ConsoleServerPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsoleServerPort_CablePeer
func (a *ConsoleServerPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsoleServerPort_CablePeer to handle AdditionalProperties
func (a *ConsoleServerPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsoleServerPort_CablePeer to handle AdditionalProperties
func (a ConsoleServerPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsoleServerPort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a ConsoleServerPort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsoleServerPort_ConnectedEndpoint
func (a *ConsoleServerPort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsoleServerPort_ConnectedEndpoint to handle AdditionalProperties
func (a *ConsoleServerPort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsoleServerPort_ConnectedEndpoint to handle AdditionalProperties
func (a ConsoleServerPort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsoleServerPort_CustomFields. Returns the specified
// element and whether it was found
func (a ConsoleServerPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsoleServerPort_CustomFields
func (a *ConsoleServerPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsoleServerPort_CustomFields to handle AdditionalProperties
func (a *ConsoleServerPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsoleServerPort_CustomFields to handle AdditionalProperties
func (a ConsoleServerPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ConsoleServerPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a ConsoleServerPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ConsoleServerPortTemplate_CustomFields
func (a *ConsoleServerPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ConsoleServerPortTemplate_CustomFields to handle AdditionalProperties
func (a *ConsoleServerPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ConsoleServerPortTemplate_CustomFields to handle AdditionalProperties
func (a ConsoleServerPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CustomField_Default. Returns the specified
// element and whether it was found
func (a CustomField_Default) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CustomField_Default
func (a *CustomField_Default) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CustomField_Default to handle AdditionalProperties
func (a *CustomField_Default) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CustomField_Default to handle AdditionalProperties
func (a CustomField_Default) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Device_ComputedFields. Returns the specified
// element and whether it was found
func (a Device_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Device_ComputedFields
func (a *Device_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Device_ComputedFields to handle AdditionalProperties
func (a *Device_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Device_ComputedFields to handle AdditionalProperties
func (a Device_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Device_CustomFields. Returns the specified
// element and whether it was found
func (a Device_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Device_CustomFields
func (a *Device_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Device_CustomFields to handle AdditionalProperties
func (a *Device_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Device_CustomFields to handle AdditionalProperties
func (a Device_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Device_LocalContextData. Returns the specified
// element and whether it was found
func (a Device_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Device_LocalContextData
func (a *Device_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Device_LocalContextData to handle AdditionalProperties
func (a *Device_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Device_LocalContextData to handle AdditionalProperties
func (a Device_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceBay_CustomFields. Returns the specified
// element and whether it was found
func (a DeviceBay_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceBay_CustomFields
func (a *DeviceBay_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceBay_CustomFields to handle AdditionalProperties
func (a *DeviceBay_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceBay_CustomFields to handle AdditionalProperties
func (a DeviceBay_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceBayTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a DeviceBayTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceBayTemplate_CustomFields
func (a *DeviceBayTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceBayTemplate_CustomFields to handle AdditionalProperties
func (a *DeviceBayTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceBayTemplate_CustomFields to handle AdditionalProperties
func (a DeviceBayTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceNAPALM_Method. Returns the specified
// element and whether it was found
func (a DeviceNAPALM_Method) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceNAPALM_Method
func (a *DeviceNAPALM_Method) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceNAPALM_Method to handle AdditionalProperties
func (a *DeviceNAPALM_Method) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceNAPALM_Method to handle AdditionalProperties
func (a DeviceNAPALM_Method) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceRole_CustomFields. Returns the specified
// element and whether it was found
func (a DeviceRole_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceRole_CustomFields
func (a *DeviceRole_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceRole_CustomFields to handle AdditionalProperties
func (a *DeviceRole_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceRole_CustomFields to handle AdditionalProperties
func (a DeviceRole_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceType_CustomFields. Returns the specified
// element and whether it was found
func (a DeviceType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceType_CustomFields
func (a *DeviceType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceType_CustomFields to handle AdditionalProperties
func (a *DeviceType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceType_CustomFields to handle AdditionalProperties
func (a DeviceType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceWithConfigContext_ConfigContext. Returns the specified
// element and whether it was found
func (a DeviceWithConfigContext_ConfigContext) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceWithConfigContext_ConfigContext
func (a *DeviceWithConfigContext_ConfigContext) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceWithConfigContext_ConfigContext to handle AdditionalProperties
func (a *DeviceWithConfigContext_ConfigContext) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceWithConfigContext_ConfigContext to handle AdditionalProperties
func (a DeviceWithConfigContext_ConfigContext) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceWithConfigContext_CustomFields. Returns the specified
// element and whether it was found
func (a DeviceWithConfigContext_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceWithConfigContext_CustomFields
func (a *DeviceWithConfigContext_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceWithConfigContext_CustomFields to handle AdditionalProperties
func (a *DeviceWithConfigContext_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceWithConfigContext_CustomFields to handle AdditionalProperties
func (a DeviceWithConfigContext_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceWithConfigContext_LocalContextData. Returns the specified
// element and whether it was found
func (a DeviceWithConfigContext_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceWithConfigContext_LocalContextData
func (a *DeviceWithConfigContext_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceWithConfigContext_LocalContextData to handle AdditionalProperties
func (a *DeviceWithConfigContext_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceWithConfigContext_LocalContextData to handle AdditionalProperties
func (a DeviceWithConfigContext_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DynamicGroup_Filter. Returns the specified
// element and whether it was found
func (a DynamicGroup_Filter) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DynamicGroup_Filter
func (a *DynamicGroup_Filter) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DynamicGroup_Filter to handle AdditionalProperties
func (a *DynamicGroup_Filter) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DynamicGroup_Filter to handle AdditionalProperties
func (a DynamicGroup_Filter) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExportTemplate_Owner. Returns the specified
// element and whether it was found
func (a ExportTemplate_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExportTemplate_Owner
func (a *ExportTemplate_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExportTemplate_Owner to handle AdditionalProperties
func (a *ExportTemplate_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExportTemplate_Owner to handle AdditionalProperties
func (a ExportTemplate_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for FrontPort_CablePeer. Returns the specified
// element and whether it was found
func (a FrontPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for FrontPort_CablePeer
func (a *FrontPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for FrontPort_CablePeer to handle AdditionalProperties
func (a *FrontPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for FrontPort_CablePeer to handle AdditionalProperties
func (a FrontPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for FrontPort_CustomFields. Returns the specified
// element and whether it was found
func (a FrontPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for FrontPort_CustomFields
func (a *FrontPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for FrontPort_CustomFields to handle AdditionalProperties
func (a *FrontPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for FrontPort_CustomFields to handle AdditionalProperties
func (a FrontPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for FrontPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a FrontPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for FrontPortTemplate_CustomFields
func (a *FrontPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for FrontPortTemplate_CustomFields to handle AdditionalProperties
func (a *FrontPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for FrontPortTemplate_CustomFields to handle AdditionalProperties
func (a FrontPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for GitRepository_CustomFields. Returns the specified
// element and whether it was found
func (a GitRepository_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for GitRepository_CustomFields
func (a *GitRepository_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for GitRepository_CustomFields to handle AdditionalProperties
func (a *GitRepository_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for GitRepository_CustomFields to handle AdditionalProperties
func (a GitRepository_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for GraphQLAPI_Variables. Returns the specified
// element and whether it was found
func (a GraphQLAPI_Variables) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for GraphQLAPI_Variables
func (a *GraphQLAPI_Variables) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for GraphQLAPI_Variables to handle AdditionalProperties
func (a *GraphQLAPI_Variables) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for GraphQLAPI_Variables to handle AdditionalProperties
func (a GraphQLAPI_Variables) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for GraphQLQuery_Variables. Returns the specified
// element and whether it was found
func (a GraphQLQuery_Variables) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for GraphQLQuery_Variables
func (a *GraphQLQuery_Variables) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for GraphQLQuery_Variables to handle AdditionalProperties
func (a *GraphQLQuery_Variables) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for GraphQLQuery_Variables to handle AdditionalProperties
func (a GraphQLQuery_Variables) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for GraphQLQueryInput_Variables. Returns the specified
// element and whether it was found
func (a GraphQLQueryInput_Variables) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for GraphQLQueryInput_Variables
func (a *GraphQLQueryInput_Variables) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for GraphQLQueryInput_Variables to handle AdditionalProperties
func (a *GraphQLQueryInput_Variables) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for GraphQLQueryInput_Variables to handle AdditionalProperties
func (a GraphQLQueryInput_Variables) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for GraphQLQueryOutput_Data. Returns the specified
// element and whether it was found
func (a GraphQLQueryOutput_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for GraphQLQueryOutput_Data
func (a *GraphQLQueryOutput_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for GraphQLQueryOutput_Data to handle AdditionalProperties
func (a *GraphQLQueryOutput_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for GraphQLQueryOutput_Data to handle AdditionalProperties
func (a GraphQLQueryOutput_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for IPAddress_AssignedObject. Returns the specified
// element and whether it was found
func (a IPAddress_AssignedObject) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for IPAddress_AssignedObject
func (a *IPAddress_AssignedObject) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for IPAddress_AssignedObject to handle AdditionalProperties
func (a *IPAddress_AssignedObject) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for IPAddress_AssignedObject to handle AdditionalProperties
func (a IPAddress_AssignedObject) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for IPAddress_CustomFields. Returns the specified
// element and whether it was found
func (a IPAddress_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for IPAddress_CustomFields
func (a *IPAddress_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for IPAddress_CustomFields to handle AdditionalProperties
func (a *IPAddress_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for IPAddress_CustomFields to handle AdditionalProperties
func (a IPAddress_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ImageAttachment_Parent. Returns the specified
// element and whether it was found
func (a ImageAttachment_Parent) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ImageAttachment_Parent
func (a *ImageAttachment_Parent) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ImageAttachment_Parent to handle AdditionalProperties
func (a *ImageAttachment_Parent) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ImageAttachment_Parent to handle AdditionalProperties
func (a ImageAttachment_Parent) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Interface_CablePeer. Returns the specified
// element and whether it was found
func (a Interface_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Interface_CablePeer
func (a *Interface_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Interface_CablePeer to handle AdditionalProperties
func (a *Interface_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Interface_CablePeer to handle AdditionalProperties
func (a Interface_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Interface_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a Interface_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Interface_ConnectedEndpoint
func (a *Interface_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Interface_ConnectedEndpoint to handle AdditionalProperties
func (a *Interface_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Interface_ConnectedEndpoint to handle AdditionalProperties
func (a Interface_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Interface_CustomFields. Returns the specified
// element and whether it was found
func (a Interface_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Interface_CustomFields
func (a *Interface_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Interface_CustomFields to handle AdditionalProperties
func (a *Interface_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Interface_CustomFields to handle AdditionalProperties
func (a Interface_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for InterfaceTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a InterfaceTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for InterfaceTemplate_CustomFields
func (a *InterfaceTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for InterfaceTemplate_CustomFields to handle AdditionalProperties
func (a *InterfaceTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for InterfaceTemplate_CustomFields to handle AdditionalProperties
func (a InterfaceTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for InventoryItem_CustomFields. Returns the specified
// element and whether it was found
func (a InventoryItem_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for InventoryItem_CustomFields
func (a *InventoryItem_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for InventoryItem_CustomFields to handle AdditionalProperties
func (a *InventoryItem_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for InventoryItem_CustomFields to handle AdditionalProperties
func (a InventoryItem_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Job_CustomFields. Returns the specified
// element and whether it was found
func (a Job_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Job_CustomFields
func (a *Job_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Job_CustomFields to handle AdditionalProperties
func (a *Job_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Job_CustomFields to handle AdditionalProperties
func (a Job_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for JobClassDetail_Vars. Returns the specified
// element and whether it was found
func (a JobClassDetail_Vars) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for JobClassDetail_Vars
func (a *JobClassDetail_Vars) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for JobClassDetail_Vars to handle AdditionalProperties
func (a *JobClassDetail_Vars) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for JobClassDetail_Vars to handle AdditionalProperties
func (a JobClassDetail_Vars) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for JobInput_Data. Returns the specified
// element and whether it was found
func (a JobInput_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for JobInput_Data
func (a *JobInput_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for JobInput_Data to handle AdditionalProperties
func (a *JobInput_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for JobInput_Data to handle AdditionalProperties
func (a JobInput_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for JobResult_Data. Returns the specified
// element and whether it was found
func (a JobResult_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for JobResult_Data
func (a *JobResult_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for JobResult_Data to handle AdditionalProperties
func (a *JobResult_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for JobResult_Data to handle AdditionalProperties
func (a JobResult_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for JobVariable_Choices. Returns the specified
// element and whether it was found
func (a JobVariable_Choices) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for JobVariable_Choices
func (a *JobVariable_Choices) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for JobVariable_Choices to handle AdditionalProperties
func (a *JobVariable_Choices) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for JobVariable_Choices to handle AdditionalProperties
func (a JobVariable_Choices) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for JobVariable_Default. Returns the specified
// element and whether it was found
func (a JobVariable_Default) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for JobVariable_Default
func (a *JobVariable_Default) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for JobVariable_Default to handle AdditionalProperties
func (a *JobVariable_Default) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for JobVariable_Default to handle AdditionalProperties
func (a JobVariable_Default) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Manufacturer_CustomFields. Returns the specified
// element and whether it was found
func (a Manufacturer_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Manufacturer_CustomFields
func (a *Manufacturer_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Manufacturer_CustomFields to handle AdditionalProperties
func (a *Manufacturer_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Manufacturer_CustomFields to handle AdditionalProperties
func (a Manufacturer_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ObjectChange_ChangedObject. Returns the specified
// element and whether it was found
func (a ObjectChange_ChangedObject) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ObjectChange_ChangedObject
func (a *ObjectChange_ChangedObject) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ObjectChange_ChangedObject to handle AdditionalProperties
func (a *ObjectChange_ChangedObject) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ObjectChange_ChangedObject to handle AdditionalProperties
func (a ObjectChange_ChangedObject) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ObjectChange_ObjectData. Returns the specified
// element and whether it was found
func (a ObjectChange_ObjectData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ObjectChange_ObjectData
func (a *ObjectChange_ObjectData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ObjectChange_ObjectData to handle AdditionalProperties
func (a *ObjectChange_ObjectData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ObjectChange_ObjectData to handle AdditionalProperties
func (a ObjectChange_ObjectData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ObjectPermission_Actions. Returns the specified
// element and whether it was found
func (a ObjectPermission_Actions) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ObjectPermission_Actions
func (a *ObjectPermission_Actions) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ObjectPermission_Actions to handle AdditionalProperties
func (a *ObjectPermission_Actions) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ObjectPermission_Actions to handle AdditionalProperties
func (a ObjectPermission_Actions) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ObjectPermission_Constraints. Returns the specified
// element and whether it was found
func (a ObjectPermission_Constraints) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ObjectPermission_Constraints
func (a *ObjectPermission_Constraints) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ObjectPermission_Constraints to handle AdditionalProperties
func (a *ObjectPermission_Constraints) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ObjectPermission_Constraints to handle AdditionalProperties
func (a ObjectPermission_Constraints) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedCircuitType_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedCircuitType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedCircuitType_CustomFields
func (a *PatchedCircuitType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedCircuitType_CustomFields to handle AdditionalProperties
func (a *PatchedCircuitType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedCircuitType_CustomFields to handle AdditionalProperties
func (a PatchedCircuitType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedClusterGroup_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedClusterGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedClusterGroup_CustomFields
func (a *PatchedClusterGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedClusterGroup_CustomFields to handle AdditionalProperties
func (a *PatchedClusterGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedClusterGroup_CustomFields to handle AdditionalProperties
func (a PatchedClusterGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedClusterType_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedClusterType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedClusterType_CustomFields
func (a *PatchedClusterType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedClusterType_CustomFields to handle AdditionalProperties
func (a *PatchedClusterType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedClusterType_CustomFields to handle AdditionalProperties
func (a PatchedClusterType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedConfigContextSchema_DataSchema. Returns the specified
// element and whether it was found
func (a PatchedConfigContextSchema_DataSchema) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedConfigContextSchema_DataSchema
func (a *PatchedConfigContextSchema_DataSchema) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedConfigContextSchema_DataSchema to handle AdditionalProperties
func (a *PatchedConfigContextSchema_DataSchema) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedConfigContextSchema_DataSchema to handle AdditionalProperties
func (a PatchedConfigContextSchema_DataSchema) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedConfigContextSchema_Owner. Returns the specified
// element and whether it was found
func (a PatchedConfigContextSchema_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedConfigContextSchema_Owner
func (a *PatchedConfigContextSchema_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedConfigContextSchema_Owner to handle AdditionalProperties
func (a *PatchedConfigContextSchema_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedConfigContextSchema_Owner to handle AdditionalProperties
func (a PatchedConfigContextSchema_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedDeviceRole_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedDeviceRole_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedDeviceRole_CustomFields
func (a *PatchedDeviceRole_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedDeviceRole_CustomFields to handle AdditionalProperties
func (a *PatchedDeviceRole_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedDeviceRole_CustomFields to handle AdditionalProperties
func (a PatchedDeviceRole_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedDynamicGroup_Filter. Returns the specified
// element and whether it was found
func (a PatchedDynamicGroup_Filter) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedDynamicGroup_Filter
func (a *PatchedDynamicGroup_Filter) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedDynamicGroup_Filter to handle AdditionalProperties
func (a *PatchedDynamicGroup_Filter) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedDynamicGroup_Filter to handle AdditionalProperties
func (a PatchedDynamicGroup_Filter) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedExportTemplate_Owner. Returns the specified
// element and whether it was found
func (a PatchedExportTemplate_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedExportTemplate_Owner
func (a *PatchedExportTemplate_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedExportTemplate_Owner to handle AdditionalProperties
func (a *PatchedExportTemplate_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedExportTemplate_Owner to handle AdditionalProperties
func (a PatchedExportTemplate_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedGraphQLQuery_Variables. Returns the specified
// element and whether it was found
func (a PatchedGraphQLQuery_Variables) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedGraphQLQuery_Variables
func (a *PatchedGraphQLQuery_Variables) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedGraphQLQuery_Variables to handle AdditionalProperties
func (a *PatchedGraphQLQuery_Variables) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedGraphQLQuery_Variables to handle AdditionalProperties
func (a PatchedGraphQLQuery_Variables) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedImageAttachment_Parent. Returns the specified
// element and whether it was found
func (a PatchedImageAttachment_Parent) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedImageAttachment_Parent
func (a *PatchedImageAttachment_Parent) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedImageAttachment_Parent to handle AdditionalProperties
func (a *PatchedImageAttachment_Parent) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedImageAttachment_Parent to handle AdditionalProperties
func (a PatchedImageAttachment_Parent) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedJob_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedJob_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedJob_CustomFields
func (a *PatchedJob_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedJob_CustomFields to handle AdditionalProperties
func (a *PatchedJob_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedJob_CustomFields to handle AdditionalProperties
func (a PatchedJob_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedJobResult_Data. Returns the specified
// element and whether it was found
func (a PatchedJobResult_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedJobResult_Data
func (a *PatchedJobResult_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedJobResult_Data to handle AdditionalProperties
func (a *PatchedJobResult_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedJobResult_Data to handle AdditionalProperties
func (a PatchedJobResult_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedManufacturer_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedManufacturer_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedManufacturer_CustomFields
func (a *PatchedManufacturer_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedManufacturer_CustomFields to handle AdditionalProperties
func (a *PatchedManufacturer_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedManufacturer_CustomFields to handle AdditionalProperties
func (a PatchedManufacturer_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedProvider_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedProvider_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedProvider_CustomFields
func (a *PatchedProvider_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedProvider_CustomFields to handle AdditionalProperties
func (a *PatchedProvider_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedProvider_CustomFields to handle AdditionalProperties
func (a PatchedProvider_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedRIR_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedRIR_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedRIR_CustomFields
func (a *PatchedRIR_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedRIR_CustomFields to handle AdditionalProperties
func (a *PatchedRIR_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedRIR_CustomFields to handle AdditionalProperties
func (a PatchedRIR_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedRackRole_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedRackRole_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedRackRole_CustomFields
func (a *PatchedRackRole_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedRackRole_CustomFields to handle AdditionalProperties
func (a *PatchedRackRole_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedRackRole_CustomFields to handle AdditionalProperties
func (a PatchedRackRole_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedRelationship_DestinationFilter. Returns the specified
// element and whether it was found
func (a PatchedRelationship_DestinationFilter) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedRelationship_DestinationFilter
func (a *PatchedRelationship_DestinationFilter) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedRelationship_DestinationFilter to handle AdditionalProperties
func (a *PatchedRelationship_DestinationFilter) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedRelationship_DestinationFilter to handle AdditionalProperties
func (a PatchedRelationship_DestinationFilter) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedRelationship_SourceFilter. Returns the specified
// element and whether it was found
func (a PatchedRelationship_SourceFilter) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedRelationship_SourceFilter
func (a *PatchedRelationship_SourceFilter) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedRelationship_SourceFilter to handle AdditionalProperties
func (a *PatchedRelationship_SourceFilter) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedRelationship_SourceFilter to handle AdditionalProperties
func (a PatchedRelationship_SourceFilter) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedRole_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedRole_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedRole_CustomFields
func (a *PatchedRole_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedRole_CustomFields to handle AdditionalProperties
func (a *PatchedRole_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedRole_CustomFields to handle AdditionalProperties
func (a PatchedRole_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedSecret_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedSecret_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedSecret_CustomFields
func (a *PatchedSecret_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedSecret_CustomFields to handle AdditionalProperties
func (a *PatchedSecret_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedSecret_CustomFields to handle AdditionalProperties
func (a PatchedSecret_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedSecret_Parameters. Returns the specified
// element and whether it was found
func (a PatchedSecret_Parameters) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedSecret_Parameters
func (a *PatchedSecret_Parameters) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedSecret_Parameters to handle AdditionalProperties
func (a *PatchedSecret_Parameters) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedSecret_Parameters to handle AdditionalProperties
func (a PatchedSecret_Parameters) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedSecretsGroup_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedSecretsGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedSecretsGroup_CustomFields
func (a *PatchedSecretsGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedSecretsGroup_CustomFields to handle AdditionalProperties
func (a *PatchedSecretsGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedSecretsGroup_CustomFields to handle AdditionalProperties
func (a PatchedSecretsGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedStatus_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedStatus_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedStatus_CustomFields
func (a *PatchedStatus_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedStatus_CustomFields to handle AdditionalProperties
func (a *PatchedStatus_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedStatus_CustomFields to handle AdditionalProperties
func (a PatchedStatus_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedTagSerializerVersion13_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedTagSerializerVersion13_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedTagSerializerVersion13_CustomFields
func (a *PatchedTagSerializerVersion13_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedTagSerializerVersion13_CustomFields to handle AdditionalProperties
func (a *PatchedTagSerializerVersion13_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedTagSerializerVersion13_CustomFields to handle AdditionalProperties
func (a PatchedTagSerializerVersion13_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableAggregate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableAggregate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableAggregate_ComputedFields
func (a *PatchedWritableAggregate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableAggregate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableAggregate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableAggregate_ComputedFields to handle AdditionalProperties
func (a PatchedWritableAggregate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableAggregate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableAggregate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableAggregate_CustomFields
func (a *PatchedWritableAggregate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableAggregate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableAggregate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableAggregate_CustomFields to handle AdditionalProperties
func (a PatchedWritableAggregate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCable_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableCable_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCable_ComputedFields
func (a *PatchedWritableCable_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCable_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableCable_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCable_ComputedFields to handle AdditionalProperties
func (a PatchedWritableCable_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCable_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableCable_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCable_CustomFields
func (a *PatchedWritableCable_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCable_CustomFields to handle AdditionalProperties
func (a *PatchedWritableCable_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCable_CustomFields to handle AdditionalProperties
func (a PatchedWritableCable_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCable_TerminationA. Returns the specified
// element and whether it was found
func (a PatchedWritableCable_TerminationA) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCable_TerminationA
func (a *PatchedWritableCable_TerminationA) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCable_TerminationA to handle AdditionalProperties
func (a *PatchedWritableCable_TerminationA) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCable_TerminationA to handle AdditionalProperties
func (a PatchedWritableCable_TerminationA) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCable_TerminationB. Returns the specified
// element and whether it was found
func (a PatchedWritableCable_TerminationB) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCable_TerminationB
func (a *PatchedWritableCable_TerminationB) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCable_TerminationB to handle AdditionalProperties
func (a *PatchedWritableCable_TerminationB) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCable_TerminationB to handle AdditionalProperties
func (a PatchedWritableCable_TerminationB) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCircuit_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableCircuit_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCircuit_ComputedFields
func (a *PatchedWritableCircuit_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCircuit_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableCircuit_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCircuit_ComputedFields to handle AdditionalProperties
func (a PatchedWritableCircuit_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCircuit_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableCircuit_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCircuit_CustomFields
func (a *PatchedWritableCircuit_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCircuit_CustomFields to handle AdditionalProperties
func (a *PatchedWritableCircuit_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCircuit_CustomFields to handle AdditionalProperties
func (a PatchedWritableCircuit_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCircuitTermination_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritableCircuitTermination_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCircuitTermination_CablePeer
func (a *PatchedWritableCircuitTermination_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCircuitTermination_CablePeer to handle AdditionalProperties
func (a *PatchedWritableCircuitTermination_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCircuitTermination_CablePeer to handle AdditionalProperties
func (a PatchedWritableCircuitTermination_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCircuitTermination_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritableCircuitTermination_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCircuitTermination_ConnectedEndpoint
func (a *PatchedWritableCircuitTermination_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCircuitTermination_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritableCircuitTermination_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCircuitTermination_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritableCircuitTermination_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCluster_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableCluster_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCluster_ComputedFields
func (a *PatchedWritableCluster_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCluster_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableCluster_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCluster_ComputedFields to handle AdditionalProperties
func (a PatchedWritableCluster_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCluster_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableCluster_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCluster_CustomFields
func (a *PatchedWritableCluster_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCluster_CustomFields to handle AdditionalProperties
func (a *PatchedWritableCluster_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCluster_CustomFields to handle AdditionalProperties
func (a PatchedWritableCluster_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConfigContext_Data. Returns the specified
// element and whether it was found
func (a PatchedWritableConfigContext_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConfigContext_Data
func (a *PatchedWritableConfigContext_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConfigContext_Data to handle AdditionalProperties
func (a *PatchedWritableConfigContext_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConfigContext_Data to handle AdditionalProperties
func (a PatchedWritableConfigContext_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConfigContext_Owner. Returns the specified
// element and whether it was found
func (a PatchedWritableConfigContext_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConfigContext_Owner
func (a *PatchedWritableConfigContext_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConfigContext_Owner to handle AdditionalProperties
func (a *PatchedWritableConfigContext_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConfigContext_Owner to handle AdditionalProperties
func (a PatchedWritableConfigContext_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsolePort_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritableConsolePort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsolePort_CablePeer
func (a *PatchedWritableConsolePort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsolePort_CablePeer to handle AdditionalProperties
func (a *PatchedWritableConsolePort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsolePort_CablePeer to handle AdditionalProperties
func (a PatchedWritableConsolePort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsolePort_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsolePort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsolePort_ComputedFields
func (a *PatchedWritableConsolePort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsolePort_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableConsolePort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsolePort_ComputedFields to handle AdditionalProperties
func (a PatchedWritableConsolePort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsolePort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritableConsolePort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsolePort_ConnectedEndpoint
func (a *PatchedWritableConsolePort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsolePort_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritableConsolePort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsolePort_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritableConsolePort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsolePort_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsolePort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsolePort_CustomFields
func (a *PatchedWritableConsolePort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsolePort_CustomFields to handle AdditionalProperties
func (a *PatchedWritableConsolePort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsolePort_CustomFields to handle AdditionalProperties
func (a PatchedWritableConsolePort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsolePortTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsolePortTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsolePortTemplate_ComputedFields
func (a *PatchedWritableConsolePortTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsolePortTemplate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableConsolePortTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsolePortTemplate_ComputedFields to handle AdditionalProperties
func (a PatchedWritableConsolePortTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsolePortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsolePortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsolePortTemplate_CustomFields
func (a *PatchedWritableConsolePortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsolePortTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableConsolePortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsolePortTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritableConsolePortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsoleServerPort_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritableConsoleServerPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsoleServerPort_CablePeer
func (a *PatchedWritableConsoleServerPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsoleServerPort_CablePeer to handle AdditionalProperties
func (a *PatchedWritableConsoleServerPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsoleServerPort_CablePeer to handle AdditionalProperties
func (a PatchedWritableConsoleServerPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsoleServerPort_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsoleServerPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsoleServerPort_ComputedFields
func (a *PatchedWritableConsoleServerPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsoleServerPort_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableConsoleServerPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsoleServerPort_ComputedFields to handle AdditionalProperties
func (a PatchedWritableConsoleServerPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsoleServerPort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritableConsoleServerPort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsoleServerPort_ConnectedEndpoint
func (a *PatchedWritableConsoleServerPort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsoleServerPort_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritableConsoleServerPort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsoleServerPort_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritableConsoleServerPort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsoleServerPort_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsoleServerPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsoleServerPort_CustomFields
func (a *PatchedWritableConsoleServerPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsoleServerPort_CustomFields to handle AdditionalProperties
func (a *PatchedWritableConsoleServerPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsoleServerPort_CustomFields to handle AdditionalProperties
func (a PatchedWritableConsoleServerPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableConsoleServerPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableConsoleServerPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableConsoleServerPortTemplate_CustomFields
func (a *PatchedWritableConsoleServerPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableConsoleServerPortTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableConsoleServerPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableConsoleServerPortTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritableConsoleServerPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableCustomField_Default. Returns the specified
// element and whether it was found
func (a PatchedWritableCustomField_Default) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableCustomField_Default
func (a *PatchedWritableCustomField_Default) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableCustomField_Default to handle AdditionalProperties
func (a *PatchedWritableCustomField_Default) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableCustomField_Default to handle AdditionalProperties
func (a PatchedWritableCustomField_Default) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceBay_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceBay_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceBay_ComputedFields
func (a *PatchedWritableDeviceBay_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceBay_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableDeviceBay_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceBay_ComputedFields to handle AdditionalProperties
func (a PatchedWritableDeviceBay_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceBay_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceBay_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceBay_CustomFields
func (a *PatchedWritableDeviceBay_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceBay_CustomFields to handle AdditionalProperties
func (a *PatchedWritableDeviceBay_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceBay_CustomFields to handle AdditionalProperties
func (a PatchedWritableDeviceBay_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceBayTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceBayTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceBayTemplate_ComputedFields
func (a *PatchedWritableDeviceBayTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceBayTemplate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableDeviceBayTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceBayTemplate_ComputedFields to handle AdditionalProperties
func (a PatchedWritableDeviceBayTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceBayTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceBayTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceBayTemplate_CustomFields
func (a *PatchedWritableDeviceBayTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceBayTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableDeviceBayTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceBayTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritableDeviceBayTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceType_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceType_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceType_ComputedFields
func (a *PatchedWritableDeviceType_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceType_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableDeviceType_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceType_ComputedFields to handle AdditionalProperties
func (a PatchedWritableDeviceType_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceType_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceType_CustomFields
func (a *PatchedWritableDeviceType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceType_CustomFields to handle AdditionalProperties
func (a *PatchedWritableDeviceType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceType_CustomFields to handle AdditionalProperties
func (a PatchedWritableDeviceType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceWithConfigContext_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceWithConfigContext_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceWithConfigContext_ComputedFields
func (a *PatchedWritableDeviceWithConfigContext_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableDeviceWithConfigContext_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_ComputedFields to handle AdditionalProperties
func (a PatchedWritableDeviceWithConfigContext_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceWithConfigContext_ConfigContext. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceWithConfigContext_ConfigContext) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceWithConfigContext_ConfigContext
func (a *PatchedWritableDeviceWithConfigContext_ConfigContext) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_ConfigContext to handle AdditionalProperties
func (a *PatchedWritableDeviceWithConfigContext_ConfigContext) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_ConfigContext to handle AdditionalProperties
func (a PatchedWritableDeviceWithConfigContext_ConfigContext) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceWithConfigContext_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceWithConfigContext_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceWithConfigContext_CustomFields
func (a *PatchedWritableDeviceWithConfigContext_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_CustomFields to handle AdditionalProperties
func (a *PatchedWritableDeviceWithConfigContext_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_CustomFields to handle AdditionalProperties
func (a PatchedWritableDeviceWithConfigContext_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableDeviceWithConfigContext_LocalContextData. Returns the specified
// element and whether it was found
func (a PatchedWritableDeviceWithConfigContext_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableDeviceWithConfigContext_LocalContextData
func (a *PatchedWritableDeviceWithConfigContext_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_LocalContextData to handle AdditionalProperties
func (a *PatchedWritableDeviceWithConfigContext_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableDeviceWithConfigContext_LocalContextData to handle AdditionalProperties
func (a PatchedWritableDeviceWithConfigContext_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableFrontPort_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritableFrontPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableFrontPort_CablePeer
func (a *PatchedWritableFrontPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableFrontPort_CablePeer to handle AdditionalProperties
func (a *PatchedWritableFrontPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableFrontPort_CablePeer to handle AdditionalProperties
func (a PatchedWritableFrontPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableFrontPort_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableFrontPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableFrontPort_ComputedFields
func (a *PatchedWritableFrontPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableFrontPort_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableFrontPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableFrontPort_ComputedFields to handle AdditionalProperties
func (a PatchedWritableFrontPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableFrontPort_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableFrontPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableFrontPort_CustomFields
func (a *PatchedWritableFrontPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableFrontPort_CustomFields to handle AdditionalProperties
func (a *PatchedWritableFrontPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableFrontPort_CustomFields to handle AdditionalProperties
func (a PatchedWritableFrontPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableFrontPortTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableFrontPortTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableFrontPortTemplate_ComputedFields
func (a *PatchedWritableFrontPortTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableFrontPortTemplate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableFrontPortTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableFrontPortTemplate_ComputedFields to handle AdditionalProperties
func (a PatchedWritableFrontPortTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableFrontPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableFrontPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableFrontPortTemplate_CustomFields
func (a *PatchedWritableFrontPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableFrontPortTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableFrontPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableFrontPortTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritableFrontPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableGitRepository_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableGitRepository_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableGitRepository_ComputedFields
func (a *PatchedWritableGitRepository_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableGitRepository_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableGitRepository_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableGitRepository_ComputedFields to handle AdditionalProperties
func (a PatchedWritableGitRepository_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableGitRepository_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableGitRepository_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableGitRepository_CustomFields
func (a *PatchedWritableGitRepository_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableGitRepository_CustomFields to handle AdditionalProperties
func (a *PatchedWritableGitRepository_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableGitRepository_CustomFields to handle AdditionalProperties
func (a PatchedWritableGitRepository_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableIPAddress_AssignedObject. Returns the specified
// element and whether it was found
func (a PatchedWritableIPAddress_AssignedObject) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableIPAddress_AssignedObject
func (a *PatchedWritableIPAddress_AssignedObject) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableIPAddress_AssignedObject to handle AdditionalProperties
func (a *PatchedWritableIPAddress_AssignedObject) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableIPAddress_AssignedObject to handle AdditionalProperties
func (a PatchedWritableIPAddress_AssignedObject) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableIPAddress_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableIPAddress_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableIPAddress_ComputedFields
func (a *PatchedWritableIPAddress_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableIPAddress_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableIPAddress_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableIPAddress_ComputedFields to handle AdditionalProperties
func (a PatchedWritableIPAddress_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableIPAddress_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableIPAddress_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableIPAddress_CustomFields
func (a *PatchedWritableIPAddress_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableIPAddress_CustomFields to handle AdditionalProperties
func (a *PatchedWritableIPAddress_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableIPAddress_CustomFields to handle AdditionalProperties
func (a PatchedWritableIPAddress_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInterface_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritableInterface_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInterface_CablePeer
func (a *PatchedWritableInterface_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInterface_CablePeer to handle AdditionalProperties
func (a *PatchedWritableInterface_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInterface_CablePeer to handle AdditionalProperties
func (a PatchedWritableInterface_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInterface_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableInterface_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInterface_ComputedFields
func (a *PatchedWritableInterface_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInterface_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableInterface_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInterface_ComputedFields to handle AdditionalProperties
func (a PatchedWritableInterface_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInterface_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritableInterface_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInterface_ConnectedEndpoint
func (a *PatchedWritableInterface_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInterface_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritableInterface_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInterface_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritableInterface_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInterface_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableInterface_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInterface_CustomFields
func (a *PatchedWritableInterface_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInterface_CustomFields to handle AdditionalProperties
func (a *PatchedWritableInterface_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInterface_CustomFields to handle AdditionalProperties
func (a PatchedWritableInterface_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInterfaceTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableInterfaceTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInterfaceTemplate_ComputedFields
func (a *PatchedWritableInterfaceTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInterfaceTemplate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableInterfaceTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInterfaceTemplate_ComputedFields to handle AdditionalProperties
func (a PatchedWritableInterfaceTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInterfaceTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableInterfaceTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInterfaceTemplate_CustomFields
func (a *PatchedWritableInterfaceTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInterfaceTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableInterfaceTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInterfaceTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritableInterfaceTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInventoryItem_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableInventoryItem_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInventoryItem_ComputedFields
func (a *PatchedWritableInventoryItem_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInventoryItem_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableInventoryItem_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInventoryItem_ComputedFields to handle AdditionalProperties
func (a PatchedWritableInventoryItem_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableInventoryItem_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableInventoryItem_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableInventoryItem_CustomFields
func (a *PatchedWritableInventoryItem_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableInventoryItem_CustomFields to handle AdditionalProperties
func (a *PatchedWritableInventoryItem_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableInventoryItem_CustomFields to handle AdditionalProperties
func (a PatchedWritableInventoryItem_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableObjectPermission_Actions. Returns the specified
// element and whether it was found
func (a PatchedWritableObjectPermission_Actions) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableObjectPermission_Actions
func (a *PatchedWritableObjectPermission_Actions) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableObjectPermission_Actions to handle AdditionalProperties
func (a *PatchedWritableObjectPermission_Actions) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableObjectPermission_Actions to handle AdditionalProperties
func (a PatchedWritableObjectPermission_Actions) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableObjectPermission_Constraints. Returns the specified
// element and whether it was found
func (a PatchedWritableObjectPermission_Constraints) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableObjectPermission_Constraints
func (a *PatchedWritableObjectPermission_Constraints) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableObjectPermission_Constraints to handle AdditionalProperties
func (a *PatchedWritableObjectPermission_Constraints) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableObjectPermission_Constraints to handle AdditionalProperties
func (a PatchedWritableObjectPermission_Constraints) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePlatform_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePlatform_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePlatform_ComputedFields
func (a *PatchedWritablePlatform_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePlatform_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePlatform_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePlatform_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePlatform_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePlatform_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePlatform_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePlatform_CustomFields
func (a *PatchedWritablePlatform_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePlatform_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePlatform_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePlatform_CustomFields to handle AdditionalProperties
func (a PatchedWritablePlatform_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePlatform_NapalmArgs. Returns the specified
// element and whether it was found
func (a PatchedWritablePlatform_NapalmArgs) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePlatform_NapalmArgs
func (a *PatchedWritablePlatform_NapalmArgs) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePlatform_NapalmArgs to handle AdditionalProperties
func (a *PatchedWritablePlatform_NapalmArgs) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePlatform_NapalmArgs to handle AdditionalProperties
func (a PatchedWritablePlatform_NapalmArgs) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerFeed_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerFeed_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerFeed_CablePeer
func (a *PatchedWritablePowerFeed_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerFeed_CablePeer to handle AdditionalProperties
func (a *PatchedWritablePowerFeed_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerFeed_CablePeer to handle AdditionalProperties
func (a PatchedWritablePowerFeed_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerFeed_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerFeed_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerFeed_ComputedFields
func (a *PatchedWritablePowerFeed_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerFeed_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePowerFeed_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerFeed_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePowerFeed_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerFeed_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerFeed_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerFeed_ConnectedEndpoint
func (a *PatchedWritablePowerFeed_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerFeed_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritablePowerFeed_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerFeed_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritablePowerFeed_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerFeed_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerFeed_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerFeed_CustomFields
func (a *PatchedWritablePowerFeed_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerFeed_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePowerFeed_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerFeed_CustomFields to handle AdditionalProperties
func (a PatchedWritablePowerFeed_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerOutlet_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerOutlet_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerOutlet_CablePeer
func (a *PatchedWritablePowerOutlet_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerOutlet_CablePeer to handle AdditionalProperties
func (a *PatchedWritablePowerOutlet_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerOutlet_CablePeer to handle AdditionalProperties
func (a PatchedWritablePowerOutlet_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerOutlet_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerOutlet_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerOutlet_ComputedFields
func (a *PatchedWritablePowerOutlet_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerOutlet_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePowerOutlet_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerOutlet_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePowerOutlet_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerOutlet_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerOutlet_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerOutlet_ConnectedEndpoint
func (a *PatchedWritablePowerOutlet_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerOutlet_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritablePowerOutlet_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerOutlet_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritablePowerOutlet_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerOutlet_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerOutlet_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerOutlet_CustomFields
func (a *PatchedWritablePowerOutlet_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerOutlet_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePowerOutlet_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerOutlet_CustomFields to handle AdditionalProperties
func (a PatchedWritablePowerOutlet_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerOutletTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerOutletTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerOutletTemplate_ComputedFields
func (a *PatchedWritablePowerOutletTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerOutletTemplate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePowerOutletTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerOutletTemplate_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePowerOutletTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerOutletTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerOutletTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerOutletTemplate_CustomFields
func (a *PatchedWritablePowerOutletTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerOutletTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePowerOutletTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerOutletTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritablePowerOutletTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPanel_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPanel_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPanel_ComputedFields
func (a *PatchedWritablePowerPanel_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPanel_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePowerPanel_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPanel_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePowerPanel_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPanel_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPanel_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPanel_CustomFields
func (a *PatchedWritablePowerPanel_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPanel_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePowerPanel_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPanel_CustomFields to handle AdditionalProperties
func (a PatchedWritablePowerPanel_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPort_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPort_CablePeer
func (a *PatchedWritablePowerPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPort_CablePeer to handle AdditionalProperties
func (a *PatchedWritablePowerPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPort_CablePeer to handle AdditionalProperties
func (a PatchedWritablePowerPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPort_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPort_ComputedFields
func (a *PatchedWritablePowerPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPort_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePowerPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPort_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePowerPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPort_ConnectedEndpoint
func (a *PatchedWritablePowerPort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPort_ConnectedEndpoint to handle AdditionalProperties
func (a *PatchedWritablePowerPort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPort_ConnectedEndpoint to handle AdditionalProperties
func (a PatchedWritablePowerPort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPort_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPort_CustomFields
func (a *PatchedWritablePowerPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPort_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePowerPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPort_CustomFields to handle AdditionalProperties
func (a PatchedWritablePowerPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPortTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPortTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPortTemplate_ComputedFields
func (a *PatchedWritablePowerPortTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPortTemplate_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePowerPortTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPortTemplate_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePowerPortTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePowerPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePowerPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePowerPortTemplate_CustomFields
func (a *PatchedWritablePowerPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePowerPortTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePowerPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePowerPortTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritablePowerPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePrefix_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePrefix_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePrefix_ComputedFields
func (a *PatchedWritablePrefix_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePrefix_ComputedFields to handle AdditionalProperties
func (a *PatchedWritablePrefix_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePrefix_ComputedFields to handle AdditionalProperties
func (a PatchedWritablePrefix_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritablePrefix_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritablePrefix_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritablePrefix_CustomFields
func (a *PatchedWritablePrefix_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritablePrefix_CustomFields to handle AdditionalProperties
func (a *PatchedWritablePrefix_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritablePrefix_CustomFields to handle AdditionalProperties
func (a PatchedWritablePrefix_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableProviderNetwork_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableProviderNetwork_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableProviderNetwork_ComputedFields
func (a *PatchedWritableProviderNetwork_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableProviderNetwork_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableProviderNetwork_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableProviderNetwork_ComputedFields to handle AdditionalProperties
func (a PatchedWritableProviderNetwork_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableProviderNetwork_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableProviderNetwork_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableProviderNetwork_CustomFields
func (a *PatchedWritableProviderNetwork_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableProviderNetwork_CustomFields to handle AdditionalProperties
func (a *PatchedWritableProviderNetwork_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableProviderNetwork_CustomFields to handle AdditionalProperties
func (a PatchedWritableProviderNetwork_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRack_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRack_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRack_ComputedFields
func (a *PatchedWritableRack_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRack_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableRack_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRack_ComputedFields to handle AdditionalProperties
func (a PatchedWritableRack_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRack_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRack_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRack_CustomFields
func (a *PatchedWritableRack_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRack_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRack_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRack_CustomFields to handle AdditionalProperties
func (a PatchedWritableRack_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRackGroup_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRackGroup_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRackGroup_ComputedFields
func (a *PatchedWritableRackGroup_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRackGroup_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableRackGroup_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRackGroup_ComputedFields to handle AdditionalProperties
func (a PatchedWritableRackGroup_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRackGroup_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRackGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRackGroup_CustomFields
func (a *PatchedWritableRackGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRackGroup_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRackGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRackGroup_CustomFields to handle AdditionalProperties
func (a PatchedWritableRackGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRackReservation_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRackReservation_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRackReservation_ComputedFields
func (a *PatchedWritableRackReservation_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRackReservation_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableRackReservation_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRackReservation_ComputedFields to handle AdditionalProperties
func (a PatchedWritableRackReservation_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRackReservation_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRackReservation_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRackReservation_CustomFields
func (a *PatchedWritableRackReservation_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRackReservation_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRackReservation_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRackReservation_CustomFields to handle AdditionalProperties
func (a PatchedWritableRackReservation_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRackReservation_Units. Returns the specified
// element and whether it was found
func (a PatchedWritableRackReservation_Units) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRackReservation_Units
func (a *PatchedWritableRackReservation_Units) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRackReservation_Units to handle AdditionalProperties
func (a *PatchedWritableRackReservation_Units) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRackReservation_Units to handle AdditionalProperties
func (a PatchedWritableRackReservation_Units) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRearPort_CablePeer. Returns the specified
// element and whether it was found
func (a PatchedWritableRearPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRearPort_CablePeer
func (a *PatchedWritableRearPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRearPort_CablePeer to handle AdditionalProperties
func (a *PatchedWritableRearPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRearPort_CablePeer to handle AdditionalProperties
func (a PatchedWritableRearPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRearPort_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRearPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRearPort_ComputedFields
func (a *PatchedWritableRearPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRearPort_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableRearPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRearPort_ComputedFields to handle AdditionalProperties
func (a PatchedWritableRearPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRearPort_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRearPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRearPort_CustomFields
func (a *PatchedWritableRearPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRearPort_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRearPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRearPort_CustomFields to handle AdditionalProperties
func (a PatchedWritableRearPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRearPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRearPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRearPortTemplate_CustomFields
func (a *PatchedWritableRearPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRearPortTemplate_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRearPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRearPortTemplate_CustomFields to handle AdditionalProperties
func (a PatchedWritableRearPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRegion_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRegion_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRegion_ComputedFields
func (a *PatchedWritableRegion_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRegion_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableRegion_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRegion_ComputedFields to handle AdditionalProperties
func (a PatchedWritableRegion_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRegion_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRegion_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRegion_CustomFields
func (a *PatchedWritableRegion_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRegion_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRegion_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRegion_CustomFields to handle AdditionalProperties
func (a PatchedWritableRegion_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRouteTarget_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRouteTarget_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRouteTarget_ComputedFields
func (a *PatchedWritableRouteTarget_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRouteTarget_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableRouteTarget_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRouteTarget_ComputedFields to handle AdditionalProperties
func (a PatchedWritableRouteTarget_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableRouteTarget_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableRouteTarget_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableRouteTarget_CustomFields
func (a *PatchedWritableRouteTarget_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableRouteTarget_CustomFields to handle AdditionalProperties
func (a *PatchedWritableRouteTarget_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableRouteTarget_CustomFields to handle AdditionalProperties
func (a PatchedWritableRouteTarget_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableService_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableService_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableService_ComputedFields
func (a *PatchedWritableService_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableService_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableService_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableService_ComputedFields to handle AdditionalProperties
func (a PatchedWritableService_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableService_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableService_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableService_CustomFields
func (a *PatchedWritableService_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableService_CustomFields to handle AdditionalProperties
func (a *PatchedWritableService_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableService_CustomFields to handle AdditionalProperties
func (a PatchedWritableService_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableSite_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableSite_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableSite_ComputedFields
func (a *PatchedWritableSite_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableSite_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableSite_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableSite_ComputedFields to handle AdditionalProperties
func (a PatchedWritableSite_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableSite_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableSite_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableSite_CustomFields
func (a *PatchedWritableSite_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableSite_CustomFields to handle AdditionalProperties
func (a *PatchedWritableSite_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableSite_CustomFields to handle AdditionalProperties
func (a PatchedWritableSite_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableTenant_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableTenant_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableTenant_ComputedFields
func (a *PatchedWritableTenant_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableTenant_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableTenant_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableTenant_ComputedFields to handle AdditionalProperties
func (a PatchedWritableTenant_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableTenant_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableTenant_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableTenant_CustomFields
func (a *PatchedWritableTenant_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableTenant_CustomFields to handle AdditionalProperties
func (a *PatchedWritableTenant_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableTenant_CustomFields to handle AdditionalProperties
func (a PatchedWritableTenant_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableTenantGroup_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableTenantGroup_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableTenantGroup_ComputedFields
func (a *PatchedWritableTenantGroup_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableTenantGroup_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableTenantGroup_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableTenantGroup_ComputedFields to handle AdditionalProperties
func (a PatchedWritableTenantGroup_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableTenantGroup_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableTenantGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableTenantGroup_CustomFields
func (a *PatchedWritableTenantGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableTenantGroup_CustomFields to handle AdditionalProperties
func (a *PatchedWritableTenantGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableTenantGroup_CustomFields to handle AdditionalProperties
func (a PatchedWritableTenantGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVLAN_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVLAN_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVLAN_ComputedFields
func (a *PatchedWritableVLAN_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVLAN_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableVLAN_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVLAN_ComputedFields to handle AdditionalProperties
func (a PatchedWritableVLAN_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVLAN_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVLAN_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVLAN_CustomFields
func (a *PatchedWritableVLAN_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVLAN_CustomFields to handle AdditionalProperties
func (a *PatchedWritableVLAN_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVLAN_CustomFields to handle AdditionalProperties
func (a PatchedWritableVLAN_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVLANGroup_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVLANGroup_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVLANGroup_ComputedFields
func (a *PatchedWritableVLANGroup_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVLANGroup_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableVLANGroup_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVLANGroup_ComputedFields to handle AdditionalProperties
func (a PatchedWritableVLANGroup_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVLANGroup_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVLANGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVLANGroup_CustomFields
func (a *PatchedWritableVLANGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVLANGroup_CustomFields to handle AdditionalProperties
func (a *PatchedWritableVLANGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVLANGroup_CustomFields to handle AdditionalProperties
func (a PatchedWritableVLANGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVRF_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVRF_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVRF_ComputedFields
func (a *PatchedWritableVRF_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVRF_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableVRF_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVRF_ComputedFields to handle AdditionalProperties
func (a PatchedWritableVRF_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVRF_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVRF_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVRF_CustomFields
func (a *PatchedWritableVRF_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVRF_CustomFields to handle AdditionalProperties
func (a *PatchedWritableVRF_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVRF_CustomFields to handle AdditionalProperties
func (a PatchedWritableVRF_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVirtualChassis_ComputedFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVirtualChassis_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVirtualChassis_ComputedFields
func (a *PatchedWritableVirtualChassis_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVirtualChassis_ComputedFields to handle AdditionalProperties
func (a *PatchedWritableVirtualChassis_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVirtualChassis_ComputedFields to handle AdditionalProperties
func (a PatchedWritableVirtualChassis_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVirtualChassis_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVirtualChassis_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVirtualChassis_CustomFields
func (a *PatchedWritableVirtualChassis_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVirtualChassis_CustomFields to handle AdditionalProperties
func (a *PatchedWritableVirtualChassis_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVirtualChassis_CustomFields to handle AdditionalProperties
func (a PatchedWritableVirtualChassis_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVirtualMachineWithConfigContext_ConfigContext. Returns the specified
// element and whether it was found
func (a PatchedWritableVirtualMachineWithConfigContext_ConfigContext) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVirtualMachineWithConfigContext_ConfigContext
func (a *PatchedWritableVirtualMachineWithConfigContext_ConfigContext) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVirtualMachineWithConfigContext_ConfigContext to handle AdditionalProperties
func (a *PatchedWritableVirtualMachineWithConfigContext_ConfigContext) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVirtualMachineWithConfigContext_ConfigContext to handle AdditionalProperties
func (a PatchedWritableVirtualMachineWithConfigContext_ConfigContext) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVirtualMachineWithConfigContext_CustomFields. Returns the specified
// element and whether it was found
func (a PatchedWritableVirtualMachineWithConfigContext_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVirtualMachineWithConfigContext_CustomFields
func (a *PatchedWritableVirtualMachineWithConfigContext_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVirtualMachineWithConfigContext_CustomFields to handle AdditionalProperties
func (a *PatchedWritableVirtualMachineWithConfigContext_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVirtualMachineWithConfigContext_CustomFields to handle AdditionalProperties
func (a PatchedWritableVirtualMachineWithConfigContext_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PatchedWritableVirtualMachineWithConfigContext_LocalContextData. Returns the specified
// element and whether it was found
func (a PatchedWritableVirtualMachineWithConfigContext_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PatchedWritableVirtualMachineWithConfigContext_LocalContextData
func (a *PatchedWritableVirtualMachineWithConfigContext_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PatchedWritableVirtualMachineWithConfigContext_LocalContextData to handle AdditionalProperties
func (a *PatchedWritableVirtualMachineWithConfigContext_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PatchedWritableVirtualMachineWithConfigContext_LocalContextData to handle AdditionalProperties
func (a PatchedWritableVirtualMachineWithConfigContext_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Platform_CustomFields. Returns the specified
// element and whether it was found
func (a Platform_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Platform_CustomFields
func (a *Platform_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Platform_CustomFields to handle AdditionalProperties
func (a *Platform_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Platform_CustomFields to handle AdditionalProperties
func (a Platform_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Platform_NapalmArgs. Returns the specified
// element and whether it was found
func (a Platform_NapalmArgs) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Platform_NapalmArgs
func (a *Platform_NapalmArgs) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Platform_NapalmArgs to handle AdditionalProperties
func (a *Platform_NapalmArgs) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Platform_NapalmArgs to handle AdditionalProperties
func (a Platform_NapalmArgs) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerFeed_CablePeer. Returns the specified
// element and whether it was found
func (a PowerFeed_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerFeed_CablePeer
func (a *PowerFeed_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerFeed_CablePeer to handle AdditionalProperties
func (a *PowerFeed_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerFeed_CablePeer to handle AdditionalProperties
func (a PowerFeed_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerFeed_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PowerFeed_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerFeed_ConnectedEndpoint
func (a *PowerFeed_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerFeed_ConnectedEndpoint to handle AdditionalProperties
func (a *PowerFeed_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerFeed_ConnectedEndpoint to handle AdditionalProperties
func (a PowerFeed_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerFeed_CustomFields. Returns the specified
// element and whether it was found
func (a PowerFeed_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerFeed_CustomFields
func (a *PowerFeed_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerFeed_CustomFields to handle AdditionalProperties
func (a *PowerFeed_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerFeed_CustomFields to handle AdditionalProperties
func (a PowerFeed_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerOutlet_CablePeer. Returns the specified
// element and whether it was found
func (a PowerOutlet_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerOutlet_CablePeer
func (a *PowerOutlet_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerOutlet_CablePeer to handle AdditionalProperties
func (a *PowerOutlet_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerOutlet_CablePeer to handle AdditionalProperties
func (a PowerOutlet_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerOutlet_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PowerOutlet_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerOutlet_ConnectedEndpoint
func (a *PowerOutlet_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerOutlet_ConnectedEndpoint to handle AdditionalProperties
func (a *PowerOutlet_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerOutlet_ConnectedEndpoint to handle AdditionalProperties
func (a PowerOutlet_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerOutlet_CustomFields. Returns the specified
// element and whether it was found
func (a PowerOutlet_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerOutlet_CustomFields
func (a *PowerOutlet_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerOutlet_CustomFields to handle AdditionalProperties
func (a *PowerOutlet_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerOutlet_CustomFields to handle AdditionalProperties
func (a PowerOutlet_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerOutletTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PowerOutletTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerOutletTemplate_CustomFields
func (a *PowerOutletTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerOutletTemplate_CustomFields to handle AdditionalProperties
func (a *PowerOutletTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerOutletTemplate_CustomFields to handle AdditionalProperties
func (a PowerOutletTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerPanel_CustomFields. Returns the specified
// element and whether it was found
func (a PowerPanel_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerPanel_CustomFields
func (a *PowerPanel_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerPanel_CustomFields to handle AdditionalProperties
func (a *PowerPanel_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerPanel_CustomFields to handle AdditionalProperties
func (a PowerPanel_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerPort_CablePeer. Returns the specified
// element and whether it was found
func (a PowerPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerPort_CablePeer
func (a *PowerPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerPort_CablePeer to handle AdditionalProperties
func (a *PowerPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerPort_CablePeer to handle AdditionalProperties
func (a PowerPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerPort_ComputedFields. Returns the specified
// element and whether it was found
func (a PowerPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerPort_ComputedFields
func (a *PowerPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerPort_ComputedFields to handle AdditionalProperties
func (a *PowerPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerPort_ComputedFields to handle AdditionalProperties
func (a PowerPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerPort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a PowerPort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerPort_ConnectedEndpoint
func (a *PowerPort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerPort_ConnectedEndpoint to handle AdditionalProperties
func (a *PowerPort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerPort_ConnectedEndpoint to handle AdditionalProperties
func (a PowerPort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerPort_CustomFields. Returns the specified
// element and whether it was found
func (a PowerPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerPort_CustomFields
func (a *PowerPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerPort_CustomFields to handle AdditionalProperties
func (a *PowerPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerPort_CustomFields to handle AdditionalProperties
func (a PowerPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PowerPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a PowerPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PowerPortTemplate_CustomFields
func (a *PowerPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PowerPortTemplate_CustomFields to handle AdditionalProperties
func (a *PowerPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PowerPortTemplate_CustomFields to handle AdditionalProperties
func (a PowerPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Prefix_CustomFields. Returns the specified
// element and whether it was found
func (a Prefix_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Prefix_CustomFields
func (a *Prefix_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Prefix_CustomFields to handle AdditionalProperties
func (a *Prefix_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Prefix_CustomFields to handle AdditionalProperties
func (a Prefix_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Provider_CustomFields. Returns the specified
// element and whether it was found
func (a Provider_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Provider_CustomFields
func (a *Provider_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Provider_CustomFields to handle AdditionalProperties
func (a *Provider_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Provider_CustomFields to handle AdditionalProperties
func (a Provider_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ProviderNetwork_CustomFields. Returns the specified
// element and whether it was found
func (a ProviderNetwork_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ProviderNetwork_CustomFields
func (a *ProviderNetwork_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ProviderNetwork_CustomFields to handle AdditionalProperties
func (a *ProviderNetwork_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ProviderNetwork_CustomFields to handle AdditionalProperties
func (a ProviderNetwork_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RIR_CustomFields. Returns the specified
// element and whether it was found
func (a RIR_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RIR_CustomFields
func (a *RIR_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RIR_CustomFields to handle AdditionalProperties
func (a *RIR_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RIR_CustomFields to handle AdditionalProperties
func (a RIR_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Rack_CustomFields. Returns the specified
// element and whether it was found
func (a Rack_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Rack_CustomFields
func (a *Rack_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Rack_CustomFields to handle AdditionalProperties
func (a *Rack_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Rack_CustomFields to handle AdditionalProperties
func (a Rack_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RackGroup_CustomFields. Returns the specified
// element and whether it was found
func (a RackGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RackGroup_CustomFields
func (a *RackGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RackGroup_CustomFields to handle AdditionalProperties
func (a *RackGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RackGroup_CustomFields to handle AdditionalProperties
func (a RackGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RackReservation_CustomFields. Returns the specified
// element and whether it was found
func (a RackReservation_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RackReservation_CustomFields
func (a *RackReservation_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RackReservation_CustomFields to handle AdditionalProperties
func (a *RackReservation_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RackReservation_CustomFields to handle AdditionalProperties
func (a RackReservation_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RackReservation_Units. Returns the specified
// element and whether it was found
func (a RackReservation_Units) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RackReservation_Units
func (a *RackReservation_Units) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RackReservation_Units to handle AdditionalProperties
func (a *RackReservation_Units) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RackReservation_Units to handle AdditionalProperties
func (a RackReservation_Units) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RackRole_CustomFields. Returns the specified
// element and whether it was found
func (a RackRole_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RackRole_CustomFields
func (a *RackRole_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RackRole_CustomFields to handle AdditionalProperties
func (a *RackRole_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RackRole_CustomFields to handle AdditionalProperties
func (a RackRole_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RearPort_CablePeer. Returns the specified
// element and whether it was found
func (a RearPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RearPort_CablePeer
func (a *RearPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RearPort_CablePeer to handle AdditionalProperties
func (a *RearPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RearPort_CablePeer to handle AdditionalProperties
func (a RearPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RearPort_CustomFields. Returns the specified
// element and whether it was found
func (a RearPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RearPort_CustomFields
func (a *RearPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RearPort_CustomFields to handle AdditionalProperties
func (a *RearPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RearPort_CustomFields to handle AdditionalProperties
func (a RearPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RearPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a RearPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RearPortTemplate_CustomFields
func (a *RearPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RearPortTemplate_CustomFields to handle AdditionalProperties
func (a *RearPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RearPortTemplate_CustomFields to handle AdditionalProperties
func (a RearPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Region_CustomFields. Returns the specified
// element and whether it was found
func (a Region_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Region_CustomFields
func (a *Region_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Region_CustomFields to handle AdditionalProperties
func (a *Region_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Region_CustomFields to handle AdditionalProperties
func (a Region_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Relationship_DestinationFilter. Returns the specified
// element and whether it was found
func (a Relationship_DestinationFilter) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Relationship_DestinationFilter
func (a *Relationship_DestinationFilter) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Relationship_DestinationFilter to handle AdditionalProperties
func (a *Relationship_DestinationFilter) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Relationship_DestinationFilter to handle AdditionalProperties
func (a Relationship_DestinationFilter) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Relationship_SourceFilter. Returns the specified
// element and whether it was found
func (a Relationship_SourceFilter) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Relationship_SourceFilter
func (a *Relationship_SourceFilter) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Relationship_SourceFilter to handle AdditionalProperties
func (a *Relationship_SourceFilter) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Relationship_SourceFilter to handle AdditionalProperties
func (a Relationship_SourceFilter) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Role_CustomFields. Returns the specified
// element and whether it was found
func (a Role_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Role_CustomFields
func (a *Role_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Role_CustomFields to handle AdditionalProperties
func (a *Role_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Role_CustomFields to handle AdditionalProperties
func (a Role_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for RouteTarget_CustomFields. Returns the specified
// element and whether it was found
func (a RouteTarget_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for RouteTarget_CustomFields
func (a *RouteTarget_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for RouteTarget_CustomFields to handle AdditionalProperties
func (a *RouteTarget_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for RouteTarget_CustomFields to handle AdditionalProperties
func (a RouteTarget_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Secret_CustomFields. Returns the specified
// element and whether it was found
func (a Secret_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Secret_CustomFields
func (a *Secret_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Secret_CustomFields to handle AdditionalProperties
func (a *Secret_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Secret_CustomFields to handle AdditionalProperties
func (a Secret_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Secret_Parameters. Returns the specified
// element and whether it was found
func (a Secret_Parameters) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Secret_Parameters
func (a *Secret_Parameters) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Secret_Parameters to handle AdditionalProperties
func (a *Secret_Parameters) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Secret_Parameters to handle AdditionalProperties
func (a Secret_Parameters) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SecretsGroup_CustomFields. Returns the specified
// element and whether it was found
func (a SecretsGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SecretsGroup_CustomFields
func (a *SecretsGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SecretsGroup_CustomFields to handle AdditionalProperties
func (a *SecretsGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SecretsGroup_CustomFields to handle AdditionalProperties
func (a SecretsGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Service_CustomFields. Returns the specified
// element and whether it was found
func (a Service_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Service_CustomFields
func (a *Service_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Service_CustomFields to handle AdditionalProperties
func (a *Service_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Service_CustomFields to handle AdditionalProperties
func (a Service_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Site_CustomFields. Returns the specified
// element and whether it was found
func (a Site_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Site_CustomFields
func (a *Site_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Site_CustomFields to handle AdditionalProperties
func (a *Site_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Site_CustomFields to handle AdditionalProperties
func (a Site_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Status_CustomFields. Returns the specified
// element and whether it was found
func (a Status_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Status_CustomFields
func (a *Status_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Status_CustomFields to handle AdditionalProperties
func (a *Status_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Status_CustomFields to handle AdditionalProperties
func (a Status_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for TagSerializerVersion13_CustomFields. Returns the specified
// element and whether it was found
func (a TagSerializerVersion13_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for TagSerializerVersion13_CustomFields
func (a *TagSerializerVersion13_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for TagSerializerVersion13_CustomFields to handle AdditionalProperties
func (a *TagSerializerVersion13_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for TagSerializerVersion13_CustomFields to handle AdditionalProperties
func (a TagSerializerVersion13_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Tenant_CustomFields. Returns the specified
// element and whether it was found
func (a Tenant_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Tenant_CustomFields
func (a *Tenant_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Tenant_CustomFields to handle AdditionalProperties
func (a *Tenant_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Tenant_CustomFields to handle AdditionalProperties
func (a Tenant_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for TenantGroup_CustomFields. Returns the specified
// element and whether it was found
func (a TenantGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for TenantGroup_CustomFields
func (a *TenantGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for TenantGroup_CustomFields to handle AdditionalProperties
func (a *TenantGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for TenantGroup_CustomFields to handle AdditionalProperties
func (a TenantGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VLAN_CustomFields. Returns the specified
// element and whether it was found
func (a VLAN_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VLAN_CustomFields
func (a *VLAN_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VLAN_CustomFields to handle AdditionalProperties
func (a *VLAN_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VLAN_CustomFields to handle AdditionalProperties
func (a VLAN_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VLANGroup_CustomFields. Returns the specified
// element and whether it was found
func (a VLANGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VLANGroup_CustomFields
func (a *VLANGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VLANGroup_CustomFields to handle AdditionalProperties
func (a *VLANGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VLANGroup_CustomFields to handle AdditionalProperties
func (a VLANGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VRF_CustomFields. Returns the specified
// element and whether it was found
func (a VRF_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VRF_CustomFields
func (a *VRF_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VRF_CustomFields to handle AdditionalProperties
func (a *VRF_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VRF_CustomFields to handle AdditionalProperties
func (a VRF_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VirtualChassis_CustomFields. Returns the specified
// element and whether it was found
func (a VirtualChassis_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VirtualChassis_CustomFields
func (a *VirtualChassis_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VirtualChassis_CustomFields to handle AdditionalProperties
func (a *VirtualChassis_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VirtualChassis_CustomFields to handle AdditionalProperties
func (a VirtualChassis_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VirtualMachineWithConfigContext_ConfigContext. Returns the specified
// element and whether it was found
func (a VirtualMachineWithConfigContext_ConfigContext) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VirtualMachineWithConfigContext_ConfigContext
func (a *VirtualMachineWithConfigContext_ConfigContext) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VirtualMachineWithConfigContext_ConfigContext to handle AdditionalProperties
func (a *VirtualMachineWithConfigContext_ConfigContext) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VirtualMachineWithConfigContext_ConfigContext to handle AdditionalProperties
func (a VirtualMachineWithConfigContext_ConfigContext) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VirtualMachineWithConfigContext_CustomFields. Returns the specified
// element and whether it was found
func (a VirtualMachineWithConfigContext_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VirtualMachineWithConfigContext_CustomFields
func (a *VirtualMachineWithConfigContext_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VirtualMachineWithConfigContext_CustomFields to handle AdditionalProperties
func (a *VirtualMachineWithConfigContext_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VirtualMachineWithConfigContext_CustomFields to handle AdditionalProperties
func (a VirtualMachineWithConfigContext_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for VirtualMachineWithConfigContext_LocalContextData. Returns the specified
// element and whether it was found
func (a VirtualMachineWithConfigContext_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for VirtualMachineWithConfigContext_LocalContextData
func (a *VirtualMachineWithConfigContext_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for VirtualMachineWithConfigContext_LocalContextData to handle AdditionalProperties
func (a *VirtualMachineWithConfigContext_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for VirtualMachineWithConfigContext_LocalContextData to handle AdditionalProperties
func (a VirtualMachineWithConfigContext_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableAggregate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableAggregate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableAggregate_ComputedFields
func (a *WritableAggregate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableAggregate_ComputedFields to handle AdditionalProperties
func (a *WritableAggregate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableAggregate_ComputedFields to handle AdditionalProperties
func (a WritableAggregate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableAggregate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableAggregate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableAggregate_CustomFields
func (a *WritableAggregate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableAggregate_CustomFields to handle AdditionalProperties
func (a *WritableAggregate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableAggregate_CustomFields to handle AdditionalProperties
func (a WritableAggregate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCable_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableCable_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCable_ComputedFields
func (a *WritableCable_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCable_ComputedFields to handle AdditionalProperties
func (a *WritableCable_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCable_ComputedFields to handle AdditionalProperties
func (a WritableCable_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCable_CustomFields. Returns the specified
// element and whether it was found
func (a WritableCable_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCable_CustomFields
func (a *WritableCable_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCable_CustomFields to handle AdditionalProperties
func (a *WritableCable_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCable_CustomFields to handle AdditionalProperties
func (a WritableCable_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCable_TerminationA. Returns the specified
// element and whether it was found
func (a WritableCable_TerminationA) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCable_TerminationA
func (a *WritableCable_TerminationA) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCable_TerminationA to handle AdditionalProperties
func (a *WritableCable_TerminationA) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCable_TerminationA to handle AdditionalProperties
func (a WritableCable_TerminationA) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCable_TerminationB. Returns the specified
// element and whether it was found
func (a WritableCable_TerminationB) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCable_TerminationB
func (a *WritableCable_TerminationB) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCable_TerminationB to handle AdditionalProperties
func (a *WritableCable_TerminationB) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCable_TerminationB to handle AdditionalProperties
func (a WritableCable_TerminationB) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCircuit_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableCircuit_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCircuit_ComputedFields
func (a *WritableCircuit_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCircuit_ComputedFields to handle AdditionalProperties
func (a *WritableCircuit_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCircuit_ComputedFields to handle AdditionalProperties
func (a WritableCircuit_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCircuit_CustomFields. Returns the specified
// element and whether it was found
func (a WritableCircuit_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCircuit_CustomFields
func (a *WritableCircuit_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCircuit_CustomFields to handle AdditionalProperties
func (a *WritableCircuit_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCircuit_CustomFields to handle AdditionalProperties
func (a WritableCircuit_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCircuitTermination_CablePeer. Returns the specified
// element and whether it was found
func (a WritableCircuitTermination_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCircuitTermination_CablePeer
func (a *WritableCircuitTermination_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCircuitTermination_CablePeer to handle AdditionalProperties
func (a *WritableCircuitTermination_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCircuitTermination_CablePeer to handle AdditionalProperties
func (a WritableCircuitTermination_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCircuitTermination_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritableCircuitTermination_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCircuitTermination_ConnectedEndpoint
func (a *WritableCircuitTermination_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCircuitTermination_ConnectedEndpoint to handle AdditionalProperties
func (a *WritableCircuitTermination_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCircuitTermination_ConnectedEndpoint to handle AdditionalProperties
func (a WritableCircuitTermination_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCluster_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableCluster_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCluster_ComputedFields
func (a *WritableCluster_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCluster_ComputedFields to handle AdditionalProperties
func (a *WritableCluster_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCluster_ComputedFields to handle AdditionalProperties
func (a WritableCluster_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCluster_CustomFields. Returns the specified
// element and whether it was found
func (a WritableCluster_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCluster_CustomFields
func (a *WritableCluster_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCluster_CustomFields to handle AdditionalProperties
func (a *WritableCluster_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCluster_CustomFields to handle AdditionalProperties
func (a WritableCluster_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConfigContext_Data. Returns the specified
// element and whether it was found
func (a WritableConfigContext_Data) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConfigContext_Data
func (a *WritableConfigContext_Data) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConfigContext_Data to handle AdditionalProperties
func (a *WritableConfigContext_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConfigContext_Data to handle AdditionalProperties
func (a WritableConfigContext_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConfigContext_Owner. Returns the specified
// element and whether it was found
func (a WritableConfigContext_Owner) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConfigContext_Owner
func (a *WritableConfigContext_Owner) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConfigContext_Owner to handle AdditionalProperties
func (a *WritableConfigContext_Owner) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConfigContext_Owner to handle AdditionalProperties
func (a WritableConfigContext_Owner) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsolePort_CablePeer. Returns the specified
// element and whether it was found
func (a WritableConsolePort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsolePort_CablePeer
func (a *WritableConsolePort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsolePort_CablePeer to handle AdditionalProperties
func (a *WritableConsolePort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsolePort_CablePeer to handle AdditionalProperties
func (a WritableConsolePort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsolePort_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableConsolePort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsolePort_ComputedFields
func (a *WritableConsolePort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsolePort_ComputedFields to handle AdditionalProperties
func (a *WritableConsolePort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsolePort_ComputedFields to handle AdditionalProperties
func (a WritableConsolePort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsolePort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritableConsolePort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsolePort_ConnectedEndpoint
func (a *WritableConsolePort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsolePort_ConnectedEndpoint to handle AdditionalProperties
func (a *WritableConsolePort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsolePort_ConnectedEndpoint to handle AdditionalProperties
func (a WritableConsolePort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsolePort_CustomFields. Returns the specified
// element and whether it was found
func (a WritableConsolePort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsolePort_CustomFields
func (a *WritableConsolePort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsolePort_CustomFields to handle AdditionalProperties
func (a *WritableConsolePort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsolePort_CustomFields to handle AdditionalProperties
func (a WritableConsolePort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsolePortTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableConsolePortTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsolePortTemplate_ComputedFields
func (a *WritableConsolePortTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsolePortTemplate_ComputedFields to handle AdditionalProperties
func (a *WritableConsolePortTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsolePortTemplate_ComputedFields to handle AdditionalProperties
func (a WritableConsolePortTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsolePortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableConsolePortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsolePortTemplate_CustomFields
func (a *WritableConsolePortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsolePortTemplate_CustomFields to handle AdditionalProperties
func (a *WritableConsolePortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsolePortTemplate_CustomFields to handle AdditionalProperties
func (a WritableConsolePortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsoleServerPort_CablePeer. Returns the specified
// element and whether it was found
func (a WritableConsoleServerPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsoleServerPort_CablePeer
func (a *WritableConsoleServerPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsoleServerPort_CablePeer to handle AdditionalProperties
func (a *WritableConsoleServerPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsoleServerPort_CablePeer to handle AdditionalProperties
func (a WritableConsoleServerPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsoleServerPort_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableConsoleServerPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsoleServerPort_ComputedFields
func (a *WritableConsoleServerPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsoleServerPort_ComputedFields to handle AdditionalProperties
func (a *WritableConsoleServerPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsoleServerPort_ComputedFields to handle AdditionalProperties
func (a WritableConsoleServerPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsoleServerPort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritableConsoleServerPort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsoleServerPort_ConnectedEndpoint
func (a *WritableConsoleServerPort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsoleServerPort_ConnectedEndpoint to handle AdditionalProperties
func (a *WritableConsoleServerPort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsoleServerPort_ConnectedEndpoint to handle AdditionalProperties
func (a WritableConsoleServerPort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsoleServerPort_CustomFields. Returns the specified
// element and whether it was found
func (a WritableConsoleServerPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsoleServerPort_CustomFields
func (a *WritableConsoleServerPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsoleServerPort_CustomFields to handle AdditionalProperties
func (a *WritableConsoleServerPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsoleServerPort_CustomFields to handle AdditionalProperties
func (a WritableConsoleServerPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableConsoleServerPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableConsoleServerPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableConsoleServerPortTemplate_CustomFields
func (a *WritableConsoleServerPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableConsoleServerPortTemplate_CustomFields to handle AdditionalProperties
func (a *WritableConsoleServerPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableConsoleServerPortTemplate_CustomFields to handle AdditionalProperties
func (a WritableConsoleServerPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableCustomField_Default. Returns the specified
// element and whether it was found
func (a WritableCustomField_Default) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableCustomField_Default
func (a *WritableCustomField_Default) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableCustomField_Default to handle AdditionalProperties
func (a *WritableCustomField_Default) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableCustomField_Default to handle AdditionalProperties
func (a WritableCustomField_Default) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceBay_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableDeviceBay_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceBay_ComputedFields
func (a *WritableDeviceBay_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceBay_ComputedFields to handle AdditionalProperties
func (a *WritableDeviceBay_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceBay_ComputedFields to handle AdditionalProperties
func (a WritableDeviceBay_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceBay_CustomFields. Returns the specified
// element and whether it was found
func (a WritableDeviceBay_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceBay_CustomFields
func (a *WritableDeviceBay_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceBay_CustomFields to handle AdditionalProperties
func (a *WritableDeviceBay_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceBay_CustomFields to handle AdditionalProperties
func (a WritableDeviceBay_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceBayTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableDeviceBayTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceBayTemplate_ComputedFields
func (a *WritableDeviceBayTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceBayTemplate_ComputedFields to handle AdditionalProperties
func (a *WritableDeviceBayTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceBayTemplate_ComputedFields to handle AdditionalProperties
func (a WritableDeviceBayTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceBayTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableDeviceBayTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceBayTemplate_CustomFields
func (a *WritableDeviceBayTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceBayTemplate_CustomFields to handle AdditionalProperties
func (a *WritableDeviceBayTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceBayTemplate_CustomFields to handle AdditionalProperties
func (a WritableDeviceBayTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceType_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableDeviceType_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceType_ComputedFields
func (a *WritableDeviceType_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceType_ComputedFields to handle AdditionalProperties
func (a *WritableDeviceType_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceType_ComputedFields to handle AdditionalProperties
func (a WritableDeviceType_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceType_CustomFields. Returns the specified
// element and whether it was found
func (a WritableDeviceType_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceType_CustomFields
func (a *WritableDeviceType_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceType_CustomFields to handle AdditionalProperties
func (a *WritableDeviceType_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceType_CustomFields to handle AdditionalProperties
func (a WritableDeviceType_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceWithConfigContext_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableDeviceWithConfigContext_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceWithConfigContext_ComputedFields
func (a *WritableDeviceWithConfigContext_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceWithConfigContext_ComputedFields to handle AdditionalProperties
func (a *WritableDeviceWithConfigContext_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceWithConfigContext_ComputedFields to handle AdditionalProperties
func (a WritableDeviceWithConfigContext_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceWithConfigContext_ConfigContext. Returns the specified
// element and whether it was found
func (a WritableDeviceWithConfigContext_ConfigContext) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceWithConfigContext_ConfigContext
func (a *WritableDeviceWithConfigContext_ConfigContext) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceWithConfigContext_ConfigContext to handle AdditionalProperties
func (a *WritableDeviceWithConfigContext_ConfigContext) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceWithConfigContext_ConfigContext to handle AdditionalProperties
func (a WritableDeviceWithConfigContext_ConfigContext) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceWithConfigContext_CustomFields. Returns the specified
// element and whether it was found
func (a WritableDeviceWithConfigContext_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceWithConfigContext_CustomFields
func (a *WritableDeviceWithConfigContext_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceWithConfigContext_CustomFields to handle AdditionalProperties
func (a *WritableDeviceWithConfigContext_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceWithConfigContext_CustomFields to handle AdditionalProperties
func (a WritableDeviceWithConfigContext_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableDeviceWithConfigContext_LocalContextData. Returns the specified
// element and whether it was found
func (a WritableDeviceWithConfigContext_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableDeviceWithConfigContext_LocalContextData
func (a *WritableDeviceWithConfigContext_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableDeviceWithConfigContext_LocalContextData to handle AdditionalProperties
func (a *WritableDeviceWithConfigContext_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableDeviceWithConfigContext_LocalContextData to handle AdditionalProperties
func (a WritableDeviceWithConfigContext_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableFrontPort_CablePeer. Returns the specified
// element and whether it was found
func (a WritableFrontPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableFrontPort_CablePeer
func (a *WritableFrontPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableFrontPort_CablePeer to handle AdditionalProperties
func (a *WritableFrontPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableFrontPort_CablePeer to handle AdditionalProperties
func (a WritableFrontPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableFrontPort_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableFrontPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableFrontPort_ComputedFields
func (a *WritableFrontPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableFrontPort_ComputedFields to handle AdditionalProperties
func (a *WritableFrontPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableFrontPort_ComputedFields to handle AdditionalProperties
func (a WritableFrontPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableFrontPort_CustomFields. Returns the specified
// element and whether it was found
func (a WritableFrontPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableFrontPort_CustomFields
func (a *WritableFrontPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableFrontPort_CustomFields to handle AdditionalProperties
func (a *WritableFrontPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableFrontPort_CustomFields to handle AdditionalProperties
func (a WritableFrontPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableFrontPortTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableFrontPortTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableFrontPortTemplate_ComputedFields
func (a *WritableFrontPortTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableFrontPortTemplate_ComputedFields to handle AdditionalProperties
func (a *WritableFrontPortTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableFrontPortTemplate_ComputedFields to handle AdditionalProperties
func (a WritableFrontPortTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableFrontPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableFrontPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableFrontPortTemplate_CustomFields
func (a *WritableFrontPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableFrontPortTemplate_CustomFields to handle AdditionalProperties
func (a *WritableFrontPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableFrontPortTemplate_CustomFields to handle AdditionalProperties
func (a WritableFrontPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableGitRepository_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableGitRepository_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableGitRepository_ComputedFields
func (a *WritableGitRepository_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableGitRepository_ComputedFields to handle AdditionalProperties
func (a *WritableGitRepository_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableGitRepository_ComputedFields to handle AdditionalProperties
func (a WritableGitRepository_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableGitRepository_CustomFields. Returns the specified
// element and whether it was found
func (a WritableGitRepository_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableGitRepository_CustomFields
func (a *WritableGitRepository_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableGitRepository_CustomFields to handle AdditionalProperties
func (a *WritableGitRepository_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableGitRepository_CustomFields to handle AdditionalProperties
func (a WritableGitRepository_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableIPAddress_AssignedObject. Returns the specified
// element and whether it was found
func (a WritableIPAddress_AssignedObject) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableIPAddress_AssignedObject
func (a *WritableIPAddress_AssignedObject) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableIPAddress_AssignedObject to handle AdditionalProperties
func (a *WritableIPAddress_AssignedObject) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableIPAddress_AssignedObject to handle AdditionalProperties
func (a WritableIPAddress_AssignedObject) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableIPAddress_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableIPAddress_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableIPAddress_ComputedFields
func (a *WritableIPAddress_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableIPAddress_ComputedFields to handle AdditionalProperties
func (a *WritableIPAddress_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableIPAddress_ComputedFields to handle AdditionalProperties
func (a WritableIPAddress_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableIPAddress_CustomFields. Returns the specified
// element and whether it was found
func (a WritableIPAddress_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableIPAddress_CustomFields
func (a *WritableIPAddress_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableIPAddress_CustomFields to handle AdditionalProperties
func (a *WritableIPAddress_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableIPAddress_CustomFields to handle AdditionalProperties
func (a WritableIPAddress_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInterface_CablePeer. Returns the specified
// element and whether it was found
func (a WritableInterface_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInterface_CablePeer
func (a *WritableInterface_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInterface_CablePeer to handle AdditionalProperties
func (a *WritableInterface_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInterface_CablePeer to handle AdditionalProperties
func (a WritableInterface_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInterface_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableInterface_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInterface_ComputedFields
func (a *WritableInterface_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInterface_ComputedFields to handle AdditionalProperties
func (a *WritableInterface_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInterface_ComputedFields to handle AdditionalProperties
func (a WritableInterface_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInterface_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritableInterface_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInterface_ConnectedEndpoint
func (a *WritableInterface_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInterface_ConnectedEndpoint to handle AdditionalProperties
func (a *WritableInterface_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInterface_ConnectedEndpoint to handle AdditionalProperties
func (a WritableInterface_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInterface_CustomFields. Returns the specified
// element and whether it was found
func (a WritableInterface_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInterface_CustomFields
func (a *WritableInterface_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInterface_CustomFields to handle AdditionalProperties
func (a *WritableInterface_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInterface_CustomFields to handle AdditionalProperties
func (a WritableInterface_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInterfaceTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableInterfaceTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInterfaceTemplate_ComputedFields
func (a *WritableInterfaceTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInterfaceTemplate_ComputedFields to handle AdditionalProperties
func (a *WritableInterfaceTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInterfaceTemplate_ComputedFields to handle AdditionalProperties
func (a WritableInterfaceTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInterfaceTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableInterfaceTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInterfaceTemplate_CustomFields
func (a *WritableInterfaceTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInterfaceTemplate_CustomFields to handle AdditionalProperties
func (a *WritableInterfaceTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInterfaceTemplate_CustomFields to handle AdditionalProperties
func (a WritableInterfaceTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInventoryItem_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableInventoryItem_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInventoryItem_ComputedFields
func (a *WritableInventoryItem_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInventoryItem_ComputedFields to handle AdditionalProperties
func (a *WritableInventoryItem_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInventoryItem_ComputedFields to handle AdditionalProperties
func (a WritableInventoryItem_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableInventoryItem_CustomFields. Returns the specified
// element and whether it was found
func (a WritableInventoryItem_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableInventoryItem_CustomFields
func (a *WritableInventoryItem_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableInventoryItem_CustomFields to handle AdditionalProperties
func (a *WritableInventoryItem_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableInventoryItem_CustomFields to handle AdditionalProperties
func (a WritableInventoryItem_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableObjectPermission_Actions. Returns the specified
// element and whether it was found
func (a WritableObjectPermission_Actions) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableObjectPermission_Actions
func (a *WritableObjectPermission_Actions) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableObjectPermission_Actions to handle AdditionalProperties
func (a *WritableObjectPermission_Actions) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableObjectPermission_Actions to handle AdditionalProperties
func (a WritableObjectPermission_Actions) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableObjectPermission_Constraints. Returns the specified
// element and whether it was found
func (a WritableObjectPermission_Constraints) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableObjectPermission_Constraints
func (a *WritableObjectPermission_Constraints) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableObjectPermission_Constraints to handle AdditionalProperties
func (a *WritableObjectPermission_Constraints) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableObjectPermission_Constraints to handle AdditionalProperties
func (a WritableObjectPermission_Constraints) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePlatform_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePlatform_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePlatform_ComputedFields
func (a *WritablePlatform_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePlatform_ComputedFields to handle AdditionalProperties
func (a *WritablePlatform_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePlatform_ComputedFields to handle AdditionalProperties
func (a WritablePlatform_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePlatform_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePlatform_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePlatform_CustomFields
func (a *WritablePlatform_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePlatform_CustomFields to handle AdditionalProperties
func (a *WritablePlatform_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePlatform_CustomFields to handle AdditionalProperties
func (a WritablePlatform_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePlatform_NapalmArgs. Returns the specified
// element and whether it was found
func (a WritablePlatform_NapalmArgs) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePlatform_NapalmArgs
func (a *WritablePlatform_NapalmArgs) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePlatform_NapalmArgs to handle AdditionalProperties
func (a *WritablePlatform_NapalmArgs) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePlatform_NapalmArgs to handle AdditionalProperties
func (a WritablePlatform_NapalmArgs) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerFeed_CablePeer. Returns the specified
// element and whether it was found
func (a WritablePowerFeed_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerFeed_CablePeer
func (a *WritablePowerFeed_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerFeed_CablePeer to handle AdditionalProperties
func (a *WritablePowerFeed_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerFeed_CablePeer to handle AdditionalProperties
func (a WritablePowerFeed_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerFeed_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePowerFeed_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerFeed_ComputedFields
func (a *WritablePowerFeed_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerFeed_ComputedFields to handle AdditionalProperties
func (a *WritablePowerFeed_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerFeed_ComputedFields to handle AdditionalProperties
func (a WritablePowerFeed_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerFeed_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritablePowerFeed_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerFeed_ConnectedEndpoint
func (a *WritablePowerFeed_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerFeed_ConnectedEndpoint to handle AdditionalProperties
func (a *WritablePowerFeed_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerFeed_ConnectedEndpoint to handle AdditionalProperties
func (a WritablePowerFeed_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerFeed_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePowerFeed_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerFeed_CustomFields
func (a *WritablePowerFeed_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerFeed_CustomFields to handle AdditionalProperties
func (a *WritablePowerFeed_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerFeed_CustomFields to handle AdditionalProperties
func (a WritablePowerFeed_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerOutlet_CablePeer. Returns the specified
// element and whether it was found
func (a WritablePowerOutlet_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerOutlet_CablePeer
func (a *WritablePowerOutlet_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerOutlet_CablePeer to handle AdditionalProperties
func (a *WritablePowerOutlet_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerOutlet_CablePeer to handle AdditionalProperties
func (a WritablePowerOutlet_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerOutlet_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePowerOutlet_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerOutlet_ComputedFields
func (a *WritablePowerOutlet_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerOutlet_ComputedFields to handle AdditionalProperties
func (a *WritablePowerOutlet_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerOutlet_ComputedFields to handle AdditionalProperties
func (a WritablePowerOutlet_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerOutlet_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritablePowerOutlet_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerOutlet_ConnectedEndpoint
func (a *WritablePowerOutlet_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerOutlet_ConnectedEndpoint to handle AdditionalProperties
func (a *WritablePowerOutlet_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerOutlet_ConnectedEndpoint to handle AdditionalProperties
func (a WritablePowerOutlet_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerOutlet_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePowerOutlet_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerOutlet_CustomFields
func (a *WritablePowerOutlet_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerOutlet_CustomFields to handle AdditionalProperties
func (a *WritablePowerOutlet_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerOutlet_CustomFields to handle AdditionalProperties
func (a WritablePowerOutlet_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerOutletTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePowerOutletTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerOutletTemplate_ComputedFields
func (a *WritablePowerOutletTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerOutletTemplate_ComputedFields to handle AdditionalProperties
func (a *WritablePowerOutletTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerOutletTemplate_ComputedFields to handle AdditionalProperties
func (a WritablePowerOutletTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerOutletTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePowerOutletTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerOutletTemplate_CustomFields
func (a *WritablePowerOutletTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerOutletTemplate_CustomFields to handle AdditionalProperties
func (a *WritablePowerOutletTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerOutletTemplate_CustomFields to handle AdditionalProperties
func (a WritablePowerOutletTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPanel_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePowerPanel_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPanel_ComputedFields
func (a *WritablePowerPanel_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPanel_ComputedFields to handle AdditionalProperties
func (a *WritablePowerPanel_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPanel_ComputedFields to handle AdditionalProperties
func (a WritablePowerPanel_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPanel_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePowerPanel_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPanel_CustomFields
func (a *WritablePowerPanel_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPanel_CustomFields to handle AdditionalProperties
func (a *WritablePowerPanel_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPanel_CustomFields to handle AdditionalProperties
func (a WritablePowerPanel_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPort_CablePeer. Returns the specified
// element and whether it was found
func (a WritablePowerPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPort_CablePeer
func (a *WritablePowerPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPort_CablePeer to handle AdditionalProperties
func (a *WritablePowerPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPort_CablePeer to handle AdditionalProperties
func (a WritablePowerPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPort_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePowerPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPort_ComputedFields
func (a *WritablePowerPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPort_ComputedFields to handle AdditionalProperties
func (a *WritablePowerPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPort_ComputedFields to handle AdditionalProperties
func (a WritablePowerPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPort_ConnectedEndpoint. Returns the specified
// element and whether it was found
func (a WritablePowerPort_ConnectedEndpoint) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPort_ConnectedEndpoint
func (a *WritablePowerPort_ConnectedEndpoint) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPort_ConnectedEndpoint to handle AdditionalProperties
func (a *WritablePowerPort_ConnectedEndpoint) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPort_ConnectedEndpoint to handle AdditionalProperties
func (a WritablePowerPort_ConnectedEndpoint) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPort_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePowerPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPort_CustomFields
func (a *WritablePowerPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPort_CustomFields to handle AdditionalProperties
func (a *WritablePowerPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPort_CustomFields to handle AdditionalProperties
func (a WritablePowerPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPortTemplate_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePowerPortTemplate_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPortTemplate_ComputedFields
func (a *WritablePowerPortTemplate_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPortTemplate_ComputedFields to handle AdditionalProperties
func (a *WritablePowerPortTemplate_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPortTemplate_ComputedFields to handle AdditionalProperties
func (a WritablePowerPortTemplate_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePowerPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePowerPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePowerPortTemplate_CustomFields
func (a *WritablePowerPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePowerPortTemplate_CustomFields to handle AdditionalProperties
func (a *WritablePowerPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePowerPortTemplate_CustomFields to handle AdditionalProperties
func (a WritablePowerPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePrefix_ComputedFields. Returns the specified
// element and whether it was found
func (a WritablePrefix_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePrefix_ComputedFields
func (a *WritablePrefix_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePrefix_ComputedFields to handle AdditionalProperties
func (a *WritablePrefix_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePrefix_ComputedFields to handle AdditionalProperties
func (a WritablePrefix_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritablePrefix_CustomFields. Returns the specified
// element and whether it was found
func (a WritablePrefix_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritablePrefix_CustomFields
func (a *WritablePrefix_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritablePrefix_CustomFields to handle AdditionalProperties
func (a *WritablePrefix_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritablePrefix_CustomFields to handle AdditionalProperties
func (a WritablePrefix_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableProviderNetwork_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableProviderNetwork_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableProviderNetwork_ComputedFields
func (a *WritableProviderNetwork_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableProviderNetwork_ComputedFields to handle AdditionalProperties
func (a *WritableProviderNetwork_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableProviderNetwork_ComputedFields to handle AdditionalProperties
func (a WritableProviderNetwork_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableProviderNetwork_CustomFields. Returns the specified
// element and whether it was found
func (a WritableProviderNetwork_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableProviderNetwork_CustomFields
func (a *WritableProviderNetwork_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableProviderNetwork_CustomFields to handle AdditionalProperties
func (a *WritableProviderNetwork_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableProviderNetwork_CustomFields to handle AdditionalProperties
func (a WritableProviderNetwork_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRack_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableRack_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRack_ComputedFields
func (a *WritableRack_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRack_ComputedFields to handle AdditionalProperties
func (a *WritableRack_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRack_ComputedFields to handle AdditionalProperties
func (a WritableRack_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRack_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRack_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRack_CustomFields
func (a *WritableRack_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRack_CustomFields to handle AdditionalProperties
func (a *WritableRack_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRack_CustomFields to handle AdditionalProperties
func (a WritableRack_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRackGroup_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableRackGroup_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRackGroup_ComputedFields
func (a *WritableRackGroup_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRackGroup_ComputedFields to handle AdditionalProperties
func (a *WritableRackGroup_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRackGroup_ComputedFields to handle AdditionalProperties
func (a WritableRackGroup_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRackGroup_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRackGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRackGroup_CustomFields
func (a *WritableRackGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRackGroup_CustomFields to handle AdditionalProperties
func (a *WritableRackGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRackGroup_CustomFields to handle AdditionalProperties
func (a WritableRackGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRackReservation_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableRackReservation_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRackReservation_ComputedFields
func (a *WritableRackReservation_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRackReservation_ComputedFields to handle AdditionalProperties
func (a *WritableRackReservation_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRackReservation_ComputedFields to handle AdditionalProperties
func (a WritableRackReservation_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRackReservation_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRackReservation_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRackReservation_CustomFields
func (a *WritableRackReservation_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRackReservation_CustomFields to handle AdditionalProperties
func (a *WritableRackReservation_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRackReservation_CustomFields to handle AdditionalProperties
func (a WritableRackReservation_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRackReservation_Units. Returns the specified
// element and whether it was found
func (a WritableRackReservation_Units) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRackReservation_Units
func (a *WritableRackReservation_Units) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRackReservation_Units to handle AdditionalProperties
func (a *WritableRackReservation_Units) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRackReservation_Units to handle AdditionalProperties
func (a WritableRackReservation_Units) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRearPort_CablePeer. Returns the specified
// element and whether it was found
func (a WritableRearPort_CablePeer) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRearPort_CablePeer
func (a *WritableRearPort_CablePeer) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRearPort_CablePeer to handle AdditionalProperties
func (a *WritableRearPort_CablePeer) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRearPort_CablePeer to handle AdditionalProperties
func (a WritableRearPort_CablePeer) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRearPort_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableRearPort_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRearPort_ComputedFields
func (a *WritableRearPort_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRearPort_ComputedFields to handle AdditionalProperties
func (a *WritableRearPort_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRearPort_ComputedFields to handle AdditionalProperties
func (a WritableRearPort_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRearPort_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRearPort_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRearPort_CustomFields
func (a *WritableRearPort_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRearPort_CustomFields to handle AdditionalProperties
func (a *WritableRearPort_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRearPort_CustomFields to handle AdditionalProperties
func (a WritableRearPort_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRearPortTemplate_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRearPortTemplate_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRearPortTemplate_CustomFields
func (a *WritableRearPortTemplate_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRearPortTemplate_CustomFields to handle AdditionalProperties
func (a *WritableRearPortTemplate_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRearPortTemplate_CustomFields to handle AdditionalProperties
func (a WritableRearPortTemplate_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRegion_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableRegion_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRegion_ComputedFields
func (a *WritableRegion_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRegion_ComputedFields to handle AdditionalProperties
func (a *WritableRegion_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRegion_ComputedFields to handle AdditionalProperties
func (a WritableRegion_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRegion_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRegion_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRegion_CustomFields
func (a *WritableRegion_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRegion_CustomFields to handle AdditionalProperties
func (a *WritableRegion_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRegion_CustomFields to handle AdditionalProperties
func (a WritableRegion_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRouteTarget_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableRouteTarget_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRouteTarget_ComputedFields
func (a *WritableRouteTarget_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRouteTarget_ComputedFields to handle AdditionalProperties
func (a *WritableRouteTarget_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRouteTarget_ComputedFields to handle AdditionalProperties
func (a WritableRouteTarget_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableRouteTarget_CustomFields. Returns the specified
// element and whether it was found
func (a WritableRouteTarget_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableRouteTarget_CustomFields
func (a *WritableRouteTarget_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableRouteTarget_CustomFields to handle AdditionalProperties
func (a *WritableRouteTarget_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableRouteTarget_CustomFields to handle AdditionalProperties
func (a WritableRouteTarget_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableService_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableService_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableService_ComputedFields
func (a *WritableService_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableService_ComputedFields to handle AdditionalProperties
func (a *WritableService_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableService_ComputedFields to handle AdditionalProperties
func (a WritableService_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableService_CustomFields. Returns the specified
// element and whether it was found
func (a WritableService_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableService_CustomFields
func (a *WritableService_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableService_CustomFields to handle AdditionalProperties
func (a *WritableService_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableService_CustomFields to handle AdditionalProperties
func (a WritableService_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableSite_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableSite_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableSite_ComputedFields
func (a *WritableSite_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableSite_ComputedFields to handle AdditionalProperties
func (a *WritableSite_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableSite_ComputedFields to handle AdditionalProperties
func (a WritableSite_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableSite_CustomFields. Returns the specified
// element and whether it was found
func (a WritableSite_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableSite_CustomFields
func (a *WritableSite_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableSite_CustomFields to handle AdditionalProperties
func (a *WritableSite_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableSite_CustomFields to handle AdditionalProperties
func (a WritableSite_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableTenant_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableTenant_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableTenant_ComputedFields
func (a *WritableTenant_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableTenant_ComputedFields to handle AdditionalProperties
func (a *WritableTenant_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableTenant_ComputedFields to handle AdditionalProperties
func (a WritableTenant_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableTenant_CustomFields. Returns the specified
// element and whether it was found
func (a WritableTenant_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableTenant_CustomFields
func (a *WritableTenant_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableTenant_CustomFields to handle AdditionalProperties
func (a *WritableTenant_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableTenant_CustomFields to handle AdditionalProperties
func (a WritableTenant_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableTenantGroup_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableTenantGroup_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableTenantGroup_ComputedFields
func (a *WritableTenantGroup_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableTenantGroup_ComputedFields to handle AdditionalProperties
func (a *WritableTenantGroup_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableTenantGroup_ComputedFields to handle AdditionalProperties
func (a WritableTenantGroup_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableTenantGroup_CustomFields. Returns the specified
// element and whether it was found
func (a WritableTenantGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableTenantGroup_CustomFields
func (a *WritableTenantGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableTenantGroup_CustomFields to handle AdditionalProperties
func (a *WritableTenantGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableTenantGroup_CustomFields to handle AdditionalProperties
func (a WritableTenantGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVLAN_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableVLAN_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVLAN_ComputedFields
func (a *WritableVLAN_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVLAN_ComputedFields to handle AdditionalProperties
func (a *WritableVLAN_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVLAN_ComputedFields to handle AdditionalProperties
func (a WritableVLAN_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVLAN_CustomFields. Returns the specified
// element and whether it was found
func (a WritableVLAN_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVLAN_CustomFields
func (a *WritableVLAN_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVLAN_CustomFields to handle AdditionalProperties
func (a *WritableVLAN_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVLAN_CustomFields to handle AdditionalProperties
func (a WritableVLAN_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVLANGroup_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableVLANGroup_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVLANGroup_ComputedFields
func (a *WritableVLANGroup_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVLANGroup_ComputedFields to handle AdditionalProperties
func (a *WritableVLANGroup_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVLANGroup_ComputedFields to handle AdditionalProperties
func (a WritableVLANGroup_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVLANGroup_CustomFields. Returns the specified
// element and whether it was found
func (a WritableVLANGroup_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVLANGroup_CustomFields
func (a *WritableVLANGroup_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVLANGroup_CustomFields to handle AdditionalProperties
func (a *WritableVLANGroup_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVLANGroup_CustomFields to handle AdditionalProperties
func (a WritableVLANGroup_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVRF_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableVRF_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVRF_ComputedFields
func (a *WritableVRF_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVRF_ComputedFields to handle AdditionalProperties
func (a *WritableVRF_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVRF_ComputedFields to handle AdditionalProperties
func (a WritableVRF_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVRF_CustomFields. Returns the specified
// element and whether it was found
func (a WritableVRF_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVRF_CustomFields
func (a *WritableVRF_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVRF_CustomFields to handle AdditionalProperties
func (a *WritableVRF_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVRF_CustomFields to handle AdditionalProperties
func (a WritableVRF_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVirtualChassis_ComputedFields. Returns the specified
// element and whether it was found
func (a WritableVirtualChassis_ComputedFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVirtualChassis_ComputedFields
func (a *WritableVirtualChassis_ComputedFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVirtualChassis_ComputedFields to handle AdditionalProperties
func (a *WritableVirtualChassis_ComputedFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVirtualChassis_ComputedFields to handle AdditionalProperties
func (a WritableVirtualChassis_ComputedFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVirtualChassis_CustomFields. Returns the specified
// element and whether it was found
func (a WritableVirtualChassis_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVirtualChassis_CustomFields
func (a *WritableVirtualChassis_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVirtualChassis_CustomFields to handle AdditionalProperties
func (a *WritableVirtualChassis_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVirtualChassis_CustomFields to handle AdditionalProperties
func (a WritableVirtualChassis_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVirtualMachineWithConfigContext_ConfigContext. Returns the specified
// element and whether it was found
func (a WritableVirtualMachineWithConfigContext_ConfigContext) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVirtualMachineWithConfigContext_ConfigContext
func (a *WritableVirtualMachineWithConfigContext_ConfigContext) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVirtualMachineWithConfigContext_ConfigContext to handle AdditionalProperties
func (a *WritableVirtualMachineWithConfigContext_ConfigContext) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVirtualMachineWithConfigContext_ConfigContext to handle AdditionalProperties
func (a WritableVirtualMachineWithConfigContext_ConfigContext) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVirtualMachineWithConfigContext_CustomFields. Returns the specified
// element and whether it was found
func (a WritableVirtualMachineWithConfigContext_CustomFields) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVirtualMachineWithConfigContext_CustomFields
func (a *WritableVirtualMachineWithConfigContext_CustomFields) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVirtualMachineWithConfigContext_CustomFields to handle AdditionalProperties
func (a *WritableVirtualMachineWithConfigContext_CustomFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVirtualMachineWithConfigContext_CustomFields to handle AdditionalProperties
func (a WritableVirtualMachineWithConfigContext_CustomFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for WritableVirtualMachineWithConfigContext_LocalContextData. Returns the specified
// element and whether it was found
func (a WritableVirtualMachineWithConfigContext_LocalContextData) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for WritableVirtualMachineWithConfigContext_LocalContextData
func (a *WritableVirtualMachineWithConfigContext_LocalContextData) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for WritableVirtualMachineWithConfigContext_LocalContextData to handle AdditionalProperties
func (a *WritableVirtualMachineWithConfigContext_LocalContextData) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for WritableVirtualMachineWithConfigContext_LocalContextData to handle AdditionalProperties
func (a WritableVirtualMachineWithConfigContext_LocalContextData) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
