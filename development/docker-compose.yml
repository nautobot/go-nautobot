---
x-nautobot-base: &nautobot-base
  image: "ghcr.io/nautobot/nautobot:${NAUTOBOT_VER}-py${PYTHON_VER}"
  env_file:
    - "nautobot_dev.env"
  tty: true
  volumes:
    - "./nautobot_config.py:/opt/nautobot/nautobot_config.py"

version: "3.4"
services:
  oapi:
    build:
      context: ../
      dockerfile: development/Dockerfile
    image: "networktocode/oapi:local"
    depends_on:
      nautobot:
        condition: "service_healthy"
    environment:
      - NAUTOBOT_VER=${NAUTOBOT_VER}
    volumes:
      - "../:/client"
  nautobot:
    healthcheck:
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 15
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:8080/health/"
    command: "nautobot-server runserver 0.0.0.0:8080"
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: "service_started"
      db:
        condition: "service_healthy"
    <<: *nautobot-base
  # NOTE: I'ts not necessary to have the worker running
  # celery_worker:
  #   healthcheck:
  #     interval: "30s"
  #     timeout: "10s"
  #     start_period: "30s"
  #     retries: 3
  #     test: ["CMD", "nautobot-server", "health_check"]
  #   depends_on:
  #     nautobot:
  #       condition: "service_healthy"
  #     db:
  #       condition: "service_healthy"
  #   entrypoint:
  #     - "sh"
  #     - "-c"  # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
  #     - "nautobot-server celery worker -B -l $$NAUTOBOT_LOG_LEVEL"  # $$ because of docker-compose
  #   <<: *nautobot-base
  db:
    image: "postgres:13-alpine"
    env_file:
      - "nautobot_dev.env"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    # ports:
    #   - "127.0.0.1:5432:5432"
    healthcheck:
      test: "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"
      interval: "10s"
      timeout: "5s"
      retries: 10
  redis:
    image: "redis:6-alpine"
    command:
      - "sh"
      - "-c"  # this is to evaluate the $REDIS_PASSWORD from the env
      - "redis-server --appendonly yes --requirepass $$NAUTOBOT_REDIS_PASSWORD"
    env_file:
      - "nautobot_dev.env"

volumes:
  postgres_data: {}
